{"abi":[{"type":"function","name":"deposit","inputs":[{"name":"resourceID","type":"bytes32","internalType":"bytes32"},{"name":"depositer","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"depositETH","inputs":[{"name":"resourceID","type":"bytes32","internalType":"bytes32"},{"name":"depositer","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"executeProposal","inputs":[{"name":"resourceID","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBurnable","inputs":[{"name":"contractAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setResource","inputs":[{"name":"resourceID","type":"bytes32","internalType":"bytes32"},{"name":"contractAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"deposit(bytes32,address,bytes)":"b07e54bb","depositETH(bytes32,address,bytes)":"d9f56b7f","executeProposal(bytes32,bytes)":"e248cff2","setBurnable(address)":"07b7ed99","setResource(bytes32,address)":"b8fa3736","withdraw(address,address,uint256)":"d9caed12"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"depositer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"depositer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(bytes32,address,bytes)\":{\"params\":{\"data\":\"Consists of additional data needed for a specific deposit.\",\"depositer\":\"Address of account making the deposit in the Bridge contract.\"}},\"executeProposal(bytes32,bytes)\":{\"params\":{\"data\":\"Consists of additional data needed for a specific deposit execution.\"}},\"setBurnable(address)\":{\"params\":{\"contractAddress\":\"Address of contract to be used when making or executing deposits.\"}},\"setResource(bytes32,address)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}},\"withdraw(address,address,uint256)\":{\"params\":{\"amount\":\"the amount of ERC20 tokens to release.\",\"recipient\":\"Address to release tokens to.\",\"tokenAddress\":\"Address of token contract to release.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(bytes32,address,bytes)\":{\"notice\":\"It is intended that deposit are made using the Bridge contract.\"},\"executeProposal(bytes32,bytes)\":{\"notice\":\"It is intended that proposals are executed by the Bridge contract.\"},\"setBurnable(address)\":{\"notice\":\"Marks {contractAddress} as mintable/burnable.\"},\"setResource(bytes32,address)\":{\"notice\":\"Correlates {resourceID} with {contractAddress}.\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to manually release funds from ERC safes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IQBridgeHandler.sol\":\"IQBridgeHandler\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/@openzeppelin/\",\":@pancakeswap/=src/@pancakeswap/\",\":contracts/bridge/=src/bridge/\",\":contracts/interfaces/=src/interfaces/\",\":contracts/library/=src/library/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IQBridgeHandler.sol\":{\"keccak256\":\"0x5ec32caa57ca0f27a10d31cbaccebc2feee2e34cdd8f6a1baf0614e0763d4c5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165fb49d5844e9ce31b541b71edcbda7dcd0df35c717cb0961ec952d1b700a1a\",\"dweb:/ipfs/QmPHVZGSwLLYALuoX88go5rZyQo7GE7KPXPoRx4gqCbEGm\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"resourceID","type":"bytes32"},{"internalType":"address","name":"depositer","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deposit"},{"inputs":[{"internalType":"bytes32","name":"resourceID","type":"bytes32"},{"internalType":"address","name":"depositer","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"depositETH"},{"inputs":[{"internalType":"bytes32","name":"resourceID","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"executeProposal"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setBurnable"},{"inputs":[{"internalType":"bytes32","name":"resourceID","type":"bytes32"},{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setResource"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{"deposit(bytes32,address,bytes)":{"params":{"data":"Consists of additional data needed for a specific deposit.","depositer":"Address of account making the deposit in the Bridge contract."}},"executeProposal(bytes32,bytes)":{"params":{"data":"Consists of additional data needed for a specific deposit execution."}},"setBurnable(address)":{"params":{"contractAddress":"Address of contract to be used when making or executing deposits."}},"setResource(bytes32,address)":{"params":{"contractAddress":"Address of contract to be called when a deposit is made and a deposited is executed.","resourceID":"ResourceID to be used when making deposits."}},"withdraw(address,address,uint256)":{"params":{"amount":"the amount of ERC20 tokens to release.","recipient":"Address to release tokens to.","tokenAddress":"Address of token contract to release."}}},"version":1},"userdoc":{"kind":"user","methods":{"deposit(bytes32,address,bytes)":{"notice":"It is intended that deposit are made using the Bridge contract."},"executeProposal(bytes32,bytes)":{"notice":"It is intended that proposals are executed by the Bridge contract."},"setBurnable(address)":{"notice":"Marks {contractAddress} as mintable/burnable."},"setResource(bytes32,address)":{"notice":"Correlates {resourceID} with {contractAddress}."},"withdraw(address,address,uint256)":{"notice":"Used to manually release funds from ERC safes."}},"version":1}},"settings":{"remappings":["@openzeppelin/=src/@openzeppelin/","@pancakeswap/=src/@pancakeswap/","contracts/bridge/=src/bridge/","contracts/interfaces/=src/interfaces/","contracts/library/=src/library/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IQBridgeHandler.sol":"IQBridgeHandler"},"evmVersion":"istanbul","libraries":{}},"sources":{"src/interfaces/IQBridgeHandler.sol":{"keccak256":"0x5ec32caa57ca0f27a10d31cbaccebc2feee2e34cdd8f6a1baf0614e0763d4c5b","urls":["bzz-raw://165fb49d5844e9ce31b541b71edcbda7dcd0df35c717cb0961ec952d1b700a1a","dweb:/ipfs/QmPHVZGSwLLYALuoX88go5rZyQo7GE7KPXPoRx4gqCbEGm"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":9}