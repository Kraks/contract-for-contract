{
  "data": {
    "contracts": {
      "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol": {
        "BALWSTETHWETHOracle": {
          "abi": [
            {
              "inputs": [],
              "name": "check",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "get",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "rate",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "peek",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Oracle contract for BALWSTETHWETH LP Token",
            "kind": "dev",
            "methods": {
              "get()": {
                "returns": {
                  "_0": "if no valid (recent) rate is available, return false else true.",
                  "_1": "The rate of the requested asset / pair / pool."
                }
              },
              "latestAnswer()": {
                "returns": {
                  "rate": "The rate of the requested asset / pair / pool."
                }
              },
              "peek()": {
                "returns": {
                  "_0": "if no valid (recent) rate is available, return false else true.",
                  "_1": "The rate of the requested asset / pair / pool."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "    /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60135:62182  contract BALWSTETHWETHOracle is IOracle, IOracleValidate {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60135:62182  contract BALWSTETHWETHOracle is IOracle, IOracleValidate {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x50d25bcd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x59e02dd7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x919840ad\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61768:61869  function latestAnswer() external view override returns (int256 rate) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61568:61670  function peek() external view override returns (bool, int256) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap3\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61384:61478  function get() external view override returns (bool, uint256) {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61929:62180  function check() external {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61768:61869  function latestAnswer() external view override returns (int256 rate) {... */\n    tag_8:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61824:61835  int256 rate */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61857:61863  _get() */\n      tag_22\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61857:61861  _get */\n      tag_23\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61857:61863  _get() */\n      jump\t// in\n    tag_22:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61843:61864  return int256(_get()) */\n      swap1\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61768:61869  function latestAnswer() external view override returns (int256 rate) {... */\n      swap1\n      jump\t// out\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61568:61670  function peek() external view override returns (bool, int256) {... */\n    tag_12:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61616:61620  bool */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61622:61628  int256 */\n      dup1\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61644:61648  true */\n      0x01\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61657:61663  _get() */\n      tag_25\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61657:61661  _get */\n      tag_23\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61657:61663  _get() */\n      jump\t// in\n    tag_25:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61636:61665  return (true, int256(_get())) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61568:61670  function peek() external view override returns (bool, int256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61384:61478  function get() external view override returns (bool, uint256) {... */\n    tag_16:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61431:61435  bool */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61437:61444  uint256 */\n      dup1\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61460:61464  true */\n      0x01\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61466:61472  _get() */\n      tag_27\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61466:61470  _get */\n      tag_23\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61466:61472  _get() */\n      jump\t// in\n    tag_27:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61452:61473  return (true, _get()) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61384:61478  function get() external view override returns (bool, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61929:62180  function check() external {... */\n    tag_20:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61961:61994  IVault.UserBalanceOp[] memory ops */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62024:62025  1 */\n      0x01\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61997:62026  new IVault.UserBalanceOp[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n    tag_29:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_32\n      jumpi\n      dup2\n      0x20\n      add\n    tag_33:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_33\n      jumpi\n      swap1\n      pop\n    tag_32:\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61961:62026  IVault.UserBalanceOp[] memory ops = new IVault.UserBalanceOp[](1) */\n      swap1\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62046:62088  IVault.UserBalanceOpKind.WITHDRAW_INTERNAL */\n      0x01\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62032:62035  ops */\n      dup2\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62036:62037  0 */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62032:62038  ops[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_36\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n    tag_36:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62032:62043  ops[0].kind */\n      0x00\n      add\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62032:62088  ops[0].kind = IVault.UserBalanceOpKind.WITHDRAW_INTERNAL */\n      swap1\n      0x03\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n    tag_39:\n      swap1\n      dup2\n      0x03\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      tag_43\n      tag_41\n      jump\t// in\n    tag_43:\n    tag_42:\n      dup2\n      mstore\n      pop\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62118:62122  this */\n      address\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62094:62097  ops */\n      dup2\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62098:62099  0 */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62094:62100  ops[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_45\n      tag_38\n      jump\t// in\n    tag_45:\n    tag_44:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62094:62107  ops[0].sender */\n      0x60\n      add\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62094:62123  ops[0].sender = address(this) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60656:60698  0xBA12222222228d8Ba445958a75a0704d566BF2C8 */\n      0xba12222222228d8ba445958a75a0704d566bf2c8\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62130:62170  IVault(BALANCER_VAULT).manageUserBalance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0e8e3e84\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62171:62174  ops */\n      dup3\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":62130:62175  IVault(BALANCER_VAULT).manageUserBalance(ops) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61955:62180  {... */\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61929:62180  function check() external {... */\n      jump\t// out\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60895:61266  function _get() internal view returns (uint256) {... */\n    tag_23:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60934:60941  uint256 */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60952:60969  int256 stETHPrice */\n      dup1\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60973:60990  uint256 updatedAt */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60567:60609  0x86392dC19c0b719886221c78AB11eb8Cf5c52812 */\n      0x86392dc19c0b719886221c78ab11eb8cf5c52812\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60996:61017  STETH.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60996:61019  STETH.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60949:61019  (, int256 stETHPrice, , uint256 updatedAt, ) = STETH.latestRoundData() */\n      pop\n      swap4\n      pop\n      pop\n      swap3\n      pop\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61063:61069  1 days */\n      0x015180\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61045:61060  block.timestamp */\n      timestamp\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61045:61069  block.timestamp - 1 days */\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61033:61042  updatedAt */\n      dup2\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61033:61069  updatedAt > block.timestamp - 1 days */\n      gt\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61071:61091  Errors.O_WRONG_PRICE */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x3131380000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61025:61092  require(updatedAt > block.timestamp - 1 days, Errors.O_WRONG_PRICE) */\n      swap1\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61119:61120  0 */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61106:61116  stETHPrice */\n      dup3\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61106:61120  stETHPrice > 0 */\n      sgt\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61122:61142  Errors.O_WRONG_PRICE */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x3131380000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61098:61143  require(stETHPrice > 0, Errors.O_WRONG_PRICE) */\n      swap1\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61150:61166  uint256 minValue */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61169:61204  Math.min(uint256(stETHPrice), 1e18) */\n      tag_63\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61186:61196  stETHPrice */\n      dup4\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61199:61203  1e18 */\n      0x0de0b6b3a7640000\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61169:61177  Math.min */\n      tag_64\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61169:61204  Math.min(uint256(stETHPrice), 1e18) */\n      jump\t// in\n    tag_63:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61150:61204  uint256 minValue = Math.min(uint256(stETHPrice), 1e18) */\n      swap1\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61257:61261  1e18 */\n      0x0de0b6b3a7640000\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61245:61253  minValue */\n      dup2\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60273:60315  0x32296969Ef14EB0c6d29669C550D4a0449130230 */\n      0x32296969ef14eb0c6d29669c550d4a0449130230\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61219:61240  BALWSTETHWETH.getRate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x679aefce\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61219:61242  BALWSTETHWETH.getRate() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61219:61253  BALWSTETHWETH.getRate() * minValue */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61218:61261  (BALWSTETHWETH.getRate() * minValue) / 1e18 */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":61211:61261  return (BALWSTETHWETH.getRate() * minValue) / 1e18 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":60895:61266  function _get() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59358:59456  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_64:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59416:59423  uint256 */\n      0x00\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59442:59443  b */\n      dup2\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59438:59439  a */\n      dup4\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59438:59443  a < b */\n      lt\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59438:59451  a < b ? a : b */\n      tag_74\n      jumpi\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59450:59451  b */\n      dup2\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59438:59451  a < b ? a : b */\n      jump(tag_75)\n    tag_74:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59446:59447  a */\n      dup3\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59438:59451  a < b ? a : b */\n    tag_75:\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59431:59451  return a < b ? a : b */\n      swap1\n      pop\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59358:59456  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_35:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      0x03\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      tag_77\n      tag_41\n      jump\t// in\n    tag_77:\n    tag_76:\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:83   */\n    tag_78:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":72:77   */\n      dup2\n        /* \"#utility.yul\":61:77   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:83   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":89:204   */\n    tag_79:\n        /* \"#utility.yul\":174:197   */\n      tag_126\n        /* \"#utility.yul\":191:196   */\n      dup2\n        /* \"#utility.yul\":174:197   */\n      tag_78\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":169:172   */\n      dup3\n        /* \"#utility.yul\":162:198   */\n      mstore\n        /* \"#utility.yul\":89:204   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":210:428   */\n    tag_10:\n        /* \"#utility.yul\":301:305   */\n      0x00\n        /* \"#utility.yul\":339:341   */\n      0x20\n        /* \"#utility.yul\":328:337   */\n      dup3\n        /* \"#utility.yul\":324:342   */\n      add\n        /* \"#utility.yul\":316:342   */\n      swap1\n      pop\n        /* \"#utility.yul\":352:421   */\n      tag_128\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":352:421   */\n      tag_79\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":210:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:524   */\n    tag_80:\n        /* \"#utility.yul\":468:475   */\n      0x00\n        /* \"#utility.yul\":511:516   */\n      dup2\n        /* \"#utility.yul\":504:517   */\n      iszero\n        /* \"#utility.yul\":497:518   */\n      iszero\n        /* \"#utility.yul\":486:518   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":530:639   */\n    tag_81:\n        /* \"#utility.yul\":611:632   */\n      tag_131\n        /* \"#utility.yul\":626:631   */\n      dup2\n        /* \"#utility.yul\":611:632   */\n      tag_80\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":606:609   */\n      dup3\n        /* \"#utility.yul\":599:633   */\n      mstore\n        /* \"#utility.yul\":530:639   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:961   */\n    tag_14:\n        /* \"#utility.yul\":758:762   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x40\n        /* \"#utility.yul\":785:794   */\n      dup3\n        /* \"#utility.yul\":781:799   */\n      add\n        /* \"#utility.yul\":773:799   */\n      swap1\n      pop\n        /* \"#utility.yul\":809:874   */\n      tag_133\n        /* \"#utility.yul\":871:872   */\n      0x00\n        /* \"#utility.yul\":860:869   */\n      dup4\n        /* \"#utility.yul\":856:873   */\n      add\n        /* \"#utility.yul\":847:853   */\n      dup6\n        /* \"#utility.yul\":809:874   */\n      tag_81\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":884:954   */\n      tag_134\n        /* \"#utility.yul\":950:952   */\n      0x20\n        /* \"#utility.yul\":939:948   */\n      dup4\n        /* \"#utility.yul\":935:953   */\n      add\n        /* \"#utility.yul\":926:932   */\n      dup5\n        /* \"#utility.yul\":884:954   */\n      tag_79\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":645:961   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1044   */\n    tag_82:\n        /* \"#utility.yul\":1004:1011   */\n      0x00\n        /* \"#utility.yul\":1033:1038   */\n      dup2\n        /* \"#utility.yul\":1022:1038   */\n      swap1\n      pop\n        /* \"#utility.yul\":967:1044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1050:1168   */\n    tag_83:\n        /* \"#utility.yul\":1137:1161   */\n      tag_137\n        /* \"#utility.yul\":1155:1160   */\n      dup2\n        /* \"#utility.yul\":1137:1161   */\n      tag_82\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1132:1135   */\n      dup3\n        /* \"#utility.yul\":1125:1162   */\n      mstore\n        /* \"#utility.yul\":1050:1168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1174:1494   */\n    tag_18:\n        /* \"#utility.yul\":1289:1293   */\n      0x00\n        /* \"#utility.yul\":1327:1329   */\n      0x40\n        /* \"#utility.yul\":1316:1325   */\n      dup3\n        /* \"#utility.yul\":1312:1330   */\n      add\n        /* \"#utility.yul\":1304:1330   */\n      swap1\n      pop\n        /* \"#utility.yul\":1340:1405   */\n      tag_139\n        /* \"#utility.yul\":1402:1403   */\n      0x00\n        /* \"#utility.yul\":1391:1400   */\n      dup4\n        /* \"#utility.yul\":1387:1404   */\n      add\n        /* \"#utility.yul\":1378:1384   */\n      dup6\n        /* \"#utility.yul\":1340:1405   */\n      tag_81\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1415:1487   */\n      tag_140\n        /* \"#utility.yul\":1483:1485   */\n      0x20\n        /* \"#utility.yul\":1472:1481   */\n      dup4\n        /* \"#utility.yul\":1468:1486   */\n      add\n        /* \"#utility.yul\":1459:1465   */\n      dup5\n        /* \"#utility.yul\":1415:1487   */\n      tag_83\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1174:1494   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1500:1680   */\n    tag_31:\n        /* \"#utility.yul\":1548:1625   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1545:1546   */\n      0x00\n        /* \"#utility.yul\":1538:1626   */\n      mstore\n        /* \"#utility.yul\":1645:1649   */\n      0x41\n        /* \"#utility.yul\":1642:1643   */\n      0x04\n        /* \"#utility.yul\":1635:1650   */\n      mstore\n        /* \"#utility.yul\":1669:1673   */\n      0x24\n        /* \"#utility.yul\":1666:1667   */\n      0x00\n        /* \"#utility.yul\":1659:1674   */\n      revert\n        /* \"#utility.yul\":1686:1866   */\n    tag_38:\n        /* \"#utility.yul\":1734:1811   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1731:1732   */\n      0x00\n        /* \"#utility.yul\":1724:1812   */\n      mstore\n        /* \"#utility.yul\":1831:1835   */\n      0x32\n        /* \"#utility.yul\":1828:1829   */\n      0x04\n        /* \"#utility.yul\":1821:1836   */\n      mstore\n        /* \"#utility.yul\":1855:1859   */\n      0x24\n        /* \"#utility.yul\":1852:1853   */\n      0x00\n        /* \"#utility.yul\":1845:1860   */\n      revert\n        /* \"#utility.yul\":1872:2052   */\n    tag_41:\n        /* \"#utility.yul\":1920:1997   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1917:1918   */\n      0x00\n        /* \"#utility.yul\":1910:1998   */\n      mstore\n        /* \"#utility.yul\":2017:2021   */\n      0x21\n        /* \"#utility.yul\":2014:2015   */\n      0x04\n        /* \"#utility.yul\":2007:2022   */\n      mstore\n        /* \"#utility.yul\":2041:2045   */\n      0x24\n        /* \"#utility.yul\":2038:2039   */\n      0x00\n        /* \"#utility.yul\":2031:2046   */\n      revert\n        /* \"#utility.yul\":2058:2202   */\n    tag_84:\n        /* \"#utility.yul\":2155:2161   */\n      0x00\n        /* \"#utility.yul\":2189:2194   */\n      dup2\n        /* \"#utility.yul\":2183:2195   */\n      mload\n        /* \"#utility.yul\":2173:2195   */\n      swap1\n      pop\n        /* \"#utility.yul\":2058:2202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2208:2422   */\n    tag_85:\n        /* \"#utility.yul\":2337:2348   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup3\n        /* \"#utility.yul\":2366:2369   */\n      dup3\n        /* \"#utility.yul\":2359:2378   */\n      mstore\n        /* \"#utility.yul\":2411:2415   */\n      0x20\n        /* \"#utility.yul\":2406:2409   */\n      dup3\n        /* \"#utility.yul\":2402:2416   */\n      add\n        /* \"#utility.yul\":2387:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2208:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2590   */\n    tag_86:\n        /* \"#utility.yul\":2525:2529   */\n      0x00\n        /* \"#utility.yul\":2548:2551   */\n      dup2\n        /* \"#utility.yul\":2540:2551   */\n      swap1\n      pop\n        /* \"#utility.yul\":2578:2582   */\n      0x20\n        /* \"#utility.yul\":2573:2576   */\n      dup3\n        /* \"#utility.yul\":2569:2583   */\n      add\n        /* \"#utility.yul\":2561:2583   */\n      swap1\n      pop\n        /* \"#utility.yul\":2428:2590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2596:2722   */\n    tag_87:\n        /* \"#utility.yul\":2690:2691   */\n      0x04\n        /* \"#utility.yul\":2683:2688   */\n      dup2\n        /* \"#utility.yul\":2680:2692   */\n      lt\n        /* \"#utility.yul\":2670:2716   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2696:2714   */\n      tag_149\n      tag_41\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2670:2716   */\n    tag_148:\n        /* \"#utility.yul\":2596:2722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2728:2881   */\n    tag_88:\n        /* \"#utility.yul\":2786:2793   */\n      0x00\n        /* \"#utility.yul\":2815:2820   */\n      dup2\n        /* \"#utility.yul\":2804:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2821:2875   */\n      tag_151\n        /* \"#utility.yul\":2869:2874   */\n      dup3\n        /* \"#utility.yul\":2821:2875   */\n      tag_87\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2728:2881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2887:3040   */\n    tag_89:\n        /* \"#utility.yul\":2956:2965   */\n      0x00\n        /* \"#utility.yul\":2989:3034   */\n      tag_153\n        /* \"#utility.yul\":3028:3033   */\n      dup3\n        /* \"#utility.yul\":2989:3034   */\n      tag_88\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2976:3034   */\n      swap1\n      pop\n        /* \"#utility.yul\":2887:3040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3205   */\n    tag_90:\n        /* \"#utility.yul\":3142:3198   */\n      tag_155\n        /* \"#utility.yul\":3192:3197   */\n      dup2\n        /* \"#utility.yul\":3142:3198   */\n      tag_89\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3137:3140   */\n      dup3\n        /* \"#utility.yul\":3130:3199   */\n      mstore\n        /* \"#utility.yul\":3046:3205   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3211:3337   */\n    tag_91:\n        /* \"#utility.yul\":3248:3255   */\n      0x00\n        /* \"#utility.yul\":3288:3330   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3281:3286   */\n      dup3\n        /* \"#utility.yul\":3277:3331   */\n      and\n        /* \"#utility.yul\":3266:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3211:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3403   */\n    tag_92:\n        /* \"#utility.yul\":3371:3374   */\n      0x00\n        /* \"#utility.yul\":3392:3397   */\n      dup2\n        /* \"#utility.yul\":3385:3397   */\n      swap1\n      pop\n        /* \"#utility.yul\":3343:3403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3409:3551   */\n    tag_93:\n        /* \"#utility.yul\":3459:3468   */\n      0x00\n        /* \"#utility.yul\":3492:3545   */\n      tag_159\n        /* \"#utility.yul\":3510:3544   */\n      tag_160\n        /* \"#utility.yul\":3519:3543   */\n      tag_161\n        /* \"#utility.yul\":3537:3542   */\n      dup5\n        /* \"#utility.yul\":3519:3543   */\n      tag_91\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3510:3544   */\n      tag_92\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3492:3545   */\n      tag_91\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3479:3545   */\n      swap1\n      pop\n        /* \"#utility.yul\":3409:3551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3557:3683   */\n    tag_94:\n        /* \"#utility.yul\":3607:3616   */\n      0x00\n        /* \"#utility.yul\":3640:3677   */\n      tag_163\n        /* \"#utility.yul\":3671:3676   */\n      dup3\n        /* \"#utility.yul\":3640:3677   */\n      tag_93\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3627:3677   */\n      swap1\n      pop\n        /* \"#utility.yul\":3557:3683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3689:3829   */\n    tag_95:\n        /* \"#utility.yul\":3753:3762   */\n      0x00\n        /* \"#utility.yul\":3786:3823   */\n      tag_165\n        /* \"#utility.yul\":3817:3822   */\n      dup3\n        /* \"#utility.yul\":3786:3823   */\n      tag_94\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3773:3823   */\n      swap1\n      pop\n        /* \"#utility.yul\":3689:3829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3835:3984   */\n    tag_96:\n        /* \"#utility.yul\":3926:3977   */\n      tag_167\n        /* \"#utility.yul\":3971:3976   */\n      dup2\n        /* \"#utility.yul\":3926:3977   */\n      tag_95\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3921:3924   */\n      dup3\n        /* \"#utility.yul\":3914:3978   */\n      mstore\n        /* \"#utility.yul\":3835:3984   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3990:4098   */\n    tag_97:\n        /* \"#utility.yul\":4067:4091   */\n      tag_169\n        /* \"#utility.yul\":4085:4090   */\n      dup2\n        /* \"#utility.yul\":4067:4091   */\n      tag_82\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4062:4065   */\n      dup3\n        /* \"#utility.yul\":4055:4092   */\n      mstore\n        /* \"#utility.yul\":3990:4098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4104:4200   */\n    tag_98:\n        /* \"#utility.yul\":4141:4148   */\n      0x00\n        /* \"#utility.yul\":4170:4194   */\n      tag_171\n        /* \"#utility.yul\":4188:4193   */\n      dup3\n        /* \"#utility.yul\":4170:4194   */\n      tag_91\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4159:4194   */\n      swap1\n      pop\n        /* \"#utility.yul\":4104:4200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4206:4314   */\n    tag_99:\n        /* \"#utility.yul\":4283:4307   */\n      tag_173\n        /* \"#utility.yul\":4301:4306   */\n      dup2\n        /* \"#utility.yul\":4283:4307   */\n      tag_98\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4278:4281   */\n      dup3\n        /* \"#utility.yul\":4271:4308   */\n      mstore\n        /* \"#utility.yul\":4206:4314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4320:4424   */\n    tag_100:\n        /* \"#utility.yul\":4365:4372   */\n      0x00\n        /* \"#utility.yul\":4394:4418   */\n      tag_175\n        /* \"#utility.yul\":4412:4417   */\n      dup3\n        /* \"#utility.yul\":4394:4418   */\n      tag_91\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4383:4418   */\n      swap1\n      pop\n        /* \"#utility.yul\":4320:4424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4430:4562   */\n    tag_101:\n        /* \"#utility.yul\":4523:4555   */\n      tag_177\n        /* \"#utility.yul\":4549:4554   */\n      dup2\n        /* \"#utility.yul\":4523:4555   */\n      tag_100\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4511:4556   */\n      mstore\n        /* \"#utility.yul\":4430:4562   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4634:5722   */\n    tag_102:\n        /* \"#utility.yul\":4781:4785   */\n      0xa0\n        /* \"#utility.yul\":4776:4779   */\n      dup3\n        /* \"#utility.yul\":4772:4786   */\n      add\n        /* \"#utility.yul\":4868:4872   */\n      0x00\n        /* \"#utility.yul\":4861:4866   */\n      dup3\n        /* \"#utility.yul\":4857:4873   */\n      add\n        /* \"#utility.yul\":4851:4874   */\n      mload\n        /* \"#utility.yul\":4887:4969   */\n      tag_179\n        /* \"#utility.yul\":4963:4967   */\n      0x00\n        /* \"#utility.yul\":4958:4961   */\n      dup6\n        /* \"#utility.yul\":4954:4968   */\n      add\n        /* \"#utility.yul\":4940:4952   */\n      dup3\n        /* \"#utility.yul\":4887:4969   */\n      tag_90\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4796:4979   */\n      pop\n        /* \"#utility.yul\":5062:5066   */\n      0x20\n        /* \"#utility.yul\":5055:5060   */\n      dup3\n        /* \"#utility.yul\":5051:5067   */\n      add\n        /* \"#utility.yul\":5045:5068   */\n      mload\n        /* \"#utility.yul\":5081:5158   */\n      tag_180\n        /* \"#utility.yul\":5152:5156   */\n      0x20\n        /* \"#utility.yul\":5147:5150   */\n      dup6\n        /* \"#utility.yul\":5143:5157   */\n      add\n        /* \"#utility.yul\":5129:5141   */\n      dup3\n        /* \"#utility.yul\":5081:5158   */\n      tag_96\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4989:5168   */\n      pop\n        /* \"#utility.yul\":5252:5256   */\n      0x40\n        /* \"#utility.yul\":5245:5250   */\n      dup3\n        /* \"#utility.yul\":5241:5257   */\n      add\n        /* \"#utility.yul\":5235:5258   */\n      mload\n        /* \"#utility.yul\":5271:5334   */\n      tag_181\n        /* \"#utility.yul\":5328:5332   */\n      0x40\n        /* \"#utility.yul\":5323:5326   */\n      dup6\n        /* \"#utility.yul\":5319:5333   */\n      add\n        /* \"#utility.yul\":5305:5317   */\n      dup3\n        /* \"#utility.yul\":5271:5334   */\n      tag_97\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5178:5344   */\n      pop\n        /* \"#utility.yul\":5428:5432   */\n      0x60\n        /* \"#utility.yul\":5421:5426   */\n      dup3\n        /* \"#utility.yul\":5417:5433   */\n      add\n        /* \"#utility.yul\":5411:5434   */\n      mload\n        /* \"#utility.yul\":5447:5510   */\n      tag_182\n        /* \"#utility.yul\":5504:5508   */\n      0x60\n        /* \"#utility.yul\":5499:5502   */\n      dup6\n        /* \"#utility.yul\":5495:5509   */\n      add\n        /* \"#utility.yul\":5481:5493   */\n      dup3\n        /* \"#utility.yul\":5447:5510   */\n      tag_99\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5354:5520   */\n      pop\n        /* \"#utility.yul\":5607:5611   */\n      0x80\n        /* \"#utility.yul\":5600:5605   */\n      dup3\n        /* \"#utility.yul\":5596:5612   */\n      add\n        /* \"#utility.yul\":5590:5613   */\n      mload\n        /* \"#utility.yul\":5626:5705   */\n      tag_183\n        /* \"#utility.yul\":5699:5703   */\n      0x80\n        /* \"#utility.yul\":5694:5697   */\n      dup6\n        /* \"#utility.yul\":5690:5704   */\n      add\n        /* \"#utility.yul\":5676:5688   */\n      dup3\n        /* \"#utility.yul\":5626:5705   */\n      tag_101\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5530:5715   */\n      pop\n        /* \"#utility.yul\":4750:5722   */\n      pop\n        /* \"#utility.yul\":4634:5722   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5728:6027   */\n    tag_103:\n        /* \"#utility.yul\":5857:5867   */\n      0x00\n        /* \"#utility.yul\":5878:5984   */\n      tag_185\n        /* \"#utility.yul\":5980:5983   */\n      dup4\n        /* \"#utility.yul\":5972:5978   */\n      dup4\n        /* \"#utility.yul\":5878:5984   */\n      tag_102\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6016:6020   */\n      0xa0\n        /* \"#utility.yul\":6011:6014   */\n      dup4\n        /* \"#utility.yul\":6007:6021   */\n      add\n        /* \"#utility.yul\":5993:6021   */\n      swap1\n      pop\n        /* \"#utility.yul\":5728:6027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6033:6176   */\n    tag_104:\n        /* \"#utility.yul\":6133:6137   */\n      0x00\n        /* \"#utility.yul\":6165:6169   */\n      0x20\n        /* \"#utility.yul\":6160:6163   */\n      dup3\n        /* \"#utility.yul\":6156:6170   */\n      add\n        /* \"#utility.yul\":6148:6170   */\n      swap1\n      pop\n        /* \"#utility.yul\":6033:6176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6252:7224   */\n    tag_105:\n        /* \"#utility.yul\":6431:6434   */\n      0x00\n        /* \"#utility.yul\":6460:6544   */\n      tag_188\n        /* \"#utility.yul\":6538:6543   */\n      dup3\n        /* \"#utility.yul\":6460:6544   */\n      tag_84\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6560:6676   */\n      tag_189\n        /* \"#utility.yul\":6669:6675   */\n      dup2\n        /* \"#utility.yul\":6664:6667   */\n      dup6\n        /* \"#utility.yul\":6560:6676   */\n      tag_85\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6553:6676   */\n      swap4\n      pop\n        /* \"#utility.yul\":6700:6786   */\n      tag_190\n        /* \"#utility.yul\":6780:6785   */\n      dup4\n        /* \"#utility.yul\":6700:6786   */\n      tag_86\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6809:6816   */\n      dup1\n        /* \"#utility.yul\":6840:6841   */\n      0x00\n        /* \"#utility.yul\":6825:7199   */\n    tag_191:\n        /* \"#utility.yul\":6850:6856   */\n      dup4\n        /* \"#utility.yul\":6847:6848   */\n      dup2\n        /* \"#utility.yul\":6844:6857   */\n      lt\n        /* \"#utility.yul\":6825:7199   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":6926:6932   */\n      dup2\n        /* \"#utility.yul\":6920:6933   */\n      mload\n        /* \"#utility.yul\":6953:7076   */\n      tag_194\n        /* \"#utility.yul\":7072:7075   */\n      dup9\n        /* \"#utility.yul\":7057:7070   */\n      dup3\n        /* \"#utility.yul\":6953:7076   */\n      tag_103\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6946:7076   */\n      swap8\n      pop\n        /* \"#utility.yul\":7099:7189   */\n      tag_195\n        /* \"#utility.yul\":7182:7188   */\n      dup4\n        /* \"#utility.yul\":7099:7189   */\n      tag_104\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7089:7189   */\n      swap3\n      pop\n        /* \"#utility.yul\":6885:7199   */\n      pop\n        /* \"#utility.yul\":6872:6873   */\n      0x01\n        /* \"#utility.yul\":6869:6870   */\n      dup2\n        /* \"#utility.yul\":6865:6874   */\n      add\n        /* \"#utility.yul\":6860:6874   */\n      swap1\n      pop\n        /* \"#utility.yul\":6825:7199   */\n      jump(tag_191)\n    tag_193:\n        /* \"#utility.yul\":6829:6843   */\n      pop\n        /* \"#utility.yul\":7215:7218   */\n      dup6\n        /* \"#utility.yul\":7208:7218   */\n      swap4\n      pop\n        /* \"#utility.yul\":6436:7224   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6252:7224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7230:7723   */\n    tag_47:\n        /* \"#utility.yul\":7433:7437   */\n      0x00\n        /* \"#utility.yul\":7471:7473   */\n      0x20\n        /* \"#utility.yul\":7460:7469   */\n      dup3\n        /* \"#utility.yul\":7456:7474   */\n      add\n        /* \"#utility.yul\":7448:7474   */\n      swap1\n      pop\n        /* \"#utility.yul\":7520:7529   */\n      dup2\n        /* \"#utility.yul\":7514:7518   */\n      dup2\n        /* \"#utility.yul\":7510:7530   */\n      sub\n        /* \"#utility.yul\":7506:7507   */\n      0x00\n        /* \"#utility.yul\":7495:7504   */\n      dup4\n        /* \"#utility.yul\":7491:7508   */\n      add\n        /* \"#utility.yul\":7484:7531   */\n      mstore\n        /* \"#utility.yul\":7548:7716   */\n      tag_197\n        /* \"#utility.yul\":7711:7715   */\n      dup2\n        /* \"#utility.yul\":7702:7708   */\n      dup5\n        /* \"#utility.yul\":7548:7716   */\n      tag_105\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7540:7716   */\n      swap1\n      pop\n        /* \"#utility.yul\":7230:7723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7810:7927   */\n    tag_107:\n        /* \"#utility.yul\":7919:7920   */\n      0x00\n        /* \"#utility.yul\":7916:7917   */\n      dup1\n        /* \"#utility.yul\":7909:7921   */\n      revert\n        /* \"#utility.yul\":8056:8161   */\n    tag_109:\n        /* \"#utility.yul\":8092:8099   */\n      0x00\n        /* \"#utility.yul\":8132:8154   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":8125:8130   */\n      dup3\n        /* \"#utility.yul\":8121:8155   */\n      and\n        /* \"#utility.yul\":8110:8155   */\n      swap1\n      pop\n        /* \"#utility.yul\":8056:8161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8167:8287   */\n    tag_110:\n        /* \"#utility.yul\":8239:8262   */\n      tag_203\n        /* \"#utility.yul\":8256:8261   */\n      dup2\n        /* \"#utility.yul\":8239:8262   */\n      tag_109\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8232:8237   */\n      dup2\n        /* \"#utility.yul\":8229:8263   */\n      eq\n        /* \"#utility.yul\":8219:8281   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":8277:8278   */\n      0x00\n        /* \"#utility.yul\":8274:8275   */\n      dup1\n        /* \"#utility.yul\":8267:8279   */\n      revert\n        /* \"#utility.yul\":8219:8281   */\n    tag_204:\n        /* \"#utility.yul\":8167:8287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8293:8434   */\n    tag_111:\n        /* \"#utility.yul\":8349:8354   */\n      0x00\n        /* \"#utility.yul\":8380:8386   */\n      dup2\n        /* \"#utility.yul\":8374:8387   */\n      mload\n        /* \"#utility.yul\":8365:8387   */\n      swap1\n      pop\n        /* \"#utility.yul\":8396:8428   */\n      tag_206\n        /* \"#utility.yul\":8422:8427   */\n      dup2\n        /* \"#utility.yul\":8396:8428   */\n      tag_110\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8293:8434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8560   */\n    tag_112:\n        /* \"#utility.yul\":8512:8535   */\n      tag_208\n        /* \"#utility.yul\":8529:8534   */\n      dup2\n        /* \"#utility.yul\":8512:8535   */\n      tag_78\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8505:8510   */\n      dup2\n        /* \"#utility.yul\":8502:8536   */\n      eq\n        /* \"#utility.yul\":8492:8554   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":8550:8551   */\n      0x00\n        /* \"#utility.yul\":8547:8548   */\n      dup1\n        /* \"#utility.yul\":8540:8552   */\n      revert\n        /* \"#utility.yul\":8492:8554   */\n    tag_209:\n        /* \"#utility.yul\":8440:8560   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8566:8707   */\n    tag_113:\n        /* \"#utility.yul\":8622:8627   */\n      0x00\n        /* \"#utility.yul\":8653:8659   */\n      dup2\n        /* \"#utility.yul\":8647:8660   */\n      mload\n        /* \"#utility.yul\":8638:8660   */\n      swap1\n      pop\n        /* \"#utility.yul\":8669:8701   */\n      tag_211\n        /* \"#utility.yul\":8695:8700   */\n      dup2\n        /* \"#utility.yul\":8669:8701   */\n      tag_112\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":8566:8707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8713:8835   */\n    tag_114:\n        /* \"#utility.yul\":8786:8810   */\n      tag_213\n        /* \"#utility.yul\":8804:8809   */\n      dup2\n        /* \"#utility.yul\":8786:8810   */\n      tag_82\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8779:8784   */\n      dup2\n        /* \"#utility.yul\":8776:8811   */\n      eq\n        /* \"#utility.yul\":8766:8829   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":8825:8826   */\n      0x00\n        /* \"#utility.yul\":8822:8823   */\n      dup1\n        /* \"#utility.yul\":8815:8827   */\n      revert\n        /* \"#utility.yul\":8766:8829   */\n    tag_214:\n        /* \"#utility.yul\":8713:8835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8841:8984   */\n    tag_115:\n        /* \"#utility.yul\":8898:8903   */\n      0x00\n        /* \"#utility.yul\":8929:8935   */\n      dup2\n        /* \"#utility.yul\":8923:8936   */\n      mload\n        /* \"#utility.yul\":8914:8936   */\n      swap1\n      pop\n        /* \"#utility.yul\":8945:8978   */\n      tag_216\n        /* \"#utility.yul\":8972:8977   */\n      dup2\n        /* \"#utility.yul\":8945:8978   */\n      tag_114\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":8841:8984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8990:9961   */\n    tag_55:\n        /* \"#utility.yul\":9093:9099   */\n      0x00\n        /* \"#utility.yul\":9101:9107   */\n      dup1\n        /* \"#utility.yul\":9109:9115   */\n      0x00\n        /* \"#utility.yul\":9117:9123   */\n      dup1\n        /* \"#utility.yul\":9125:9131   */\n      0x00\n        /* \"#utility.yul\":9174:9177   */\n      0xa0\n        /* \"#utility.yul\":9162:9171   */\n      dup7\n        /* \"#utility.yul\":9153:9160   */\n      dup9\n        /* \"#utility.yul\":9149:9172   */\n      sub\n        /* \"#utility.yul\":9145:9178   */\n      slt\n        /* \"#utility.yul\":9142:9262   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":9181:9260   */\n      tag_219\n      tag_107\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":9142:9262   */\n    tag_218:\n        /* \"#utility.yul\":9301:9302   */\n      0x00\n        /* \"#utility.yul\":9326:9389   */\n      tag_220\n        /* \"#utility.yul\":9381:9388   */\n      dup9\n        /* \"#utility.yul\":9372:9378   */\n      dup3\n        /* \"#utility.yul\":9361:9370   */\n      dup10\n        /* \"#utility.yul\":9357:9379   */\n      add\n        /* \"#utility.yul\":9326:9389   */\n      tag_111\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":9316:9389   */\n      swap6\n      pop\n        /* \"#utility.yul\":9272:9399   */\n      pop\n        /* \"#utility.yul\":9438:9440   */\n      0x20\n        /* \"#utility.yul\":9464:9527   */\n      tag_221\n        /* \"#utility.yul\":9519:9526   */\n      dup9\n        /* \"#utility.yul\":9510:9516   */\n      dup3\n        /* \"#utility.yul\":9499:9508   */\n      dup10\n        /* \"#utility.yul\":9495:9517   */\n      add\n        /* \"#utility.yul\":9464:9527   */\n      tag_113\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":9454:9527   */\n      swap5\n      pop\n        /* \"#utility.yul\":9409:9537   */\n      pop\n        /* \"#utility.yul\":9576:9578   */\n      0x40\n        /* \"#utility.yul\":9602:9666   */\n      tag_222\n        /* \"#utility.yul\":9658:9665   */\n      dup9\n        /* \"#utility.yul\":9649:9655   */\n      dup3\n        /* \"#utility.yul\":9638:9647   */\n      dup10\n        /* \"#utility.yul\":9634:9656   */\n      add\n        /* \"#utility.yul\":9602:9666   */\n      tag_115\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":9592:9666   */\n      swap4\n      pop\n        /* \"#utility.yul\":9547:9676   */\n      pop\n        /* \"#utility.yul\":9715:9717   */\n      0x60\n        /* \"#utility.yul\":9741:9805   */\n      tag_223\n        /* \"#utility.yul\":9797:9804   */\n      dup9\n        /* \"#utility.yul\":9788:9794   */\n      dup3\n        /* \"#utility.yul\":9777:9786   */\n      dup10\n        /* \"#utility.yul\":9773:9795   */\n      add\n        /* \"#utility.yul\":9741:9805   */\n      tag_115\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":9731:9805   */\n      swap3\n      pop\n        /* \"#utility.yul\":9686:9815   */\n      pop\n        /* \"#utility.yul\":9854:9857   */\n      0x80\n        /* \"#utility.yul\":9881:9944   */\n      tag_224\n        /* \"#utility.yul\":9936:9943   */\n      dup9\n        /* \"#utility.yul\":9927:9933   */\n      dup3\n        /* \"#utility.yul\":9916:9925   */\n      dup10\n        /* \"#utility.yul\":9912:9934   */\n      add\n        /* \"#utility.yul\":9881:9944   */\n      tag_111\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":9871:9944   */\n      swap2\n      pop\n        /* \"#utility.yul\":9825:9954   */\n      pop\n        /* \"#utility.yul\":8990:9961   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9967:10147   */\n    tag_116:\n        /* \"#utility.yul\":10015:10092   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10012:10013   */\n      0x00\n        /* \"#utility.yul\":10005:10093   */\n      mstore\n        /* \"#utility.yul\":10112:10116   */\n      0x11\n        /* \"#utility.yul\":10109:10110   */\n      0x04\n        /* \"#utility.yul\":10102:10117   */\n      mstore\n        /* \"#utility.yul\":10136:10140   */\n      0x24\n        /* \"#utility.yul\":10133:10134   */\n      0x00\n        /* \"#utility.yul\":10126:10141   */\n      revert\n        /* \"#utility.yul\":10153:10347   */\n    tag_57:\n        /* \"#utility.yul\":10193:10197   */\n      0x00\n        /* \"#utility.yul\":10213:10233   */\n      tag_227\n        /* \"#utility.yul\":10231:10232   */\n      dup3\n        /* \"#utility.yul\":10213:10233   */\n      tag_82\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":10208:10233   */\n      swap2\n      pop\n        /* \"#utility.yul\":10247:10267   */\n      tag_228\n        /* \"#utility.yul\":10265:10266   */\n      dup4\n        /* \"#utility.yul\":10247:10267   */\n      tag_82\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":10242:10267   */\n      swap3\n      pop\n        /* \"#utility.yul\":10291:10292   */\n      dup3\n        /* \"#utility.yul\":10288:10289   */\n      dup3\n        /* \"#utility.yul\":10284:10293   */\n      sub\n        /* \"#utility.yul\":10276:10293   */\n      swap1\n      pop\n        /* \"#utility.yul\":10315:10316   */\n      dup2\n        /* \"#utility.yul\":10309:10313   */\n      dup2\n        /* \"#utility.yul\":10306:10317   */\n      gt\n        /* \"#utility.yul\":10303:10340   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":10320:10338   */\n      tag_230\n      tag_116\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":10303:10340   */\n    tag_229:\n        /* \"#utility.yul\":10153:10347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10353:10452   */\n    tag_117:\n        /* \"#utility.yul\":10405:10411   */\n      0x00\n        /* \"#utility.yul\":10439:10444   */\n      dup2\n        /* \"#utility.yul\":10433:10445   */\n      mload\n        /* \"#utility.yul\":10423:10445   */\n      swap1\n      pop\n        /* \"#utility.yul\":10353:10452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10458:10627   */\n    tag_118:\n        /* \"#utility.yul\":10542:10553   */\n      0x00\n        /* \"#utility.yul\":10576:10582   */\n      dup3\n        /* \"#utility.yul\":10571:10574   */\n      dup3\n        /* \"#utility.yul\":10564:10583   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x20\n        /* \"#utility.yul\":10611:10614   */\n      dup3\n        /* \"#utility.yul\":10607:10621   */\n      add\n        /* \"#utility.yul\":10592:10621   */\n      swap1\n      pop\n        /* \"#utility.yul\":10458:10627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10633:10879   */\n    tag_119:\n        /* \"#utility.yul\":10714:10715   */\n      0x00\n        /* \"#utility.yul\":10724:10837   */\n    tag_234:\n        /* \"#utility.yul\":10738:10744   */\n      dup4\n        /* \"#utility.yul\":10735:10736   */\n      dup2\n        /* \"#utility.yul\":10732:10745   */\n      lt\n        /* \"#utility.yul\":10724:10837   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":10823:10824   */\n      dup1\n        /* \"#utility.yul\":10818:10821   */\n      dup3\n        /* \"#utility.yul\":10814:10825   */\n      add\n        /* \"#utility.yul\":10808:10826   */\n      mload\n        /* \"#utility.yul\":10804:10805   */\n      dup2\n        /* \"#utility.yul\":10799:10802   */\n      dup5\n        /* \"#utility.yul\":10795:10806   */\n      add\n        /* \"#utility.yul\":10788:10827   */\n      mstore\n        /* \"#utility.yul\":10760:10762   */\n      0x20\n        /* \"#utility.yul\":10757:10758   */\n      dup2\n        /* \"#utility.yul\":10753:10763   */\n      add\n        /* \"#utility.yul\":10748:10763   */\n      swap1\n      pop\n        /* \"#utility.yul\":10724:10837   */\n      jump(tag_234)\n    tag_236:\n        /* \"#utility.yul\":10871:10872   */\n      0x00\n        /* \"#utility.yul\":10862:10868   */\n      dup5\n        /* \"#utility.yul\":10857:10860   */\n      dup5\n        /* \"#utility.yul\":10853:10869   */\n      add\n        /* \"#utility.yul\":10846:10873   */\n      mstore\n        /* \"#utility.yul\":10695:10879   */\n      pop\n        /* \"#utility.yul\":10633:10879   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10885:10987   */\n    tag_120:\n        /* \"#utility.yul\":10926:10932   */\n      0x00\n        /* \"#utility.yul\":10977:10979   */\n      0x1f\n        /* \"#utility.yul\":10973:10980   */\n      not\n        /* \"#utility.yul\":10968:10970   */\n      0x1f\n        /* \"#utility.yul\":10961:10966   */\n      dup4\n        /* \"#utility.yul\":10957:10971   */\n      add\n        /* \"#utility.yul\":10953:10981   */\n      and\n        /* \"#utility.yul\":10943:10981   */\n      swap1\n      pop\n        /* \"#utility.yul\":10885:10987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10993:11370   */\n    tag_121:\n        /* \"#utility.yul\":11081:11084   */\n      0x00\n        /* \"#utility.yul\":11109:11148   */\n      tag_239\n        /* \"#utility.yul\":11142:11147   */\n      dup3\n        /* \"#utility.yul\":11109:11148   */\n      tag_117\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":11164:11235   */\n      tag_240\n        /* \"#utility.yul\":11228:11234   */\n      dup2\n        /* \"#utility.yul\":11223:11226   */\n      dup6\n        /* \"#utility.yul\":11164:11235   */\n      tag_118\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":11157:11235   */\n      swap4\n      pop\n        /* \"#utility.yul\":11244:11309   */\n      tag_241\n        /* \"#utility.yul\":11302:11308   */\n      dup2\n        /* \"#utility.yul\":11297:11300   */\n      dup6\n        /* \"#utility.yul\":11290:11294   */\n      0x20\n        /* \"#utility.yul\":11283:11288   */\n      dup7\n        /* \"#utility.yul\":11279:11295   */\n      add\n        /* \"#utility.yul\":11244:11309   */\n      tag_119\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":11334:11363   */\n      tag_242\n        /* \"#utility.yul\":11356:11362   */\n      dup2\n        /* \"#utility.yul\":11334:11363   */\n      tag_120\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":11329:11332   */\n      dup5\n        /* \"#utility.yul\":11325:11364   */\n      add\n        /* \"#utility.yul\":11318:11364   */\n      swap2\n      pop\n        /* \"#utility.yul\":11085:11370   */\n      pop\n        /* \"#utility.yul\":10993:11370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11376:11689   */\n    tag_60:\n        /* \"#utility.yul\":11489:11493   */\n      0x00\n        /* \"#utility.yul\":11527:11529   */\n      0x20\n        /* \"#utility.yul\":11516:11525   */\n      dup3\n        /* \"#utility.yul\":11512:11530   */\n      add\n        /* \"#utility.yul\":11504:11530   */\n      swap1\n      pop\n        /* \"#utility.yul\":11576:11585   */\n      dup2\n        /* \"#utility.yul\":11570:11574   */\n      dup2\n        /* \"#utility.yul\":11566:11586   */\n      sub\n        /* \"#utility.yul\":11562:11563   */\n      0x00\n        /* \"#utility.yul\":11551:11560   */\n      dup4\n        /* \"#utility.yul\":11547:11564   */\n      add\n        /* \"#utility.yul\":11540:11587   */\n      mstore\n        /* \"#utility.yul\":11604:11682   */\n      tag_244\n        /* \"#utility.yul\":11677:11681   */\n      dup2\n        /* \"#utility.yul\":11668:11674   */\n      dup5\n        /* \"#utility.yul\":11604:11682   */\n      tag_121\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":11596:11682   */\n      swap1\n      pop\n        /* \"#utility.yul\":11376:11689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11695:12046   */\n    tag_68:\n        /* \"#utility.yul\":11765:11771   */\n      0x00\n        /* \"#utility.yul\":11814:11816   */\n      0x20\n        /* \"#utility.yul\":11802:11811   */\n      dup3\n        /* \"#utility.yul\":11793:11800   */\n      dup5\n        /* \"#utility.yul\":11789:11812   */\n      sub\n        /* \"#utility.yul\":11785:11817   */\n      slt\n        /* \"#utility.yul\":11782:11901   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":11820:11899   */\n      tag_247\n      tag_107\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":11782:11901   */\n    tag_246:\n        /* \"#utility.yul\":11940:11941   */\n      0x00\n        /* \"#utility.yul\":11965:12029   */\n      tag_248\n        /* \"#utility.yul\":12021:12028   */\n      dup5\n        /* \"#utility.yul\":12012:12018   */\n      dup3\n        /* \"#utility.yul\":12001:12010   */\n      dup6\n        /* \"#utility.yul\":11997:12019   */\n      add\n        /* \"#utility.yul\":11965:12029   */\n      tag_115\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":11955:12029   */\n      swap2\n      pop\n        /* \"#utility.yul\":11911:12039   */\n      pop\n        /* \"#utility.yul\":11695:12046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12052:12462   */\n    tag_70:\n        /* \"#utility.yul\":12092:12099   */\n      0x00\n        /* \"#utility.yul\":12115:12135   */\n      tag_250\n        /* \"#utility.yul\":12133:12134   */\n      dup3\n        /* \"#utility.yul\":12115:12135   */\n      tag_82\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":12110:12135   */\n      swap2\n      pop\n        /* \"#utility.yul\":12149:12169   */\n      tag_251\n        /* \"#utility.yul\":12167:12168   */\n      dup4\n        /* \"#utility.yul\":12149:12169   */\n      tag_82\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":12144:12169   */\n      swap3\n      pop\n        /* \"#utility.yul\":12204:12205   */\n      dup3\n        /* \"#utility.yul\":12201:12202   */\n      dup3\n        /* \"#utility.yul\":12197:12206   */\n      mul\n        /* \"#utility.yul\":12226:12256   */\n      tag_252\n        /* \"#utility.yul\":12244:12255   */\n      dup2\n        /* \"#utility.yul\":12226:12256   */\n      tag_82\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":12215:12256   */\n      swap2\n      pop\n        /* \"#utility.yul\":12405:12406   */\n      dup3\n        /* \"#utility.yul\":12396:12403   */\n      dup3\n        /* \"#utility.yul\":12392:12407   */\n      div\n        /* \"#utility.yul\":12389:12390   */\n      dup5\n        /* \"#utility.yul\":12386:12408   */\n      eq\n        /* \"#utility.yul\":12366:12367   */\n      dup4\n        /* \"#utility.yul\":12359:12368   */\n      iszero\n        /* \"#utility.yul\":12339:12422   */\n      or\n        /* \"#utility.yul\":12316:12455   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":12435:12453   */\n      tag_254\n      tag_116\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":12316:12455   */\n    tag_253:\n        /* \"#utility.yul\":12100:12462   */\n      pop\n        /* \"#utility.yul\":12052:12462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12468:12648   */\n    tag_122:\n        /* \"#utility.yul\":12516:12593   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12513:12514   */\n      0x00\n        /* \"#utility.yul\":12506:12594   */\n      mstore\n        /* \"#utility.yul\":12613:12617   */\n      0x12\n        /* \"#utility.yul\":12610:12611   */\n      0x04\n        /* \"#utility.yul\":12603:12618   */\n      mstore\n        /* \"#utility.yul\":12637:12641   */\n      0x24\n        /* \"#utility.yul\":12634:12635   */\n      0x00\n        /* \"#utility.yul\":12627:12642   */\n      revert\n        /* \"#utility.yul\":12654:12839   */\n    tag_72:\n        /* \"#utility.yul\":12694:12695   */\n      0x00\n        /* \"#utility.yul\":12711:12731   */\n      tag_257\n        /* \"#utility.yul\":12729:12730   */\n      dup3\n        /* \"#utility.yul\":12711:12731   */\n      tag_82\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":12706:12731   */\n      swap2\n      pop\n        /* \"#utility.yul\":12745:12765   */\n      tag_258\n        /* \"#utility.yul\":12763:12764   */\n      dup4\n        /* \"#utility.yul\":12745:12765   */\n      tag_82\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":12740:12765   */\n      swap3\n      pop\n        /* \"#utility.yul\":12784:12785   */\n      dup3\n        /* \"#utility.yul\":12774:12809   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":12789:12807   */\n      tag_260\n      tag_122\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":12774:12809   */\n    tag_259:\n        /* \"#utility.yul\":12831:12832   */\n      dup3\n        /* \"#utility.yul\":12828:12829   */\n      dup3\n        /* \"#utility.yul\":12824:12833   */\n      div\n        /* \"#utility.yul\":12819:12833   */\n      swap1\n      pop\n        /* \"#utility.yul\":12654:12839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203c2b1156e3acb20f9e3136830e39c400ac4be4791ccd7d8023e416942d54f67a64736f6c63430008130033\n}\n",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610c25806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806350d25bcd1461005157806359e02dd71461006f5780636d4ce63c1461008e578063919840ad146100ad575b600080fd5b6100596100b7565b6040516100669190610572565b60405180910390f35b6100776100c6565b6040516100859291906105a8565b60405180910390f35b6100966100db565b6040516100a49291906105ea565b60405180910390f35b6100b56100f0565b005b60006100c161026a565b905090565b60008060016100d361026a565b915091509091565b60008060016100e861026a565b915091509091565b6000600167ffffffffffffffff81111561010d5761010c610613565b5b60405190808252806020026020018201604052801561014657816020015b6101336104d6565b81526020019060019003908161012b5790505b50905060018160008151811061015f5761015e610642565b5b602002602001015160000190600381111561017d5761017c610671565b5b9081600381111561019157610190610671565b5b8152505030816000815181106101aa576101a9610642565b5b60200260200101516060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073ba12222222228d8ba445958a75a0704d566bf2c873ffffffffffffffffffffffffffffffffffffffff16630e8e3e84826040518263ffffffff1660e01b815260040161023591906108cf565b600060405180830381600087803b15801561024f57600080fd5b505af1158015610263573d6000803e3d6000fd5b5050505050565b60008060007386392dc19c0b719886221c78ab11eb8cf5c5281273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610990565b5093505092505062015180426103089190610a3a565b81116040518060400160405280600381526020017f313138000000000000000000000000000000000000000000000000000000000081525090610381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103789190610afe565b60405180910390fd5b50600082136040518060400160405280600381526020017f3131380000000000000000000000000000000000000000000000000000000000815250906103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f49190610afe565b60405180910390fd5b50600061041283670de0b6b3a76400006104bd565b9050670de0b6b3a7640000817332296969ef14eb0c6d29669c550d4a044913023073ffffffffffffffffffffffffffffffffffffffff1663679aefce6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610b20565b6104ab9190610b4d565b6104b59190610bbe565b935050505090565b60008183106104cc57816104ce565b825b905092915050565b6040518060a00160405280600060038111156104f5576104f4610671565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000819050919050565b61056c81610559565b82525050565b60006020820190506105876000830184610563565b92915050565b60008115159050919050565b6105a28161058d565b82525050565b60006040820190506105bd6000830185610599565b6105ca6020830184610563565b9392505050565b6000819050919050565b6105e4816105d1565b82525050565b60006040820190506105ff6000830185610599565b61060c60208301846105db565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600481106106dd576106dc610671565b5b50565b60008190506106ee826106cc565b919050565b60006106fe826106e0565b9050919050565b61070e816106f3565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061075961075461074f84610714565b610734565b610714565b9050919050565b600061076b8261073e565b9050919050565b600061077d82610760565b9050919050565b61078d81610772565b82525050565b61079c816105d1565b82525050565b60006107ad82610714565b9050919050565b6107bd816107a2565b82525050565b60006107ce82610714565b9050919050565b6107de816107c3565b82525050565b60a0820160008201516107fa6000850182610705565b50602082015161080d6020850182610784565b5060408201516108206040850182610793565b50606082015161083360608501826107b4565b50608082015161084660808501826107d5565b50505050565b600061085883836107e4565b60a08301905092915050565b6000602082019050919050565b600061087c826106a0565b61088681856106ab565b9350610891836106bc565b8060005b838110156108c25781516108a9888261084c565b97506108b483610864565b925050600181019050610895565b5085935050505092915050565b600060208201905081810360008301526108e98184610871565b905092915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b610915816108f6565b811461092057600080fd5b50565b6000815190506109328161090c565b92915050565b61094181610559565b811461094c57600080fd5b50565b60008151905061095e81610938565b92915050565b61096d816105d1565b811461097857600080fd5b50565b60008151905061098a81610964565b92915050565b600080600080600060a086880312156109ac576109ab6108f1565b5b60006109ba88828901610923565b95505060206109cb8882890161094f565b94505060406109dc8882890161097b565b93505060606109ed8882890161097b565b92505060806109fe88828901610923565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a45826105d1565b9150610a50836105d1565b9250828203905081811115610a6857610a67610a0b565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aa8578082015181840152602081019050610a8d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ad082610a6e565b610ada8185610a79565b9350610aea818560208601610a8a565b610af381610ab4565b840191505092915050565b60006020820190508181036000830152610b188184610ac5565b905092915050565b600060208284031215610b3657610b356108f1565b5b6000610b448482850161097b565b91505092915050565b6000610b58826105d1565b9150610b63836105d1565b9250828202610b71816105d1565b91508282048414831517610b8857610b87610a0b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bc9826105d1565b9150610bd4836105d1565b925082610be457610be3610b8f565b5b82820490509291505056fea26469706673582212203c2b1156e3acb20f9e3136830e39c400ac4be4791ccd7d8023e416942d54f67a64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC25 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x919840AD EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85 SWAP3 SWAP2 SWAP1 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP3 SWAP2 SWAP1 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xC1 PUSH2 0x26A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0xD3 PUSH2 0x26A JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0xE8 PUSH2 0x26A JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x613 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x146 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x133 PUSH2 0x4D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15F JUMPI PUSH2 0x15E PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17D JUMPI PUSH2 0x17C PUSH2 0x671 JUMP JUMPDEST JUMPDEST SWAP1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x191 JUMPI PUSH2 0x190 PUSH2 0x671 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AA JUMPI PUSH2 0x1A9 PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0xBA12222222228D8BA445958A75A0704D566BF2C8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E3E84 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0x86392DC19C0B719886221C78AB11EB8CF5C52812 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH3 0x15180 TIMESTAMP PUSH2 0x308 SWAP2 SWAP1 PUSH2 0xA3A JUMP JUMPDEST DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131380000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 SGT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131380000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x412 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH20 0x32296969EF14EB0C6D29669C550D4A0449130230 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x4CC JUMPI DUP2 PUSH2 0x4CE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F5 JUMPI PUSH2 0x4F4 PUSH2 0x671 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56C DUP2 PUSH2 0x559 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x587 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A2 DUP2 PUSH2 0x58D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x5CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x563 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E4 DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5FF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x60C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x671 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x6EE DUP3 PUSH2 0x6CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FE DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70E DUP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x759 PUSH2 0x754 PUSH2 0x74F DUP5 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76B DUP3 PUSH2 0x73E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP3 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x78D DUP2 PUSH2 0x772 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x79C DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CE DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DE DUP2 PUSH2 0x7C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x7FA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x705 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x80D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x784 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x820 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x793 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x833 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x7B4 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x846 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x7D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x858 DUP4 DUP4 PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87C DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x886 DUP2 DUP6 PUSH2 0x6AB JUMP JUMPDEST SWAP4 POP PUSH2 0x891 DUP4 PUSH2 0x6BC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8C2 JUMPI DUP2 MLOAD PUSH2 0x8A9 DUP9 DUP3 PUSH2 0x84C JUMP JUMPDEST SWAP8 POP PUSH2 0x8B4 DUP4 PUSH2 0x864 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x895 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8E9 DUP2 DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x915 DUP2 PUSH2 0x8F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x932 DUP2 PUSH2 0x90C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x559 JUMP JUMPDEST DUP2 EQ PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x95E DUP2 PUSH2 0x938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x96D DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x98A DUP2 PUSH2 0x964 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9BA DUP9 DUP3 DUP10 ADD PUSH2 0x923 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9CB DUP9 DUP3 DUP10 ADD PUSH2 0x94F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9DC DUP9 DUP3 DUP10 ADD PUSH2 0x97B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x9ED DUP9 DUP3 DUP10 ADD PUSH2 0x97B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x9FE DUP9 DUP3 DUP10 ADD PUSH2 0x923 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA45 DUP3 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA50 DUP4 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0xA0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD0 DUP3 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xADA DUP2 DUP6 PUSH2 0xA79 JUMP JUMPDEST SWAP4 POP PUSH2 0xAEA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA8A JUMP JUMPDEST PUSH2 0xAF3 DUP2 PUSH2 0xAB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB18 DUP2 DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB36 JUMPI PUSH2 0xB35 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP5 DUP3 DUP6 ADD PUSH2 0x97B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB58 DUP3 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB63 DUP4 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB71 DUP2 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB88 JUMPI PUSH2 0xB87 PUSH2 0xA0B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBC9 DUP3 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD4 DUP4 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBE4 JUMPI PUSH2 0xBE3 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0x2B GT JUMP 0xE3 0xAC 0xB2 0xF SWAP15 BALANCE CALLDATASIZE DUP4 0xE CODECOPY 0xC4 STOP 0xAC 0x4B 0xE4 PUSH26 0x1CCD7D8023E416942D54F67A64736F6C63430008130033000000 ",
              "sourceMap": "60135:2047:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_get_1350": {
                  "entryPoint": 618,
                  "id": 1350,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@check_1441": {
                  "entryPoint": 240,
                  "id": 1441,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@get_1365": {
                  "entryPoint": 219,
                  "id": 1365,
                  "parameterSlots": 0,
                  "returnSlots": 2
                },
                "@latestAnswer_1397": {
                  "entryPoint": 183,
                  "id": 1397,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@min_1227": {
                  "entryPoint": 1213,
                  "id": 1227,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@peek_1383": {
                  "entryPoint": 198,
                  "id": 1383,
                  "parameterSlots": 0,
                  "returnSlots": 2
                },
                "abi_decode_t_int256_fromMemory": {
                  "entryPoint": 2383,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 2427,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint80_fromMemory": {
                  "entryPoint": 2339,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 2848,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
                  "entryPoint": 2448,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_encodeUpdatedPos_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr": {
                  "entryPoint": 2124,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_payable_to_t_address_payable": {
                  "entryPoint": 2005,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_address_to_t_address": {
                  "entryPoint": 1972,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 2161,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 1433,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_contract$_IAsset_$133_to_t_address": {
                  "entryPoint": 1924,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_enum$_UserBalanceOpKind_$321_to_t_uint8": {
                  "entryPoint": 1797,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_int256_to_t_int256_fromStack": {
                  "entryPoint": 1379,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 2757,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr": {
                  "entryPoint": 2020,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_uint256_to_t_uint256": {
                  "entryPoint": 1939,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 1499,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2255,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool_t_int256__to_t_bool_t_int256__fromStack_reversed": {
                  "entryPoint": 1448,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
                  "entryPoint": 1514,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
                  "entryPoint": 1394,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2814,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr": {
                  "entryPoint": 1724,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr": {
                  "entryPoint": 1696,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_string_memory_ptr": {
                  "entryPoint": 2670,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr": {
                  "entryPoint": 2148,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 1707,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 2681,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 3006,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 2893,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 2618,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 1954,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_address_payable": {
                  "entryPoint": 1987,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 1421,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_enum$_UserBalanceOpKind_$321": {
                  "entryPoint": 1760,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_int256": {
                  "entryPoint": 1369,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 1812,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 1489,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint80": {
                  "entryPoint": 2294,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_contract$_IAsset_$133_to_t_address": {
                  "entryPoint": 1906,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_enum$_UserBalanceOpKind_$321_to_t_uint8": {
                  "entryPoint": 1779,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_address": {
                  "entryPoint": 1888,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_uint160": {
                  "entryPoint": 1854,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 2698,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 1844,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 2571,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 2959,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 1649,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 1602,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1555,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 2289,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of_32": {
                  "entryPoint": 2740,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "validator_assert_t_enum$_UserBalanceOpKind_$321": {
                  "entryPoint": 1740,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_int256": {
                  "entryPoint": 2360,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 2404,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint80": {
                  "entryPoint": 2316,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:12842:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "51:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "61:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "72:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "61:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "43:7:1",
                            "type": ""
                          }
                        ],
                        "src": "7:76:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "152:52:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "169:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "191:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int256",
                                      "nodeType": "YulIdentifier",
                                      "src": "174:16:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "174:23:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "162:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "162:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "162:36:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int256_to_t_int256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "140:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "147:3:1",
                            "type": ""
                          }
                        ],
                        "src": "89:115:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "306:122:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "316:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "328:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "339:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "316:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "394:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "407:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "418:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "403:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "403:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "352:41:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "352:69:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "352:69:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "278:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "290:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "301:4:1",
                            "type": ""
                          }
                        ],
                        "src": "210:218:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "476:48:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "486:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "511:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "504:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "504:13:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "497:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "497:21:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "486:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "458:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "468:7:1",
                            "type": ""
                          }
                        ],
                        "src": "434:90:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "589:50:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "606:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "626:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "611:14:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "611:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "599:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "599:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "599:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "577:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "584:3:1",
                            "type": ""
                          }
                        ],
                        "src": "530:109:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "763:198:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "773:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "785:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "796:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "781:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "781:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "773:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "847:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "860:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "871:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "856:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "856:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "809:37:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "809:65:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "809:65:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "926:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "939:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "950:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "935:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "935:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "884:41:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "884:70:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "884:70:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool_t_int256__to_t_bool_t_int256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "727:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "739:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "747:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "758:4:1",
                            "type": ""
                          }
                        ],
                        "src": "645:316:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1012:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1022:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1033:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1022:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "994:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1004:7:1",
                            "type": ""
                          }
                        ],
                        "src": "967:77:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1115:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1132:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1155:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1137:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1137:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1125:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1125:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1125:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1103:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1110:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1050:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1294:200:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1304:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1316:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1327:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1312:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1312:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1304:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1378:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1391:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1402:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1387:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1387:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1340:37:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1340:65:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1340:65:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1459:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1472:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1483:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1468:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1468:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1415:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1415:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1415:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1258:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1270:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1278:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1289:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1174:320:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1528:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1545:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1548:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1538:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1538:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1538:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1642:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1645:4:1",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1635:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1635:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1635:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1666:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1669:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1659:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1659:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1659:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1500:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1714:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1731:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1734:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1724:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1724:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1724:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1828:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1831:4:1",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1821:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1821:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1821:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1852:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1855:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1845:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1845:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1845:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1686:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1900:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1917:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1920:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1910:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1910:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1910:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2014:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2017:4:1",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2007:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2007:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2007:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2038:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2041:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2031:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2031:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2031:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1872:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2162:40:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2173:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2189:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2183:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2183:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2173:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2145:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2155:6:1",
                            "type": ""
                          }
                        ],
                        "src": "2058:144:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2349:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2366:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2371:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2359:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2359:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2359:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2387:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2406:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2411:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2402:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2402:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2387:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2321:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2326:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "2337:11:1",
                            "type": ""
                          }
                        ],
                        "src": "2208:214:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2530:60:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2540:11:1",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "2548:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "2540:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2561:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2573:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2578:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2569:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2569:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "2561:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "2517:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "2525:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2428:162:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2660:62:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2694:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "2696:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2696:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2696:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2683:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2690:1:1",
                                        "type": "",
                                        "value": "4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2680:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2680:12:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2673:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2673:20:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2670:46:1"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_UserBalanceOpKind_$321",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2653:5:1",
                            "type": ""
                          }
                        ],
                        "src": "2596:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2794:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2804:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2815:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2804:7:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2869:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_UserBalanceOpKind_$321",
                                  "nodeType": "YulIdentifier",
                                  "src": "2821:47:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2821:54:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2821:54:1"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_UserBalanceOpKind_$321",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2776:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2786:7:1",
                            "type": ""
                          }
                        ],
                        "src": "2728:153:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2966:74:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2976:58:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3028:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_UserBalanceOpKind_$321",
                                  "nodeType": "YulIdentifier",
                                  "src": "2989:38:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2989:45:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "2976:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_UserBalanceOpKind_$321_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2946:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "2956:9:1",
                            "type": ""
                          }
                        ],
                        "src": "2887:153:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3120:85:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3137:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3192:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_UserBalanceOpKind_$321_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3142:49:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3142:56:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3130:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3130:69:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3130:69:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_UserBalanceOpKind_$321_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3108:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3115:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3046:159:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3256:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3266:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3281:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3288:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3277:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3277:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3266:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3238:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3248:7:1",
                            "type": ""
                          }
                        ],
                        "src": "3211:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3375:28:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3385:12:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3392:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "3385:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "identity",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3361:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "3371:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3343:60:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3469:82:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3479:66:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3537:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint160",
                                          "nodeType": "YulIdentifier",
                                          "src": "3519:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3519:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nodeType": "YulIdentifier",
                                      "src": "3510:8:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3510:34:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "3492:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3492:53:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "3479:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3449:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "3459:9:1",
                            "type": ""
                          }
                        ],
                        "src": "3409:142:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3617:66:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3627:50:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3671:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "3640:30:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3640:37:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "3627:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3597:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "3607:9:1",
                            "type": ""
                          }
                        ],
                        "src": "3557:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3763:66:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3773:50:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3817:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3786:30:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3786:37:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "3773:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IAsset_$133_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3743:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "3753:9:1",
                            "type": ""
                          }
                        ],
                        "src": "3689:140:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3904:80:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3921:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3971:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IAsset_$133_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3926:44:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3926:51:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3914:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3914:64:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3914:64:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IAsset_$133_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3892:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3899:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3835:149:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4045:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4062:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4085:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4067:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4067:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4055:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4055:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4055:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4033:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4040:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3990:108:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4149:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4159:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4188:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "4170:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4170:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4159:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4131:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "4141:7:1",
                            "type": ""
                          }
                        ],
                        "src": "4104:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4261:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4278:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4301:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4283:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4283:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4271:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4271:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4271:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4249:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4256:3:1",
                            "type": ""
                          }
                        ],
                        "src": "4206:108:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4373:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4383:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4412:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "4394:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4394:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4383:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4355:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "4365:7:1",
                            "type": ""
                          }
                        ],
                        "src": "4320:104:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4501:61:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4518:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4549:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "4523:25:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4523:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4511:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4511:45:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4511:45:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_payable_to_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4489:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4496:3:1",
                            "type": ""
                          }
                        ],
                        "src": "4430:132:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4750:972:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4760:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4776:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4781:4:1",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4772:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4772:14:1"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "4764:4:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4796:183:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4831:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4861:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4868:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4857:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4857:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4851:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4851:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4835:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4940:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4958:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4963:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4954:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4954:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_UserBalanceOpKind_$321_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4887:52:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4887:82:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4887:82:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4989:179:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5025:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5055:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5062:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5051:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5051:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5045:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5045:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5029:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5129:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5147:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5152:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5143:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5143:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_contract$_IAsset_$133_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5081:47:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5081:77:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5081:77:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5178:166:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5215:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5245:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5252:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5241:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5241:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5235:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5235:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5219:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5305:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5323:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5328:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5319:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5319:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5271:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5271:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5271:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5354:166:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5391:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5421:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5428:4:1",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5417:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5417:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5411:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5411:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5395:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5481:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5499:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5504:4:1",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5495:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5495:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5447:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5447:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5447:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5530:185:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5570:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5600:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5607:4:1",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5596:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5596:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5590:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5590:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5574:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5676:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5694:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5699:4:1",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5690:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5690:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_payable_to_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "5626:49:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5626:79:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5626:79:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4737:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4744:3:1",
                            "type": ""
                          }
                        ],
                        "src": "4634:1088:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5868:159:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5972:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5980:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5878:93:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5878:106:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5878:106:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5993:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6011:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6016:4:1",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6007:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6007:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5993:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5841:6:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5849:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "5857:10:1",
                            "type": ""
                          }
                        ],
                        "src": "5728:299:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6138:38:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6148:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "6160:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6165:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6156:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6156:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "6148:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "6125:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "6133:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6033:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6436:788:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6446:98:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6538:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6460:77:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6460:84:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6450:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6553:123:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6664:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6669:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6560:103:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6560:116:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6553:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6685:101:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6780:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6700:79:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6700:86:1"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "6689:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6795:21:1",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "6809:7:1"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "6799:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6885:314:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6899:34:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6926:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "6920:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6920:13:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "6903:13:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6946:130:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "7057:13:1"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "7072:3:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6953:103:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6953:123:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6946:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7089:100:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7182:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7099:82:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7099:90:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7089:6:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6847:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6850:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6844:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6844:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "6858:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6860:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6869:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6872:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6865:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6865:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "6860:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6829:14:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6831:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6840:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "6835:1:1",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "6825:374:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7208:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7215:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7208:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6415:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6422:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6431:3:1",
                            "type": ""
                          }
                        ],
                        "src": "6252:972:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7438:285:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7448:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7460:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7471:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7456:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7456:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7448:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7495:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7506:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7491:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7491:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "7514:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7520:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7510:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7510:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7484:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7484:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7484:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7540:176:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7702:6:1"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7711:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7548:153:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7548:168:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7540:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7410:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7422:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7433:4:1",
                            "type": ""
                          }
                        ],
                        "src": "7230:493:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7769:35:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7779:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7795:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7789:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7789:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7779:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "7762:6:1",
                            "type": ""
                          }
                        ],
                        "src": "7729:75:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7899:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7916:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7919:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7909:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7909:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7909:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7810:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8022:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8039:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8042:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8032:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8032:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8032:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7933:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8100:61:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8110:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8125:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8132:22:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "8121:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8121:34:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "8110:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8082:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "8092:7:1",
                            "type": ""
                          }
                        ],
                        "src": "8056:105:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8209:78:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8265:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8274:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8277:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8267:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8267:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8267:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8232:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8256:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint80",
                                          "nodeType": "YulIdentifier",
                                          "src": "8239:16:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8239:23:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8229:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8229:34:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8222:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8222:42:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8219:62:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8202:5:1",
                            "type": ""
                          }
                        ],
                        "src": "8167:120:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8355:79:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8365:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8380:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8374:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8374:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "8365:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8422:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint80",
                                  "nodeType": "YulIdentifier",
                                  "src": "8396:25:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8396:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8396:32:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "8333:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8341:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8349:5:1",
                            "type": ""
                          }
                        ],
                        "src": "8293:141:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8482:78:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8538:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8547:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8550:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8540:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8540:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8540:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8505:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8529:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int256",
                                          "nodeType": "YulIdentifier",
                                          "src": "8512:16:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8512:23:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8502:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8502:34:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8495:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8495:42:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8492:62:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8475:5:1",
                            "type": ""
                          }
                        ],
                        "src": "8440:120:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8628:79:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8638:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8653:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8647:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8647:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "8638:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8695:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8669:25:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8669:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8669:32:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "8606:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8614:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8622:5:1",
                            "type": ""
                          }
                        ],
                        "src": "8566:141:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8756:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8813:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8822:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8825:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8815:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8815:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8815:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8779:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8804:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "8786:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8786:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8776:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8776:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8769:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8769:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8766:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8749:5:1",
                            "type": ""
                          }
                        ],
                        "src": "8713:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8904:80:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8914:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8929:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8923:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8923:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "8914:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8972:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8945:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8945:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8945:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "8882:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8890:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8898:5:1",
                            "type": ""
                          }
                        ],
                        "src": "8841:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9132:829:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9179:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "9181:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9181:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9181:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9153:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9162:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9149:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9149:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9174:3:1",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9145:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9145:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "9142:120:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9272:127:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9287:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9301:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9291:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9316:73:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9361:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9372:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9357:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9357:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9381:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint80_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "9326:30:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9326:63:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "9316:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9409:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9424:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9438:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9428:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9454:73:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9499:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9510:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9495:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9495:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9519:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "9464:30:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9464:63:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "9454:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9547:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9562:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9576:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9566:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9592:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9638:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9649:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9634:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9634:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9658:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "9602:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9602:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "9592:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9686:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9701:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9715:2:1",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9705:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9731:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9777:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9788:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9773:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9773:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9797:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "9741:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9741:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "9731:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9825:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9840:17:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9854:3:1",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9844:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9871:73:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9916:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9927:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9912:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9912:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9936:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint80_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "9881:30:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9881:63:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "9871:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9070:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "9081:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9093:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9101:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9109:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "9117:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "9125:6:1",
                            "type": ""
                          }
                        ],
                        "src": "8990:971:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9995:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10012:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10015:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10005:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10005:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10005:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10109:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10112:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10102:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10102:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10102:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10133:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10136:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10126:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10126:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10126:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "9967:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10198:149:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10208:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10231:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "10213:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10213:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "10208:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10242:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "10265:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "10247:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10247:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "10242:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10276:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10288:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "10291:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "10284:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10284:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "10276:4:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10318:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "10320:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10320:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10320:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nodeType": "YulIdentifier",
                                    "src": "10309:4:1"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10315:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10306:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10306:11:1"
                              },
                              "nodeType": "YulIf",
                              "src": "10303:37:1"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "10184:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "10187:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "10193:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10153:194:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10412:40:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10423:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10439:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10433:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10433:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10423:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10395:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "10405:6:1",
                            "type": ""
                          }
                        ],
                        "src": "10353:99:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10554:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10571:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10576:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10564:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10564:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10564:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10592:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10611:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10616:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10607:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10607:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10592:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10526:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "10531:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "10542:11:1",
                            "type": ""
                          }
                        ],
                        "src": "10458:169:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10695:184:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10705:10:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10714:1:1",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "10709:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10774:63:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "10799:3:1"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "10804:1:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "10795:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10795:11:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10818:3:1"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10823:1:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "10814:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10814:11:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "10808:5:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10808:18:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10788:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10788:39:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10788:39:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "10735:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10738:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10732:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10732:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "10746:19:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10748:15:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "10757:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10760:2:1",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10753:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10753:10:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "10748:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "10728:3:1",
                                "statements": []
                              },
                              "src": "10724:113:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "10857:3:1"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "10862:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10853:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10853:16:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10871:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10846:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10846:27:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10846:27:1"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory_with_cleanup",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "10677:3:1",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "10682:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "10687:6:1",
                            "type": ""
                          }
                        ],
                        "src": "10633:246:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10933:54:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10943:38:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "10961:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10968:2:1",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10957:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10957:14:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10977:2:1",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "10973:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10973:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10953:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10953:28:1"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "10943:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10916:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "10926:6:1",
                            "type": ""
                          }
                        ],
                        "src": "10885:102:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11085:285:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11095:53:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11142:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "11109:32:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11109:39:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "11099:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11157:78:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11223:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11228:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11164:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11164:71:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11157:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11283:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11290:4:1",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11279:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11279:16:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11297:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11302:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "11244:34:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11244:65:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11244:65:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11318:46:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11329:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "11356:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "11334:21:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11334:29:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11325:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11325:39:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11318:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11066:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11073:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11081:3:1",
                            "type": ""
                          }
                        ],
                        "src": "10993:377:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11494:195:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11504:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11516:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11527:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11512:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11512:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11504:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11551:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11562:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11547:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11547:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "11570:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11576:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11566:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11566:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11540:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11540:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11540:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11596:86:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11668:6:1"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "11677:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11604:63:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11604:78:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11596:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11466:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11478:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11489:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11376:313:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11772:274:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11818:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "11820:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11820:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11820:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11793:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11802:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11789:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11789:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11814:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11785:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11785:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "11782:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "11911:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "11926:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11940:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "11930:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11955:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "12001:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "12012:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11997:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11997:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12021:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "11965:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11965:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "11955:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11742:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "11753:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11765:6:1",
                            "type": ""
                          }
                        ],
                        "src": "11695:351:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12100:362:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12110:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12133:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12115:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12115:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "12110:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12144:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12167:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12149:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12149:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "12144:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12178:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12201:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12204:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "12197:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12197:9:1"
                              },
                              "variables": [
                                {
                                  "name": "product_raw",
                                  "nodeType": "YulTypedName",
                                  "src": "12182:11:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12215:41:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "product_raw",
                                    "nodeType": "YulIdentifier",
                                    "src": "12244:11:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12226:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12226:30:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "12215:7:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12433:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "12435:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12435:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12435:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "12366:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "12359:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12359:9:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nodeType": "YulIdentifier",
                                            "src": "12389:1:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nodeType": "YulIdentifier",
                                                "src": "12396:7:1"
                                              },
                                              {
                                                "name": "x",
                                                "nodeType": "YulIdentifier",
                                                "src": "12405:1:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "12392:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12392:15:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nodeType": "YulIdentifier",
                                          "src": "12386:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12386:22:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nodeType": "YulIdentifier",
                                      "src": "12339:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12339:83:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12319:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12319:113:1"
                              },
                              "nodeType": "YulIf",
                              "src": "12316:139:1"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "12083:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "12086:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "12092:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12052:410:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12496:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12513:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12516:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12506:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12506:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12506:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12610:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12613:4:1",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12603:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12603:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12603:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12634:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12637:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12627:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12627:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12627:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "12468:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12696:143:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12706:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12729:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12711:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12711:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "12706:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12740:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12763:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12745:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12745:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "12740:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12787:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12789:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12789:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12789:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12784:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12777:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12777:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "12774:35:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12819:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12828:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12831:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "12824:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12824:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "12819:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "12685:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "12688:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "12694:1:1",
                            "type": ""
                          }
                        ],
                        "src": "12654:185:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_int256__to_t_bool_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function validator_assert_t_enum$_UserBalanceOpKind_$321(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_UserBalanceOpKind_$321(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_UserBalanceOpKind_$321(value)\n    }\n\n    function convert_t_enum$_UserBalanceOpKind_$321_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_UserBalanceOpKind_$321(value)\n    }\n\n    function abi_encode_t_enum$_UserBalanceOpKind_$321_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_UserBalanceOpKind_$321_to_t_uint8(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAsset_$133_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAsset_$133_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_IAsset_$133_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    // struct IVault.UserBalanceOp -> struct IVault.UserBalanceOp\n    function abi_encode_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // kind\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_enum$_UserBalanceOpKind_$321_to_t_uint8(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // asset\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_contract$_IAsset_$133_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xa0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct IVault.UserBalanceOp[] -> struct IVault.UserBalanceOp[]\n    function abi_encode_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_UserBalanceOp_$316_memory_ptr_to_t_struct$_UserBalanceOp_$316_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806350d25bcd1461005157806359e02dd71461006f5780636d4ce63c1461008e578063919840ad146100ad575b600080fd5b6100596100b7565b6040516100669190610572565b60405180910390f35b6100776100c6565b6040516100859291906105a8565b60405180910390f35b6100966100db565b6040516100a49291906105ea565b60405180910390f35b6100b56100f0565b005b60006100c161026a565b905090565b60008060016100d361026a565b915091509091565b60008060016100e861026a565b915091509091565b6000600167ffffffffffffffff81111561010d5761010c610613565b5b60405190808252806020026020018201604052801561014657816020015b6101336104d6565b81526020019060019003908161012b5790505b50905060018160008151811061015f5761015e610642565b5b602002602001015160000190600381111561017d5761017c610671565b5b9081600381111561019157610190610671565b5b8152505030816000815181106101aa576101a9610642565b5b60200260200101516060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073ba12222222228d8ba445958a75a0704d566bf2c873ffffffffffffffffffffffffffffffffffffffff16630e8e3e84826040518263ffffffff1660e01b815260040161023591906108cf565b600060405180830381600087803b15801561024f57600080fd5b505af1158015610263573d6000803e3d6000fd5b5050505050565b60008060007386392dc19c0b719886221c78ab11eb8cf5c5281273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610990565b5093505092505062015180426103089190610a3a565b81116040518060400160405280600381526020017f313138000000000000000000000000000000000000000000000000000000000081525090610381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103789190610afe565b60405180910390fd5b50600082136040518060400160405280600381526020017f3131380000000000000000000000000000000000000000000000000000000000815250906103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f49190610afe565b60405180910390fd5b50600061041283670de0b6b3a76400006104bd565b9050670de0b6b3a7640000817332296969ef14eb0c6d29669c550d4a044913023073ffffffffffffffffffffffffffffffffffffffff1663679aefce6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610b20565b6104ab9190610b4d565b6104b59190610bbe565b935050505090565b60008183106104cc57816104ce565b825b905092915050565b6040518060a00160405280600060038111156104f5576104f4610671565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000819050919050565b61056c81610559565b82525050565b60006020820190506105876000830184610563565b92915050565b60008115159050919050565b6105a28161058d565b82525050565b60006040820190506105bd6000830185610599565b6105ca6020830184610563565b9392505050565b6000819050919050565b6105e4816105d1565b82525050565b60006040820190506105ff6000830185610599565b61060c60208301846105db565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600481106106dd576106dc610671565b5b50565b60008190506106ee826106cc565b919050565b60006106fe826106e0565b9050919050565b61070e816106f3565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061075961075461074f84610714565b610734565b610714565b9050919050565b600061076b8261073e565b9050919050565b600061077d82610760565b9050919050565b61078d81610772565b82525050565b61079c816105d1565b82525050565b60006107ad82610714565b9050919050565b6107bd816107a2565b82525050565b60006107ce82610714565b9050919050565b6107de816107c3565b82525050565b60a0820160008201516107fa6000850182610705565b50602082015161080d6020850182610784565b5060408201516108206040850182610793565b50606082015161083360608501826107b4565b50608082015161084660808501826107d5565b50505050565b600061085883836107e4565b60a08301905092915050565b6000602082019050919050565b600061087c826106a0565b61088681856106ab565b9350610891836106bc565b8060005b838110156108c25781516108a9888261084c565b97506108b483610864565b925050600181019050610895565b5085935050505092915050565b600060208201905081810360008301526108e98184610871565b905092915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b610915816108f6565b811461092057600080fd5b50565b6000815190506109328161090c565b92915050565b61094181610559565b811461094c57600080fd5b50565b60008151905061095e81610938565b92915050565b61096d816105d1565b811461097857600080fd5b50565b60008151905061098a81610964565b92915050565b600080600080600060a086880312156109ac576109ab6108f1565b5b60006109ba88828901610923565b95505060206109cb8882890161094f565b94505060406109dc8882890161097b565b93505060606109ed8882890161097b565b92505060806109fe88828901610923565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a45826105d1565b9150610a50836105d1565b9250828203905081811115610a6857610a67610a0b565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aa8578082015181840152602081019050610a8d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ad082610a6e565b610ada8185610a79565b9350610aea818560208601610a8a565b610af381610ab4565b840191505092915050565b60006020820190508181036000830152610b188184610ac5565b905092915050565b600060208284031215610b3657610b356108f1565b5b6000610b448482850161097b565b91505092915050565b6000610b58826105d1565b9150610b63836105d1565b9250828202610b71816105d1565b91508282048414831517610b8857610b87610a0b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bc9826105d1565b9150610bd4836105d1565b925082610be457610be3610b8f565b5b82820490509291505056fea26469706673582212203c2b1156e3acb20f9e3136830e39c400ac4be4791ccd7d8023e416942d54f67a64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x919840AD EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85 SWAP3 SWAP2 SWAP1 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP3 SWAP2 SWAP1 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xC1 PUSH2 0x26A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0xD3 PUSH2 0x26A JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0xE8 PUSH2 0x26A JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x613 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x146 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x133 PUSH2 0x4D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15F JUMPI PUSH2 0x15E PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17D JUMPI PUSH2 0x17C PUSH2 0x671 JUMP JUMPDEST JUMPDEST SWAP1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x191 JUMPI PUSH2 0x190 PUSH2 0x671 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AA JUMPI PUSH2 0x1A9 PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0xBA12222222228D8BA445958A75A0704D566BF2C8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E3E84 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0x86392DC19C0B719886221C78AB11EB8CF5C52812 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH3 0x15180 TIMESTAMP PUSH2 0x308 SWAP2 SWAP1 PUSH2 0xA3A JUMP JUMPDEST DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131380000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 SGT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131380000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x412 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH20 0x32296969EF14EB0C6D29669C550D4A0449130230 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x4CC JUMPI DUP2 PUSH2 0x4CE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F5 JUMPI PUSH2 0x4F4 PUSH2 0x671 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56C DUP2 PUSH2 0x559 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x587 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A2 DUP2 PUSH2 0x58D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x5CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x563 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E4 DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5FF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x60C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x671 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x6EE DUP3 PUSH2 0x6CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FE DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70E DUP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x759 PUSH2 0x754 PUSH2 0x74F DUP5 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76B DUP3 PUSH2 0x73E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP3 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x78D DUP2 PUSH2 0x772 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x79C DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CE DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DE DUP2 PUSH2 0x7C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x7FA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x705 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x80D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x784 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x820 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x793 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x833 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x7B4 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x846 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x7D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x858 DUP4 DUP4 PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87C DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x886 DUP2 DUP6 PUSH2 0x6AB JUMP JUMPDEST SWAP4 POP PUSH2 0x891 DUP4 PUSH2 0x6BC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8C2 JUMPI DUP2 MLOAD PUSH2 0x8A9 DUP9 DUP3 PUSH2 0x84C JUMP JUMPDEST SWAP8 POP PUSH2 0x8B4 DUP4 PUSH2 0x864 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x895 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8E9 DUP2 DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x915 DUP2 PUSH2 0x8F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x932 DUP2 PUSH2 0x90C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x559 JUMP JUMPDEST DUP2 EQ PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x95E DUP2 PUSH2 0x938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x96D DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x98A DUP2 PUSH2 0x964 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9BA DUP9 DUP3 DUP10 ADD PUSH2 0x923 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9CB DUP9 DUP3 DUP10 ADD PUSH2 0x94F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9DC DUP9 DUP3 DUP10 ADD PUSH2 0x97B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x9ED DUP9 DUP3 DUP10 ADD PUSH2 0x97B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x9FE DUP9 DUP3 DUP10 ADD PUSH2 0x923 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA45 DUP3 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA50 DUP4 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0xA0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD0 DUP3 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xADA DUP2 DUP6 PUSH2 0xA79 JUMP JUMPDEST SWAP4 POP PUSH2 0xAEA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA8A JUMP JUMPDEST PUSH2 0xAF3 DUP2 PUSH2 0xAB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB18 DUP2 DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB36 JUMPI PUSH2 0xB35 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP5 DUP3 DUP6 ADD PUSH2 0x97B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB58 DUP3 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB63 DUP4 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB71 DUP2 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB88 JUMPI PUSH2 0xB87 PUSH2 0xA0B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBC9 DUP3 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD4 DUP4 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBE4 JUMPI PUSH2 0xBE3 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0x2B GT JUMP 0xE3 0xAC 0xB2 0xF SWAP15 BALANCE CALLDATASIZE DUP4 0xE CODECOPY 0xC4 STOP 0xAC 0x4B 0xE4 PUSH26 0x1CCD7D8023E416942D54F67A64736F6C63430008130033000000 ",
              "sourceMap": "60135:2047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61768:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;61568:102;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;61384:94;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;61929:251;;;:::i;:::-;;61768:101;61824:11;61857:6;:4;:6::i;:::-;61843:21;;61768:101;:::o;61568:102::-;61616:4;61622:6;61644:4;61657:6;:4;:6::i;:::-;61636:29;;;;61568:102;;:::o;61384:94::-;61431:4;61437:7;61460:4;61466:6;:4;:6::i;:::-;61452:21;;;;61384:94;;:::o;61929:251::-;61961:33;62024:1;61997:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;61961:65;;62046:42;62032:3;62036:1;62032:6;;;;;;;;:::i;:::-;;;;;;;;:11;;:56;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;62118:4;62094:3;62098:1;62094:6;;;;;;;;:::i;:::-;;;;;;;;:13;;:29;;;;;;;;;;;60656:42;62130:40;;;62171:3;62130:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61955:225;61929:251::o;60895:371::-;60934:7;60952:17;60973;60567:42;60996:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60949:70;;;;;;;61063:6;61045:15;:24;;;;:::i;:::-;61033:9;:36;61071:20;;;;;;;;;;;;;;;;;61025:67;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;61119:1;61106:10;:14;61122:20;;;;;;;;;;;;;;;;;61098:45;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;61150:16;61169:35;61186:10;61199:4;61169:8;:35::i;:::-;61150:54;;61257:4;61245:8;60273:42;61219:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;61218:43;;;;:::i;:::-;61211:50;;;;;60895:371;:::o;59358:98::-;59416:7;59442:1;59438;:5;:13;;59450:1;59438:13;;;59446:1;59438:13;59431:20;;59358:98;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:76:1:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o;434:90::-;468:7;511:5;504:13;497:21;486:32;;434:90;;;:::o;530:109::-;611:21;626:5;611:21;:::i;:::-;606:3;599:34;530:109;;:::o;645:316::-;758:4;796:2;785:9;781:18;773:26;;809:65;871:1;860:9;856:17;847:6;809:65;:::i;:::-;884:70;950:2;939:9;935:18;926:6;884:70;:::i;:::-;645:316;;;;;:::o;967:77::-;1004:7;1033:5;1022:16;;967:77;;;:::o;1050:118::-;1137:24;1155:5;1137:24;:::i;:::-;1132:3;1125:37;1050:118;;:::o;1174:320::-;1289:4;1327:2;1316:9;1312:18;1304:26;;1340:65;1402:1;1391:9;1387:17;1378:6;1340:65;:::i;:::-;1415:72;1483:2;1472:9;1468:18;1459:6;1415:72;:::i;:::-;1174:320;;;;;:::o;1500:180::-;1548:77;1545:1;1538:88;1645:4;1642:1;1635:15;1669:4;1666:1;1659:15;1686:180;1734:77;1731:1;1724:88;1831:4;1828:1;1821:15;1855:4;1852:1;1845:15;1872:180;1920:77;1917:1;1910:88;2017:4;2014:1;2007:15;2041:4;2038:1;2031:15;2058:144;2155:6;2189:5;2183:12;2173:22;;2058:144;;;:::o;2208:214::-;2337:11;2371:6;2366:3;2359:19;2411:4;2406:3;2402:14;2387:29;;2208:214;;;;:::o;2428:162::-;2525:4;2548:3;2540:11;;2578:4;2573:3;2569:14;2561:22;;2428:162;;;:::o;2596:126::-;2690:1;2683:5;2680:12;2670:46;;2696:18;;:::i;:::-;2670:46;2596:126;:::o;2728:153::-;2786:7;2815:5;2804:16;;2821:54;2869:5;2821:54;:::i;:::-;2728:153;;;:::o;2887:::-;2956:9;2989:45;3028:5;2989:45;:::i;:::-;2976:58;;2887:153;;;:::o;3046:159::-;3142:56;3192:5;3142:56;:::i;:::-;3137:3;3130:69;3046:159;;:::o;3211:126::-;3248:7;3288:42;3281:5;3277:54;3266:65;;3211:126;;;:::o;3343:60::-;3371:3;3392:5;3385:12;;3343:60;;;:::o;3409:142::-;3459:9;3492:53;3510:34;3519:24;3537:5;3519:24;:::i;:::-;3510:34;:::i;:::-;3492:53;:::i;:::-;3479:66;;3409:142;;;:::o;3557:126::-;3607:9;3640:37;3671:5;3640:37;:::i;:::-;3627:50;;3557:126;;;:::o;3689:140::-;3753:9;3786:37;3817:5;3786:37;:::i;:::-;3773:50;;3689:140;;;:::o;3835:149::-;3926:51;3971:5;3926:51;:::i;:::-;3921:3;3914:64;3835:149;;:::o;3990:108::-;4067:24;4085:5;4067:24;:::i;:::-;4062:3;4055:37;3990:108;;:::o;4104:96::-;4141:7;4170:24;4188:5;4170:24;:::i;:::-;4159:35;;4104:96;;;:::o;4206:108::-;4283:24;4301:5;4283:24;:::i;:::-;4278:3;4271:37;4206:108;;:::o;4320:104::-;4365:7;4394:24;4412:5;4394:24;:::i;:::-;4383:35;;4320:104;;;:::o;4430:132::-;4523:32;4549:5;4523:32;:::i;:::-;4518:3;4511:45;4430:132;;:::o;4634:1088::-;4781:4;4776:3;4772:14;4868:4;4861:5;4857:16;4851:23;4887:82;4963:4;4958:3;4954:14;4940:12;4887:82;:::i;:::-;4796:183;5062:4;5055:5;5051:16;5045:23;5081:77;5152:4;5147:3;5143:14;5129:12;5081:77;:::i;:::-;4989:179;5252:4;5245:5;5241:16;5235:23;5271:63;5328:4;5323:3;5319:14;5305:12;5271:63;:::i;:::-;5178:166;5428:4;5421:5;5417:16;5411:23;5447:63;5504:4;5499:3;5495:14;5481:12;5447:63;:::i;:::-;5354:166;5607:4;5600:5;5596:16;5590:23;5626:79;5699:4;5694:3;5690:14;5676:12;5626:79;:::i;:::-;5530:185;4750:972;4634:1088;;:::o;5728:299::-;5857:10;5878:106;5980:3;5972:6;5878:106;:::i;:::-;6016:4;6011:3;6007:14;5993:28;;5728:299;;;;:::o;6033:143::-;6133:4;6165;6160:3;6156:14;6148:22;;6033:143;;;:::o;6252:972::-;6431:3;6460:84;6538:5;6460:84;:::i;:::-;6560:116;6669:6;6664:3;6560:116;:::i;:::-;6553:123;;6700:86;6780:5;6700:86;:::i;:::-;6809:7;6840:1;6825:374;6850:6;6847:1;6844:13;6825:374;;;6926:6;6920:13;6953:123;7072:3;7057:13;6953:123;:::i;:::-;6946:130;;7099:90;7182:6;7099:90;:::i;:::-;7089:100;;6885:314;6872:1;6869;6865:9;6860:14;;6825:374;;;6829:14;7215:3;7208:10;;6436:788;;;6252:972;;;;:::o;7230:493::-;7433:4;7471:2;7460:9;7456:18;7448:26;;7520:9;7514:4;7510:20;7506:1;7495:9;7491:17;7484:47;7548:168;7711:4;7702:6;7548:168;:::i;:::-;7540:176;;7230:493;;;;:::o;7810:117::-;7919:1;7916;7909:12;8056:105;8092:7;8132:22;8125:5;8121:34;8110:45;;8056:105;;;:::o;8167:120::-;8239:23;8256:5;8239:23;:::i;:::-;8232:5;8229:34;8219:62;;8277:1;8274;8267:12;8219:62;8167:120;:::o;8293:141::-;8349:5;8380:6;8374:13;8365:22;;8396:32;8422:5;8396:32;:::i;:::-;8293:141;;;;:::o;8440:120::-;8512:23;8529:5;8512:23;:::i;:::-;8505:5;8502:34;8492:62;;8550:1;8547;8540:12;8492:62;8440:120;:::o;8566:141::-;8622:5;8653:6;8647:13;8638:22;;8669:32;8695:5;8669:32;:::i;:::-;8566:141;;;;:::o;8713:122::-;8786:24;8804:5;8786:24;:::i;:::-;8779:5;8776:35;8766:63;;8825:1;8822;8815:12;8766:63;8713:122;:::o;8841:143::-;8898:5;8929:6;8923:13;8914:22;;8945:33;8972:5;8945:33;:::i;:::-;8841:143;;;;:::o;8990:971::-;9093:6;9101;9109;9117;9125;9174:3;9162:9;9153:7;9149:23;9145:33;9142:120;;;9181:79;;:::i;:::-;9142:120;9301:1;9326:63;9381:7;9372:6;9361:9;9357:22;9326:63;:::i;:::-;9316:73;;9272:127;9438:2;9464:63;9519:7;9510:6;9499:9;9495:22;9464:63;:::i;:::-;9454:73;;9409:128;9576:2;9602:64;9658:7;9649:6;9638:9;9634:22;9602:64;:::i;:::-;9592:74;;9547:129;9715:2;9741:64;9797:7;9788:6;9777:9;9773:22;9741:64;:::i;:::-;9731:74;;9686:129;9854:3;9881:63;9936:7;9927:6;9916:9;9912:22;9881:63;:::i;:::-;9871:73;;9825:129;8990:971;;;;;;;;:::o;9967:180::-;10015:77;10012:1;10005:88;10112:4;10109:1;10102:15;10136:4;10133:1;10126:15;10153:194;10193:4;10213:20;10231:1;10213:20;:::i;:::-;10208:25;;10247:20;10265:1;10247:20;:::i;:::-;10242:25;;10291:1;10288;10284:9;10276:17;;10315:1;10309:4;10306:11;10303:37;;;10320:18;;:::i;:::-;10303:37;10153:194;;;;:::o;10353:99::-;10405:6;10439:5;10433:12;10423:22;;10353:99;;;:::o;10458:169::-;10542:11;10576:6;10571:3;10564:19;10616:4;10611:3;10607:14;10592:29;;10458:169;;;;:::o;10633:246::-;10714:1;10724:113;10738:6;10735:1;10732:13;10724:113;;;10823:1;10818:3;10814:11;10808:18;10804:1;10799:3;10795:11;10788:39;10760:2;10757:1;10753:10;10748:15;;10724:113;;;10871:1;10862:6;10857:3;10853:16;10846:27;10695:184;10633:246;;;:::o;10885:102::-;10926:6;10977:2;10973:7;10968:2;10961:5;10957:14;10953:28;10943:38;;10885:102;;;:::o;10993:377::-;11081:3;11109:39;11142:5;11109:39;:::i;:::-;11164:71;11228:6;11223:3;11164:71;:::i;:::-;11157:78;;11244:65;11302:6;11297:3;11290:4;11283:5;11279:16;11244:65;:::i;:::-;11334:29;11356:6;11334:29;:::i;:::-;11329:3;11325:39;11318:46;;11085:285;10993:377;;;;:::o;11376:313::-;11489:4;11527:2;11516:9;11512:18;11504:26;;11576:9;11570:4;11566:20;11562:1;11551:9;11547:17;11540:47;11604:78;11677:4;11668:6;11604:78;:::i;:::-;11596:86;;11376:313;;;;:::o;11695:351::-;11765:6;11814:2;11802:9;11793:7;11789:23;11785:32;11782:119;;;11820:79;;:::i;:::-;11782:119;11940:1;11965:64;12021:7;12012:6;12001:9;11997:22;11965:64;:::i;:::-;11955:74;;11911:128;11695:351;;;;:::o;12052:410::-;12092:7;12115:20;12133:1;12115:20;:::i;:::-;12110:25;;12149:20;12167:1;12149:20;:::i;:::-;12144:25;;12204:1;12201;12197:9;12226:30;12244:11;12226:30;:::i;:::-;12215:41;;12405:1;12396:7;12392:15;12389:1;12386:22;12366:1;12359:9;12339:83;12316:139;;12435:18;;:::i;:::-;12316:139;12100:362;12052:410;;;;:::o;12468:180::-;12516:77;12513:1;12506:88;12613:4;12610:1;12603:15;12637:4;12634:1;12627:15;12654:185;12694:1;12711:20;12729:1;12711:20;:::i;:::-;12706:25;;12745:20;12763:1;12745:20;:::i;:::-;12740:25;;12784:1;12774:35;;12789:18;;:::i;:::-;12774:35;12831:1;12828;12824:9;12819:14;;12654:185;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "621800",
                "executionCost": "657",
                "totalCost": "622457"
              },
              "external": {
                "check()": "infinite",
                "get()": "infinite",
                "latestAnswer()": "infinite",
                "peek()": "infinite"
              },
              "internal": {
                "_get()": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "PUSH",
                  "source": 0,
                  "value": "80"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "PUSH",
                  "source": 0,
                  "value": "40"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "MSTORE",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "CALLVALUE",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "DUP1",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "ISZERO",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "PUSH [tag]",
                  "source": 0,
                  "value": "1"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "JUMPI",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "DUP1",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "REVERT",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "tag",
                  "source": 0,
                  "value": "1"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "JUMPDEST",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "POP",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "PUSH #[$]",
                  "source": 0,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "DUP1",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "PUSH [$]",
                  "source": 0,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "CODECOPY",
                  "source": 0
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 60135,
                  "end": 62182,
                  "name": "RETURN",
                  "source": 0
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a26469706673582212203c2b1156e3acb20f9e3136830e39c400ac4be4791ccd7d8023e416942d54f67a64736f6c63430008130033",
                  ".code": [
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "80"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "CALLVALUE",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "tag",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "CALLDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "LT",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "2"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "CALLDATALOAD",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "E0"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "SHR",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "50D25BCD"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "EQ",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "3"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "59E02DD7"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "EQ",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "6D4CE63C"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "EQ",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "5"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "919840AD"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "EQ",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "6"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "tag",
                      "source": 0,
                      "value": "2"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60135,
                      "end": 62182,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "tag",
                      "source": 0,
                      "value": "3"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "7"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "8"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "tag",
                      "source": 0,
                      "value": "7"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "9"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "10"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "tag",
                      "source": 0,
                      "value": "9"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "RETURN",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "tag",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "11"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "12"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "tag",
                      "source": 0,
                      "value": "11"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "13"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "SWAP3",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "14"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "tag",
                      "source": 0,
                      "value": "13"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "RETURN",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "tag",
                      "source": 0,
                      "value": "5"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "15"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "16"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "tag",
                      "source": 0,
                      "value": "15"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "17"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "SWAP3",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "18"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "tag",
                      "source": 0,
                      "value": "17"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "RETURN",
                      "source": 0
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "tag",
                      "source": 0,
                      "value": "6"
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "19"
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "tag",
                      "source": 0,
                      "value": "19"
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "STOP",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "tag",
                      "source": 0,
                      "value": "8"
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61824,
                      "end": 61835,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 61857,
                      "end": 61863,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "22"
                    },
                    {
                      "begin": 61857,
                      "end": 61861,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "23"
                    },
                    {
                      "begin": 61857,
                      "end": 61863,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61857,
                      "end": 61863,
                      "name": "tag",
                      "source": 0,
                      "value": "22"
                    },
                    {
                      "begin": 61857,
                      "end": 61863,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61843,
                      "end": 61864,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61843,
                      "end": 61864,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61768,
                      "end": 61869,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "tag",
                      "source": 0,
                      "value": "12"
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61616,
                      "end": 61620,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 61622,
                      "end": 61628,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61644,
                      "end": 61648,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 61657,
                      "end": 61663,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "25"
                    },
                    {
                      "begin": 61657,
                      "end": 61661,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "23"
                    },
                    {
                      "begin": 61657,
                      "end": 61663,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61657,
                      "end": 61663,
                      "name": "tag",
                      "source": 0,
                      "value": "25"
                    },
                    {
                      "begin": 61657,
                      "end": 61663,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61636,
                      "end": 61665,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61636,
                      "end": 61665,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61636,
                      "end": 61665,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61636,
                      "end": 61665,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61568,
                      "end": 61670,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "tag",
                      "source": 0,
                      "value": "16"
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61431,
                      "end": 61435,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 61437,
                      "end": 61444,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61460,
                      "end": 61464,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 61466,
                      "end": 61472,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "27"
                    },
                    {
                      "begin": 61466,
                      "end": 61470,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "23"
                    },
                    {
                      "begin": 61466,
                      "end": 61472,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61466,
                      "end": 61472,
                      "name": "tag",
                      "source": 0,
                      "value": "27"
                    },
                    {
                      "begin": 61466,
                      "end": 61472,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61452,
                      "end": 61473,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61452,
                      "end": 61473,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61452,
                      "end": 61473,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61452,
                      "end": 61473,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61384,
                      "end": 61478,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "tag",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61961,
                      "end": 61994,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62024,
                      "end": 62025,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "GT",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "29"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "30"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "31"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "tag",
                      "source": 0,
                      "value": "30"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "tag",
                      "source": 0,
                      "value": "29"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "MUL",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "32"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "tag",
                      "source": 0,
                      "value": "33"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "34"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "35"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "tag",
                      "source": 0,
                      "value": "34"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "33"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "tag",
                      "source": 0,
                      "value": "32"
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61997,
                      "end": 62026,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61961,
                      "end": 62026,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61961,
                      "end": 62026,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 62046,
                      "end": 62088,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 62032,
                      "end": 62035,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62036,
                      "end": 62037,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "LT",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "36"
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "37"
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "38"
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "tag",
                      "source": 0,
                      "value": "37"
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "tag",
                      "source": 0,
                      "value": "36"
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "MUL",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62038,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62043,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62032,
                      "end": 62043,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "PUSH",
                      "source": 0,
                      "value": "3"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "GT",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "39"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "41"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "tag",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "tag",
                      "source": 0,
                      "value": "39"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "PUSH",
                      "source": 0,
                      "value": "3"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "GT",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "42"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "43"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "41"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "tag",
                      "source": 0,
                      "value": "43"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "tag",
                      "source": 0,
                      "value": "42"
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 62032,
                      "end": 62088,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 62118,
                      "end": 62122,
                      "name": "ADDRESS",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62097,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62098,
                      "end": 62099,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "LT",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "44"
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "45"
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "38"
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "tag",
                      "source": 0,
                      "value": "45"
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "tag",
                      "source": 0,
                      "value": "44"
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "MUL",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62100,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62107,
                      "name": "PUSH",
                      "source": 0,
                      "value": "60"
                    },
                    {
                      "begin": 62094,
                      "end": 62107,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 62094,
                      "end": 62123,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60656,
                      "end": 60698,
                      "name": "PUSH",
                      "source": 0,
                      "value": "BA12222222228D8BA445958A75A0704D566BF2C8"
                    },
                    {
                      "begin": 62130,
                      "end": 62170,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 62130,
                      "end": 62170,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62170,
                      "name": "PUSH",
                      "source": 0,
                      "value": "E8E3E84"
                    },
                    {
                      "begin": 62171,
                      "end": 62174,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "E0"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "SHL",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "46"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "47"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "tag",
                      "source": 0,
                      "value": "46"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP4",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP8",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "EXTCODESIZE",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "48"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "tag",
                      "source": 0,
                      "value": "48"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "GAS",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "CALL",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "50"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "RETURNDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "RETURNDATACOPY",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "RETURNDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "tag",
                      "source": 0,
                      "value": "50"
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 62130,
                      "end": 62175,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61955,
                      "end": 62180,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61929,
                      "end": 62180,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 60895,
                      "end": 61266,
                      "name": "tag",
                      "source": 0,
                      "value": "23"
                    },
                    {
                      "begin": 60895,
                      "end": 61266,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 60934,
                      "end": 60941,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 60952,
                      "end": 60969,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60973,
                      "end": 60990,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 60567,
                      "end": 60609,
                      "name": "PUSH",
                      "source": 0,
                      "value": "86392DC19C0B719886221C78AB11EB8CF5C52812"
                    },
                    {
                      "begin": 60996,
                      "end": 61017,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 60996,
                      "end": 61017,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61017,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FEAF968C"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "E0"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "SHL",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "A0"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP4",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP7",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "GAS",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "STATICCALL",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "53"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "RETURNDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "RETURNDATACOPY",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "RETURNDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "tag",
                      "source": 0,
                      "value": "53"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "RETURNDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1F"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "NOT",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1F"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "54"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "55"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "tag",
                      "source": 0,
                      "value": "54"
                    },
                    {
                      "begin": 60996,
                      "end": 61019,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 60949,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60949,
                      "end": 61019,
                      "name": "SWAP4",
                      "source": 0
                    },
                    {
                      "begin": 60949,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60949,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60949,
                      "end": 61019,
                      "name": "SWAP3",
                      "source": 0
                    },
                    {
                      "begin": 60949,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60949,
                      "end": 61019,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61063,
                      "end": 61069,
                      "name": "PUSH",
                      "source": 0,
                      "value": "15180"
                    },
                    {
                      "begin": 61045,
                      "end": 61060,
                      "name": "TIMESTAMP",
                      "source": 0
                    },
                    {
                      "begin": 61045,
                      "end": 61069,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "56"
                    },
                    {
                      "begin": 61045,
                      "end": 61069,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61045,
                      "end": 61069,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61045,
                      "end": 61069,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "57"
                    },
                    {
                      "begin": 61045,
                      "end": 61069,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61045,
                      "end": 61069,
                      "name": "tag",
                      "source": 0,
                      "value": "56"
                    },
                    {
                      "begin": 61045,
                      "end": 61069,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61033,
                      "end": 61042,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61033,
                      "end": 61069,
                      "name": "GT",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "PUSH",
                      "source": 0,
                      "value": "3"
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "PUSH",
                      "source": 0,
                      "value": "3131380000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61071,
                      "end": 61091,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "58"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "PUSH",
                      "source": 0,
                      "value": "8C379A000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "59"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "60"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "tag",
                      "source": 0,
                      "value": "59"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "tag",
                      "source": 0,
                      "value": "58"
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61025,
                      "end": 61092,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61119,
                      "end": 61120,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 61106,
                      "end": 61116,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 61106,
                      "end": 61120,
                      "name": "SGT",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "PUSH",
                      "source": 0,
                      "value": "3"
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "PUSH",
                      "source": 0,
                      "value": "3131380000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61122,
                      "end": 61142,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "61"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "PUSH",
                      "source": 0,
                      "value": "8C379A000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "62"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "60"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "tag",
                      "source": 0,
                      "value": "62"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "tag",
                      "source": 0,
                      "value": "61"
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61098,
                      "end": 61143,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61150,
                      "end": 61166,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 61169,
                      "end": 61204,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "63"
                    },
                    {
                      "begin": 61186,
                      "end": 61196,
                      "name": "DUP4",
                      "source": 0
                    },
                    {
                      "begin": 61199,
                      "end": 61203,
                      "name": "PUSH",
                      "source": 0,
                      "value": "DE0B6B3A7640000"
                    },
                    {
                      "begin": 61169,
                      "end": 61177,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "64"
                    },
                    {
                      "begin": 61169,
                      "end": 61204,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61169,
                      "end": 61204,
                      "name": "tag",
                      "source": 0,
                      "value": "63"
                    },
                    {
                      "begin": 61169,
                      "end": 61204,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61150,
                      "end": 61204,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61150,
                      "end": 61204,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61257,
                      "end": 61261,
                      "name": "PUSH",
                      "source": 0,
                      "value": "DE0B6B3A7640000"
                    },
                    {
                      "begin": 61245,
                      "end": 61253,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 60273,
                      "end": 60315,
                      "name": "PUSH",
                      "source": 0,
                      "value": "32296969EF14EB0C6D29669C550D4A0449130230"
                    },
                    {
                      "begin": 61219,
                      "end": 61240,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 61219,
                      "end": 61240,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61240,
                      "name": "PUSH",
                      "source": 0,
                      "value": "679AEFCE"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "E0"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "SHL",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP4",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP7",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "GAS",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "STATICCALL",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "66"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "RETURNDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "RETURNDATACOPY",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "RETURNDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "tag",
                      "source": 0,
                      "value": "66"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "RETURNDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1F"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "NOT",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1F"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "67"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "68"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "tag",
                      "source": 0,
                      "value": "67"
                    },
                    {
                      "begin": 61219,
                      "end": 61242,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61253,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "69"
                    },
                    {
                      "begin": 61219,
                      "end": 61253,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61253,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61253,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "70"
                    },
                    {
                      "begin": 61219,
                      "end": 61253,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61219,
                      "end": 61253,
                      "name": "tag",
                      "source": 0,
                      "value": "69"
                    },
                    {
                      "begin": 61219,
                      "end": 61253,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61218,
                      "end": 61261,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "71"
                    },
                    {
                      "begin": 61218,
                      "end": 61261,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 61218,
                      "end": 61261,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 61218,
                      "end": 61261,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "72"
                    },
                    {
                      "begin": 61218,
                      "end": 61261,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 61218,
                      "end": 61261,
                      "name": "tag",
                      "source": 0,
                      "value": "71"
                    },
                    {
                      "begin": 61218,
                      "end": 61261,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 61211,
                      "end": 61261,
                      "name": "SWAP4",
                      "source": 0
                    },
                    {
                      "begin": 61211,
                      "end": 61261,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61211,
                      "end": 61261,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61211,
                      "end": 61261,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 61211,
                      "end": 61261,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 60895,
                      "end": 61266,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 60895,
                      "end": 61266,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 59358,
                      "end": 59456,
                      "name": "tag",
                      "source": 0,
                      "value": "64"
                    },
                    {
                      "begin": 59358,
                      "end": 59456,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 59416,
                      "end": 59423,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 59442,
                      "end": 59443,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 59438,
                      "end": 59439,
                      "name": "DUP4",
                      "source": 0
                    },
                    {
                      "begin": 59438,
                      "end": 59443,
                      "name": "LT",
                      "source": 0
                    },
                    {
                      "begin": 59438,
                      "end": 59451,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "74"
                    },
                    {
                      "begin": 59438,
                      "end": 59451,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 59450,
                      "end": 59451,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 59438,
                      "end": 59451,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "75"
                    },
                    {
                      "begin": 59438,
                      "end": 59451,
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 59438,
                      "end": 59451,
                      "name": "tag",
                      "source": 0,
                      "value": "74"
                    },
                    {
                      "begin": 59438,
                      "end": 59451,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 59446,
                      "end": 59447,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 59438,
                      "end": 59451,
                      "name": "tag",
                      "source": 0,
                      "value": "75"
                    },
                    {
                      "begin": 59438,
                      "end": 59451,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 59431,
                      "end": 59451,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 59431,
                      "end": 59451,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 59358,
                      "end": 59456,
                      "name": "SWAP3",
                      "source": 0
                    },
                    {
                      "begin": 59358,
                      "end": 59456,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 59358,
                      "end": 59456,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 59358,
                      "end": 59456,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 59358,
                      "end": 59456,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "tag",
                      "source": -1,
                      "value": "35"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "JUMPDEST",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "40"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "MLOAD",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "DUP1",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "ADD",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "40"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "MSTORE",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "DUP1",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "3"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "DUP2",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "GT",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "ISZERO",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH [tag]",
                      "source": -1,
                      "value": "76"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "JUMPI",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH [tag]",
                      "source": -1,
                      "value": "77"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH [tag]",
                      "source": -1,
                      "value": "41"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "tag",
                      "source": -1,
                      "value": "77"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "JUMPDEST",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "tag",
                      "source": -1,
                      "value": "76"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "JUMPDEST",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "DUP2",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "MSTORE",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "20"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "ADD",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "AND",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "DUP2",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "MSTORE",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "20"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "ADD",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "DUP2",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "MSTORE",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "20"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "ADD",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "AND",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "DUP2",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "MSTORE",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "20"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "ADD",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "AND",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "DUP2",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "MSTORE",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SWAP1",
                      "source": -1
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": -1
                    },
                    {
                      "begin": 7,
                      "end": 83,
                      "name": "tag",
                      "source": 1,
                      "value": "78"
                    },
                    {
                      "begin": 7,
                      "end": 83,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 43,
                      "end": 50,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 72,
                      "end": 77,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 61,
                      "end": 77,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 61,
                      "end": 77,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 7,
                      "end": 83,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 7,
                      "end": 83,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 7,
                      "end": 83,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 7,
                      "end": 83,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 89,
                      "end": 204,
                      "name": "tag",
                      "source": 1,
                      "value": "79"
                    },
                    {
                      "begin": 89,
                      "end": 204,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 174,
                      "end": 197,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "126"
                    },
                    {
                      "begin": 191,
                      "end": 196,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 174,
                      "end": 197,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "78"
                    },
                    {
                      "begin": 174,
                      "end": 197,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 174,
                      "end": 197,
                      "name": "tag",
                      "source": 1,
                      "value": "126"
                    },
                    {
                      "begin": 174,
                      "end": 197,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 169,
                      "end": 172,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 162,
                      "end": 198,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 89,
                      "end": 204,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 89,
                      "end": 204,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 89,
                      "end": 204,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 210,
                      "end": 428,
                      "name": "tag",
                      "source": 1,
                      "value": "10"
                    },
                    {
                      "begin": 210,
                      "end": 428,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 301,
                      "end": 305,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 339,
                      "end": 341,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 328,
                      "end": 337,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 324,
                      "end": 342,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 316,
                      "end": 342,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 316,
                      "end": 342,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 352,
                      "end": 421,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "128"
                    },
                    {
                      "begin": 418,
                      "end": 419,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 407,
                      "end": 416,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 403,
                      "end": 420,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 394,
                      "end": 400,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 352,
                      "end": 421,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "79"
                    },
                    {
                      "begin": 352,
                      "end": 421,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 352,
                      "end": 421,
                      "name": "tag",
                      "source": 1,
                      "value": "128"
                    },
                    {
                      "begin": 352,
                      "end": 421,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 210,
                      "end": 428,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 210,
                      "end": 428,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 210,
                      "end": 428,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 210,
                      "end": 428,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 210,
                      "end": 428,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 434,
                      "end": 524,
                      "name": "tag",
                      "source": 1,
                      "value": "80"
                    },
                    {
                      "begin": 434,
                      "end": 524,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 468,
                      "end": 475,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 511,
                      "end": 516,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 504,
                      "end": 517,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 497,
                      "end": 518,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 486,
                      "end": 518,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 486,
                      "end": 518,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 434,
                      "end": 524,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 434,
                      "end": 524,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 434,
                      "end": 524,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 434,
                      "end": 524,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 530,
                      "end": 639,
                      "name": "tag",
                      "source": 1,
                      "value": "81"
                    },
                    {
                      "begin": 530,
                      "end": 639,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 611,
                      "end": 632,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "131"
                    },
                    {
                      "begin": 626,
                      "end": 631,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 611,
                      "end": 632,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "80"
                    },
                    {
                      "begin": 611,
                      "end": 632,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 611,
                      "end": 632,
                      "name": "tag",
                      "source": 1,
                      "value": "131"
                    },
                    {
                      "begin": 611,
                      "end": 632,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 606,
                      "end": 609,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 599,
                      "end": 633,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 530,
                      "end": 639,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 530,
                      "end": 639,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 530,
                      "end": 639,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 645,
                      "end": 961,
                      "name": "tag",
                      "source": 1,
                      "value": "14"
                    },
                    {
                      "begin": 645,
                      "end": 961,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 758,
                      "end": 762,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 796,
                      "end": 798,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 785,
                      "end": 794,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 781,
                      "end": 799,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 773,
                      "end": 799,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 773,
                      "end": 799,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 809,
                      "end": 874,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "133"
                    },
                    {
                      "begin": 871,
                      "end": 872,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 860,
                      "end": 869,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 856,
                      "end": 873,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 847,
                      "end": 853,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 809,
                      "end": 874,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "81"
                    },
                    {
                      "begin": 809,
                      "end": 874,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 809,
                      "end": 874,
                      "name": "tag",
                      "source": 1,
                      "value": "133"
                    },
                    {
                      "begin": 809,
                      "end": 874,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 884,
                      "end": 954,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "134"
                    },
                    {
                      "begin": 950,
                      "end": 952,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 939,
                      "end": 948,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 935,
                      "end": 953,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 926,
                      "end": 932,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 884,
                      "end": 954,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "79"
                    },
                    {
                      "begin": 884,
                      "end": 954,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 884,
                      "end": 954,
                      "name": "tag",
                      "source": 1,
                      "value": "134"
                    },
                    {
                      "begin": 884,
                      "end": 954,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 645,
                      "end": 961,
                      "name": "SWAP4",
                      "source": 1
                    },
                    {
                      "begin": 645,
                      "end": 961,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 645,
                      "end": 961,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 645,
                      "end": 961,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 645,
                      "end": 961,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 645,
                      "end": 961,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 967,
                      "end": 1044,
                      "name": "tag",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 967,
                      "end": 1044,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1004,
                      "end": 1011,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 1033,
                      "end": 1038,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 1022,
                      "end": 1038,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 1022,
                      "end": 1038,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 967,
                      "end": 1044,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 967,
                      "end": 1044,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 967,
                      "end": 1044,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 967,
                      "end": 1044,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 1050,
                      "end": 1168,
                      "name": "tag",
                      "source": 1,
                      "value": "83"
                    },
                    {
                      "begin": 1050,
                      "end": 1168,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1137,
                      "end": 1161,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "137"
                    },
                    {
                      "begin": 1155,
                      "end": 1160,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 1137,
                      "end": 1161,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 1137,
                      "end": 1161,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 1137,
                      "end": 1161,
                      "name": "tag",
                      "source": 1,
                      "value": "137"
                    },
                    {
                      "begin": 1137,
                      "end": 1161,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1132,
                      "end": 1135,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 1125,
                      "end": 1162,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 1050,
                      "end": 1168,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 1050,
                      "end": 1168,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 1050,
                      "end": 1168,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 1174,
                      "end": 1494,
                      "name": "tag",
                      "source": 1,
                      "value": "18"
                    },
                    {
                      "begin": 1174,
                      "end": 1494,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1289,
                      "end": 1293,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 1327,
                      "end": 1329,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 1316,
                      "end": 1325,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 1312,
                      "end": 1330,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 1304,
                      "end": 1330,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 1304,
                      "end": 1330,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 1340,
                      "end": 1405,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "139"
                    },
                    {
                      "begin": 1402,
                      "end": 1403,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 1391,
                      "end": 1400,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 1387,
                      "end": 1404,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 1378,
                      "end": 1384,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 1340,
                      "end": 1405,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "81"
                    },
                    {
                      "begin": 1340,
                      "end": 1405,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 1340,
                      "end": 1405,
                      "name": "tag",
                      "source": 1,
                      "value": "139"
                    },
                    {
                      "begin": 1340,
                      "end": 1405,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1415,
                      "end": 1487,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "140"
                    },
                    {
                      "begin": 1483,
                      "end": 1485,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 1472,
                      "end": 1481,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 1468,
                      "end": 1486,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 1459,
                      "end": 1465,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 1415,
                      "end": 1487,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "83"
                    },
                    {
                      "begin": 1415,
                      "end": 1487,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 1415,
                      "end": 1487,
                      "name": "tag",
                      "source": 1,
                      "value": "140"
                    },
                    {
                      "begin": 1415,
                      "end": 1487,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1174,
                      "end": 1494,
                      "name": "SWAP4",
                      "source": 1
                    },
                    {
                      "begin": 1174,
                      "end": 1494,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 1174,
                      "end": 1494,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 1174,
                      "end": 1494,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 1174,
                      "end": 1494,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 1174,
                      "end": 1494,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 1500,
                      "end": 1680,
                      "name": "tag",
                      "source": 1,
                      "value": "31"
                    },
                    {
                      "begin": 1500,
                      "end": 1680,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1548,
                      "end": 1625,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 1545,
                      "end": 1546,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 1538,
                      "end": 1626,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 1645,
                      "end": 1649,
                      "name": "PUSH",
                      "source": 1,
                      "value": "41"
                    },
                    {
                      "begin": 1642,
                      "end": 1643,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4"
                    },
                    {
                      "begin": 1635,
                      "end": 1650,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 1669,
                      "end": 1673,
                      "name": "PUSH",
                      "source": 1,
                      "value": "24"
                    },
                    {
                      "begin": 1666,
                      "end": 1667,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 1659,
                      "end": 1674,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 1686,
                      "end": 1866,
                      "name": "tag",
                      "source": 1,
                      "value": "38"
                    },
                    {
                      "begin": 1686,
                      "end": 1866,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1734,
                      "end": 1811,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 1731,
                      "end": 1732,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 1724,
                      "end": 1812,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 1831,
                      "end": 1835,
                      "name": "PUSH",
                      "source": 1,
                      "value": "32"
                    },
                    {
                      "begin": 1828,
                      "end": 1829,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4"
                    },
                    {
                      "begin": 1821,
                      "end": 1836,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 1855,
                      "end": 1859,
                      "name": "PUSH",
                      "source": 1,
                      "value": "24"
                    },
                    {
                      "begin": 1852,
                      "end": 1853,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 1845,
                      "end": 1860,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 1872,
                      "end": 2052,
                      "name": "tag",
                      "source": 1,
                      "value": "41"
                    },
                    {
                      "begin": 1872,
                      "end": 2052,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1920,
                      "end": 1997,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 1917,
                      "end": 1918,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 1910,
                      "end": 1998,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 2017,
                      "end": 2021,
                      "name": "PUSH",
                      "source": 1,
                      "value": "21"
                    },
                    {
                      "begin": 2014,
                      "end": 2015,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4"
                    },
                    {
                      "begin": 2007,
                      "end": 2022,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 2041,
                      "end": 2045,
                      "name": "PUSH",
                      "source": 1,
                      "value": "24"
                    },
                    {
                      "begin": 2038,
                      "end": 2039,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 2031,
                      "end": 2046,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 2058,
                      "end": 2202,
                      "name": "tag",
                      "source": 1,
                      "value": "84"
                    },
                    {
                      "begin": 2058,
                      "end": 2202,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2155,
                      "end": 2161,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 2189,
                      "end": 2194,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 2183,
                      "end": 2195,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 2173,
                      "end": 2195,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2173,
                      "end": 2195,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2058,
                      "end": 2202,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 2058,
                      "end": 2202,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2058,
                      "end": 2202,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2058,
                      "end": 2202,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2208,
                      "end": 2422,
                      "name": "tag",
                      "source": 1,
                      "value": "85"
                    },
                    {
                      "begin": 2208,
                      "end": 2422,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2337,
                      "end": 2348,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 2371,
                      "end": 2377,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 2366,
                      "end": 2369,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 2359,
                      "end": 2378,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 2411,
                      "end": 2415,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 2406,
                      "end": 2409,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 2402,
                      "end": 2416,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 2387,
                      "end": 2416,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2387,
                      "end": 2416,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2208,
                      "end": 2422,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 2208,
                      "end": 2422,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 2208,
                      "end": 2422,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2208,
                      "end": 2422,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2208,
                      "end": 2422,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2428,
                      "end": 2590,
                      "name": "tag",
                      "source": 1,
                      "value": "86"
                    },
                    {
                      "begin": 2428,
                      "end": 2590,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2525,
                      "end": 2529,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 2548,
                      "end": 2551,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 2540,
                      "end": 2551,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2540,
                      "end": 2551,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2578,
                      "end": 2582,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 2573,
                      "end": 2576,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 2569,
                      "end": 2583,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 2561,
                      "end": 2583,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2561,
                      "end": 2583,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2428,
                      "end": 2590,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 2428,
                      "end": 2590,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2428,
                      "end": 2590,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2428,
                      "end": 2590,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2596,
                      "end": 2722,
                      "name": "tag",
                      "source": 1,
                      "value": "87"
                    },
                    {
                      "begin": 2596,
                      "end": 2722,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2690,
                      "end": 2691,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4"
                    },
                    {
                      "begin": 2683,
                      "end": 2688,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 2680,
                      "end": 2692,
                      "name": "LT",
                      "source": 1
                    },
                    {
                      "begin": 2670,
                      "end": 2716,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "148"
                    },
                    {
                      "begin": 2670,
                      "end": 2716,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 2696,
                      "end": 2714,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "149"
                    },
                    {
                      "begin": 2696,
                      "end": 2714,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "41"
                    },
                    {
                      "begin": 2696,
                      "end": 2714,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2696,
                      "end": 2714,
                      "name": "tag",
                      "source": 1,
                      "value": "149"
                    },
                    {
                      "begin": 2696,
                      "end": 2714,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2670,
                      "end": 2716,
                      "name": "tag",
                      "source": 1,
                      "value": "148"
                    },
                    {
                      "begin": 2670,
                      "end": 2716,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2596,
                      "end": 2722,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2596,
                      "end": 2722,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2728,
                      "end": 2881,
                      "name": "tag",
                      "source": 1,
                      "value": "88"
                    },
                    {
                      "begin": 2728,
                      "end": 2881,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2786,
                      "end": 2793,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 2815,
                      "end": 2820,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 2804,
                      "end": 2820,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2804,
                      "end": 2820,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2821,
                      "end": 2875,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "151"
                    },
                    {
                      "begin": 2869,
                      "end": 2874,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 2821,
                      "end": 2875,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "87"
                    },
                    {
                      "begin": 2821,
                      "end": 2875,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2821,
                      "end": 2875,
                      "name": "tag",
                      "source": 1,
                      "value": "151"
                    },
                    {
                      "begin": 2821,
                      "end": 2875,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2728,
                      "end": 2881,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 2728,
                      "end": 2881,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2728,
                      "end": 2881,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2728,
                      "end": 2881,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2887,
                      "end": 3040,
                      "name": "tag",
                      "source": 1,
                      "value": "89"
                    },
                    {
                      "begin": 2887,
                      "end": 3040,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2956,
                      "end": 2965,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 2989,
                      "end": 3034,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "153"
                    },
                    {
                      "begin": 3028,
                      "end": 3033,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 2989,
                      "end": 3034,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "88"
                    },
                    {
                      "begin": 2989,
                      "end": 3034,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2989,
                      "end": 3034,
                      "name": "tag",
                      "source": 1,
                      "value": "153"
                    },
                    {
                      "begin": 2989,
                      "end": 3034,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2976,
                      "end": 3034,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2976,
                      "end": 3034,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2887,
                      "end": 3040,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 2887,
                      "end": 3040,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 2887,
                      "end": 3040,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 2887,
                      "end": 3040,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3046,
                      "end": 3205,
                      "name": "tag",
                      "source": 1,
                      "value": "90"
                    },
                    {
                      "begin": 3046,
                      "end": 3205,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3142,
                      "end": 3198,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "155"
                    },
                    {
                      "begin": 3192,
                      "end": 3197,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 3142,
                      "end": 3198,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "89"
                    },
                    {
                      "begin": 3142,
                      "end": 3198,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3142,
                      "end": 3198,
                      "name": "tag",
                      "source": 1,
                      "value": "155"
                    },
                    {
                      "begin": 3142,
                      "end": 3198,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3137,
                      "end": 3140,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 3130,
                      "end": 3199,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 3046,
                      "end": 3205,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3046,
                      "end": 3205,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3046,
                      "end": 3205,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3211,
                      "end": 3337,
                      "name": "tag",
                      "source": 1,
                      "value": "91"
                    },
                    {
                      "begin": 3211,
                      "end": 3337,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3248,
                      "end": 3255,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 3288,
                      "end": 3330,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3281,
                      "end": 3286,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 3277,
                      "end": 3331,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 3266,
                      "end": 3331,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3266,
                      "end": 3331,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3211,
                      "end": 3337,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 3211,
                      "end": 3337,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3211,
                      "end": 3337,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3211,
                      "end": 3337,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3343,
                      "end": 3403,
                      "name": "tag",
                      "source": 1,
                      "value": "92"
                    },
                    {
                      "begin": 3343,
                      "end": 3403,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3371,
                      "end": 3374,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 3392,
                      "end": 3397,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 3385,
                      "end": 3397,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3385,
                      "end": 3397,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3343,
                      "end": 3403,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 3343,
                      "end": 3403,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3343,
                      "end": 3403,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3343,
                      "end": 3403,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3409,
                      "end": 3551,
                      "name": "tag",
                      "source": 1,
                      "value": "93"
                    },
                    {
                      "begin": 3409,
                      "end": 3551,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3459,
                      "end": 3468,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 3492,
                      "end": 3545,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "159"
                    },
                    {
                      "begin": 3510,
                      "end": 3544,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "160"
                    },
                    {
                      "begin": 3519,
                      "end": 3543,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "161"
                    },
                    {
                      "begin": 3537,
                      "end": 3542,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 3519,
                      "end": 3543,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "91"
                    },
                    {
                      "begin": 3519,
                      "end": 3543,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3519,
                      "end": 3543,
                      "name": "tag",
                      "source": 1,
                      "value": "161"
                    },
                    {
                      "begin": 3519,
                      "end": 3543,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3510,
                      "end": 3544,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "92"
                    },
                    {
                      "begin": 3510,
                      "end": 3544,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3510,
                      "end": 3544,
                      "name": "tag",
                      "source": 1,
                      "value": "160"
                    },
                    {
                      "begin": 3510,
                      "end": 3544,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3492,
                      "end": 3545,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "91"
                    },
                    {
                      "begin": 3492,
                      "end": 3545,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3492,
                      "end": 3545,
                      "name": "tag",
                      "source": 1,
                      "value": "159"
                    },
                    {
                      "begin": 3492,
                      "end": 3545,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3479,
                      "end": 3545,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3479,
                      "end": 3545,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3409,
                      "end": 3551,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 3409,
                      "end": 3551,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3409,
                      "end": 3551,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3409,
                      "end": 3551,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3557,
                      "end": 3683,
                      "name": "tag",
                      "source": 1,
                      "value": "94"
                    },
                    {
                      "begin": 3557,
                      "end": 3683,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3607,
                      "end": 3616,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 3640,
                      "end": 3677,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "163"
                    },
                    {
                      "begin": 3671,
                      "end": 3676,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 3640,
                      "end": 3677,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "93"
                    },
                    {
                      "begin": 3640,
                      "end": 3677,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3640,
                      "end": 3677,
                      "name": "tag",
                      "source": 1,
                      "value": "163"
                    },
                    {
                      "begin": 3640,
                      "end": 3677,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3627,
                      "end": 3677,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3627,
                      "end": 3677,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3557,
                      "end": 3683,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 3557,
                      "end": 3683,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3557,
                      "end": 3683,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3557,
                      "end": 3683,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3689,
                      "end": 3829,
                      "name": "tag",
                      "source": 1,
                      "value": "95"
                    },
                    {
                      "begin": 3689,
                      "end": 3829,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3753,
                      "end": 3762,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 3786,
                      "end": 3823,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "165"
                    },
                    {
                      "begin": 3817,
                      "end": 3822,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 3786,
                      "end": 3823,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "94"
                    },
                    {
                      "begin": 3786,
                      "end": 3823,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3786,
                      "end": 3823,
                      "name": "tag",
                      "source": 1,
                      "value": "165"
                    },
                    {
                      "begin": 3786,
                      "end": 3823,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3773,
                      "end": 3823,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3773,
                      "end": 3823,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3689,
                      "end": 3829,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 3689,
                      "end": 3829,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 3689,
                      "end": 3829,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3689,
                      "end": 3829,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3835,
                      "end": 3984,
                      "name": "tag",
                      "source": 1,
                      "value": "96"
                    },
                    {
                      "begin": 3835,
                      "end": 3984,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3926,
                      "end": 3977,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "167"
                    },
                    {
                      "begin": 3971,
                      "end": 3976,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 3926,
                      "end": 3977,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "95"
                    },
                    {
                      "begin": 3926,
                      "end": 3977,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3926,
                      "end": 3977,
                      "name": "tag",
                      "source": 1,
                      "value": "167"
                    },
                    {
                      "begin": 3926,
                      "end": 3977,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 3921,
                      "end": 3924,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 3914,
                      "end": 3978,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 3835,
                      "end": 3984,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3835,
                      "end": 3984,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3835,
                      "end": 3984,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 3990,
                      "end": 4098,
                      "name": "tag",
                      "source": 1,
                      "value": "97"
                    },
                    {
                      "begin": 3990,
                      "end": 4098,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4067,
                      "end": 4091,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "169"
                    },
                    {
                      "begin": 4085,
                      "end": 4090,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 4067,
                      "end": 4091,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 4067,
                      "end": 4091,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4067,
                      "end": 4091,
                      "name": "tag",
                      "source": 1,
                      "value": "169"
                    },
                    {
                      "begin": 4067,
                      "end": 4091,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4062,
                      "end": 4065,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4055,
                      "end": 4092,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 3990,
                      "end": 4098,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3990,
                      "end": 4098,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 3990,
                      "end": 4098,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4104,
                      "end": 4200,
                      "name": "tag",
                      "source": 1,
                      "value": "98"
                    },
                    {
                      "begin": 4104,
                      "end": 4200,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4141,
                      "end": 4148,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4170,
                      "end": 4194,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "171"
                    },
                    {
                      "begin": 4188,
                      "end": 4193,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4170,
                      "end": 4194,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "91"
                    },
                    {
                      "begin": 4170,
                      "end": 4194,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4170,
                      "end": 4194,
                      "name": "tag",
                      "source": 1,
                      "value": "171"
                    },
                    {
                      "begin": 4170,
                      "end": 4194,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4159,
                      "end": 4194,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4159,
                      "end": 4194,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4104,
                      "end": 4200,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 4104,
                      "end": 4200,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4104,
                      "end": 4200,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4104,
                      "end": 4200,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4206,
                      "end": 4314,
                      "name": "tag",
                      "source": 1,
                      "value": "99"
                    },
                    {
                      "begin": 4206,
                      "end": 4314,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4283,
                      "end": 4307,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "173"
                    },
                    {
                      "begin": 4301,
                      "end": 4306,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 4283,
                      "end": 4307,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "98"
                    },
                    {
                      "begin": 4283,
                      "end": 4307,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4283,
                      "end": 4307,
                      "name": "tag",
                      "source": 1,
                      "value": "173"
                    },
                    {
                      "begin": 4283,
                      "end": 4307,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4278,
                      "end": 4281,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4271,
                      "end": 4308,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 4206,
                      "end": 4314,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4206,
                      "end": 4314,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4206,
                      "end": 4314,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4320,
                      "end": 4424,
                      "name": "tag",
                      "source": 1,
                      "value": "100"
                    },
                    {
                      "begin": 4320,
                      "end": 4424,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4365,
                      "end": 4372,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4394,
                      "end": 4418,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "175"
                    },
                    {
                      "begin": 4412,
                      "end": 4417,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4394,
                      "end": 4418,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "91"
                    },
                    {
                      "begin": 4394,
                      "end": 4418,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4394,
                      "end": 4418,
                      "name": "tag",
                      "source": 1,
                      "value": "175"
                    },
                    {
                      "begin": 4394,
                      "end": 4418,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4383,
                      "end": 4418,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4383,
                      "end": 4418,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4320,
                      "end": 4424,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 4320,
                      "end": 4424,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4320,
                      "end": 4424,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4320,
                      "end": 4424,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4430,
                      "end": 4562,
                      "name": "tag",
                      "source": 1,
                      "value": "101"
                    },
                    {
                      "begin": 4430,
                      "end": 4562,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4523,
                      "end": 4555,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "177"
                    },
                    {
                      "begin": 4549,
                      "end": 4554,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 4523,
                      "end": 4555,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "100"
                    },
                    {
                      "begin": 4523,
                      "end": 4555,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4523,
                      "end": 4555,
                      "name": "tag",
                      "source": 1,
                      "value": "177"
                    },
                    {
                      "begin": 4523,
                      "end": 4555,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4518,
                      "end": 4521,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4511,
                      "end": 4556,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 4430,
                      "end": 4562,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4430,
                      "end": 4562,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4430,
                      "end": 4562,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4634,
                      "end": 5722,
                      "name": "tag",
                      "source": 1,
                      "value": "102"
                    },
                    {
                      "begin": 4634,
                      "end": 5722,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4781,
                      "end": 4785,
                      "name": "PUSH",
                      "source": 1,
                      "value": "A0"
                    },
                    {
                      "begin": 4776,
                      "end": 4779,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4772,
                      "end": 4786,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 4868,
                      "end": 4872,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4861,
                      "end": 4866,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4857,
                      "end": 4873,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 4851,
                      "end": 4874,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 4887,
                      "end": 4969,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "179"
                    },
                    {
                      "begin": 4963,
                      "end": 4967,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4958,
                      "end": 4961,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 4954,
                      "end": 4968,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 4940,
                      "end": 4952,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4887,
                      "end": 4969,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "90"
                    },
                    {
                      "begin": 4887,
                      "end": 4969,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4887,
                      "end": 4969,
                      "name": "tag",
                      "source": 1,
                      "value": "179"
                    },
                    {
                      "begin": 4887,
                      "end": 4969,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4796,
                      "end": 4979,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 5062,
                      "end": 5066,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 5055,
                      "end": 5060,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 5051,
                      "end": 5067,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5045,
                      "end": 5068,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 5081,
                      "end": 5158,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "180"
                    },
                    {
                      "begin": 5152,
                      "end": 5156,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 5147,
                      "end": 5150,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 5143,
                      "end": 5157,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5129,
                      "end": 5141,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 5081,
                      "end": 5158,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "96"
                    },
                    {
                      "begin": 5081,
                      "end": 5158,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 5081,
                      "end": 5158,
                      "name": "tag",
                      "source": 1,
                      "value": "180"
                    },
                    {
                      "begin": 5081,
                      "end": 5158,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4989,
                      "end": 5168,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 5252,
                      "end": 5256,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 5245,
                      "end": 5250,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 5241,
                      "end": 5257,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5235,
                      "end": 5258,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 5271,
                      "end": 5334,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "181"
                    },
                    {
                      "begin": 5328,
                      "end": 5332,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 5323,
                      "end": 5326,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 5319,
                      "end": 5333,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5305,
                      "end": 5317,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 5271,
                      "end": 5334,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "97"
                    },
                    {
                      "begin": 5271,
                      "end": 5334,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 5271,
                      "end": 5334,
                      "name": "tag",
                      "source": 1,
                      "value": "181"
                    },
                    {
                      "begin": 5271,
                      "end": 5334,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 5178,
                      "end": 5344,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 5428,
                      "end": 5432,
                      "name": "PUSH",
                      "source": 1,
                      "value": "60"
                    },
                    {
                      "begin": 5421,
                      "end": 5426,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 5417,
                      "end": 5433,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5411,
                      "end": 5434,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 5447,
                      "end": 5510,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "182"
                    },
                    {
                      "begin": 5504,
                      "end": 5508,
                      "name": "PUSH",
                      "source": 1,
                      "value": "60"
                    },
                    {
                      "begin": 5499,
                      "end": 5502,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 5495,
                      "end": 5509,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5481,
                      "end": 5493,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 5447,
                      "end": 5510,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "99"
                    },
                    {
                      "begin": 5447,
                      "end": 5510,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 5447,
                      "end": 5510,
                      "name": "tag",
                      "source": 1,
                      "value": "182"
                    },
                    {
                      "begin": 5447,
                      "end": 5510,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 5354,
                      "end": 5520,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 5607,
                      "end": 5611,
                      "name": "PUSH",
                      "source": 1,
                      "value": "80"
                    },
                    {
                      "begin": 5600,
                      "end": 5605,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 5596,
                      "end": 5612,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5590,
                      "end": 5613,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 5626,
                      "end": 5705,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "183"
                    },
                    {
                      "begin": 5699,
                      "end": 5703,
                      "name": "PUSH",
                      "source": 1,
                      "value": "80"
                    },
                    {
                      "begin": 5694,
                      "end": 5697,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 5690,
                      "end": 5704,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5676,
                      "end": 5688,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 5626,
                      "end": 5705,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "101"
                    },
                    {
                      "begin": 5626,
                      "end": 5705,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 5626,
                      "end": 5705,
                      "name": "tag",
                      "source": 1,
                      "value": "183"
                    },
                    {
                      "begin": 5626,
                      "end": 5705,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 5530,
                      "end": 5715,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4750,
                      "end": 5722,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4634,
                      "end": 5722,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4634,
                      "end": 5722,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4634,
                      "end": 5722,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 5728,
                      "end": 6027,
                      "name": "tag",
                      "source": 1,
                      "value": "103"
                    },
                    {
                      "begin": 5728,
                      "end": 6027,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 5857,
                      "end": 5867,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 5878,
                      "end": 5984,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "185"
                    },
                    {
                      "begin": 5980,
                      "end": 5983,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 5972,
                      "end": 5978,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 5878,
                      "end": 5984,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "102"
                    },
                    {
                      "begin": 5878,
                      "end": 5984,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 5878,
                      "end": 5984,
                      "name": "tag",
                      "source": 1,
                      "value": "185"
                    },
                    {
                      "begin": 5878,
                      "end": 5984,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6016,
                      "end": 6020,
                      "name": "PUSH",
                      "source": 1,
                      "value": "A0"
                    },
                    {
                      "begin": 6011,
                      "end": 6014,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 6007,
                      "end": 6021,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5993,
                      "end": 6021,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 5993,
                      "end": 6021,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 5728,
                      "end": 6027,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 5728,
                      "end": 6027,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 5728,
                      "end": 6027,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 5728,
                      "end": 6027,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 5728,
                      "end": 6027,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6033,
                      "end": 6176,
                      "name": "tag",
                      "source": 1,
                      "value": "104"
                    },
                    {
                      "begin": 6033,
                      "end": 6176,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6133,
                      "end": 6137,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 6165,
                      "end": 6169,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 6160,
                      "end": 6163,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 6156,
                      "end": 6170,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 6148,
                      "end": 6170,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 6148,
                      "end": 6170,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6033,
                      "end": 6176,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 6033,
                      "end": 6176,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 6033,
                      "end": 6176,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6033,
                      "end": 6176,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6252,
                      "end": 7224,
                      "name": "tag",
                      "source": 1,
                      "value": "105"
                    },
                    {
                      "begin": 6252,
                      "end": 7224,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6431,
                      "end": 6434,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 6460,
                      "end": 6544,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "188"
                    },
                    {
                      "begin": 6538,
                      "end": 6543,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 6460,
                      "end": 6544,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "84"
                    },
                    {
                      "begin": 6460,
                      "end": 6544,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6460,
                      "end": 6544,
                      "name": "tag",
                      "source": 1,
                      "value": "188"
                    },
                    {
                      "begin": 6460,
                      "end": 6544,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6560,
                      "end": 6676,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "189"
                    },
                    {
                      "begin": 6669,
                      "end": 6675,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 6664,
                      "end": 6667,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 6560,
                      "end": 6676,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "85"
                    },
                    {
                      "begin": 6560,
                      "end": 6676,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6560,
                      "end": 6676,
                      "name": "tag",
                      "source": 1,
                      "value": "189"
                    },
                    {
                      "begin": 6560,
                      "end": 6676,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6553,
                      "end": 6676,
                      "name": "SWAP4",
                      "source": 1
                    },
                    {
                      "begin": 6553,
                      "end": 6676,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6700,
                      "end": 6786,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "190"
                    },
                    {
                      "begin": 6780,
                      "end": 6785,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 6700,
                      "end": 6786,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "86"
                    },
                    {
                      "begin": 6700,
                      "end": 6786,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6700,
                      "end": 6786,
                      "name": "tag",
                      "source": 1,
                      "value": "190"
                    },
                    {
                      "begin": 6700,
                      "end": 6786,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6809,
                      "end": 6816,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 6840,
                      "end": 6841,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "tag",
                      "source": 1,
                      "value": "191"
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6850,
                      "end": 6856,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 6847,
                      "end": 6848,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 6844,
                      "end": 6857,
                      "name": "LT",
                      "source": 1
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "193"
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 6926,
                      "end": 6932,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 6920,
                      "end": 6933,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 6953,
                      "end": 7076,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "194"
                    },
                    {
                      "begin": 7072,
                      "end": 7075,
                      "name": "DUP9",
                      "source": 1
                    },
                    {
                      "begin": 7057,
                      "end": 7070,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 6953,
                      "end": 7076,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "103"
                    },
                    {
                      "begin": 6953,
                      "end": 7076,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6953,
                      "end": 7076,
                      "name": "tag",
                      "source": 1,
                      "value": "194"
                    },
                    {
                      "begin": 6953,
                      "end": 7076,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6946,
                      "end": 7076,
                      "name": "SWAP8",
                      "source": 1
                    },
                    {
                      "begin": 6946,
                      "end": 7076,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 7099,
                      "end": 7189,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "195"
                    },
                    {
                      "begin": 7182,
                      "end": 7188,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 7099,
                      "end": 7189,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "104"
                    },
                    {
                      "begin": 7099,
                      "end": 7189,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 7099,
                      "end": 7189,
                      "name": "tag",
                      "source": 1,
                      "value": "195"
                    },
                    {
                      "begin": 7099,
                      "end": 7189,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 7089,
                      "end": 7189,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 7089,
                      "end": 7189,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6885,
                      "end": 7199,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6872,
                      "end": 6873,
                      "name": "PUSH",
                      "source": 1,
                      "value": "1"
                    },
                    {
                      "begin": 6869,
                      "end": 6870,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 6865,
                      "end": 6874,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 6860,
                      "end": 6874,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 6860,
                      "end": 6874,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "191"
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "tag",
                      "source": 1,
                      "value": "193"
                    },
                    {
                      "begin": 6825,
                      "end": 7199,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 6829,
                      "end": 6843,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 7215,
                      "end": 7218,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 7208,
                      "end": 7218,
                      "name": "SWAP4",
                      "source": 1
                    },
                    {
                      "begin": 7208,
                      "end": 7218,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6436,
                      "end": 7224,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6436,
                      "end": 7224,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6436,
                      "end": 7224,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6252,
                      "end": 7224,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 6252,
                      "end": 7224,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 6252,
                      "end": 7224,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6252,
                      "end": 7224,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 6252,
                      "end": 7224,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 7230,
                      "end": 7723,
                      "name": "tag",
                      "source": 1,
                      "value": "47"
                    },
                    {
                      "begin": 7230,
                      "end": 7723,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 7433,
                      "end": 7437,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 7471,
                      "end": 7473,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 7460,
                      "end": 7469,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 7456,
                      "end": 7474,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 7448,
                      "end": 7474,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 7448,
                      "end": 7474,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 7520,
                      "end": 7529,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 7514,
                      "end": 7518,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 7510,
                      "end": 7530,
                      "name": "SUB",
                      "source": 1
                    },
                    {
                      "begin": 7506,
                      "end": 7507,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 7495,
                      "end": 7504,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 7491,
                      "end": 7508,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 7484,
                      "end": 7531,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 7548,
                      "end": 7716,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "197"
                    },
                    {
                      "begin": 7711,
                      "end": 7715,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 7702,
                      "end": 7708,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 7548,
                      "end": 7716,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "105"
                    },
                    {
                      "begin": 7548,
                      "end": 7716,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 7548,
                      "end": 7716,
                      "name": "tag",
                      "source": 1,
                      "value": "197"
                    },
                    {
                      "begin": 7548,
                      "end": 7716,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 7540,
                      "end": 7716,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 7540,
                      "end": 7716,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 7230,
                      "end": 7723,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 7230,
                      "end": 7723,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 7230,
                      "end": 7723,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 7230,
                      "end": 7723,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 7230,
                      "end": 7723,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 7810,
                      "end": 7927,
                      "name": "tag",
                      "source": 1,
                      "value": "107"
                    },
                    {
                      "begin": 7810,
                      "end": 7927,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 7919,
                      "end": 7920,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 7916,
                      "end": 7917,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 7909,
                      "end": 7921,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 8056,
                      "end": 8161,
                      "name": "tag",
                      "source": 1,
                      "value": "109"
                    },
                    {
                      "begin": 8056,
                      "end": 8161,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8092,
                      "end": 8099,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8132,
                      "end": 8154,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8125,
                      "end": 8130,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 8121,
                      "end": 8155,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 8110,
                      "end": 8155,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8110,
                      "end": 8155,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8056,
                      "end": 8161,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 8056,
                      "end": 8161,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8056,
                      "end": 8161,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8056,
                      "end": 8161,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8167,
                      "end": 8287,
                      "name": "tag",
                      "source": 1,
                      "value": "110"
                    },
                    {
                      "begin": 8167,
                      "end": 8287,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8239,
                      "end": 8262,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "203"
                    },
                    {
                      "begin": 8256,
                      "end": 8261,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8239,
                      "end": 8262,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "109"
                    },
                    {
                      "begin": 8239,
                      "end": 8262,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8239,
                      "end": 8262,
                      "name": "tag",
                      "source": 1,
                      "value": "203"
                    },
                    {
                      "begin": 8239,
                      "end": 8262,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8232,
                      "end": 8237,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8229,
                      "end": 8263,
                      "name": "EQ",
                      "source": 1
                    },
                    {
                      "begin": 8219,
                      "end": 8281,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "204"
                    },
                    {
                      "begin": 8219,
                      "end": 8281,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 8277,
                      "end": 8278,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8274,
                      "end": 8275,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 8267,
                      "end": 8279,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 8219,
                      "end": 8281,
                      "name": "tag",
                      "source": 1,
                      "value": "204"
                    },
                    {
                      "begin": 8219,
                      "end": 8281,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8167,
                      "end": 8287,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8167,
                      "end": 8287,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8293,
                      "end": 8434,
                      "name": "tag",
                      "source": 1,
                      "value": "111"
                    },
                    {
                      "begin": 8293,
                      "end": 8434,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8349,
                      "end": 8354,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8380,
                      "end": 8386,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8374,
                      "end": 8387,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 8365,
                      "end": 8387,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8365,
                      "end": 8387,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8396,
                      "end": 8428,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "206"
                    },
                    {
                      "begin": 8422,
                      "end": 8427,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8396,
                      "end": 8428,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "110"
                    },
                    {
                      "begin": 8396,
                      "end": 8428,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8396,
                      "end": 8428,
                      "name": "tag",
                      "source": 1,
                      "value": "206"
                    },
                    {
                      "begin": 8396,
                      "end": 8428,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8293,
                      "end": 8434,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 8293,
                      "end": 8434,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 8293,
                      "end": 8434,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8293,
                      "end": 8434,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8293,
                      "end": 8434,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8440,
                      "end": 8560,
                      "name": "tag",
                      "source": 1,
                      "value": "112"
                    },
                    {
                      "begin": 8440,
                      "end": 8560,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8512,
                      "end": 8535,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "208"
                    },
                    {
                      "begin": 8529,
                      "end": 8534,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8512,
                      "end": 8535,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "78"
                    },
                    {
                      "begin": 8512,
                      "end": 8535,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8512,
                      "end": 8535,
                      "name": "tag",
                      "source": 1,
                      "value": "208"
                    },
                    {
                      "begin": 8512,
                      "end": 8535,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8505,
                      "end": 8510,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8502,
                      "end": 8536,
                      "name": "EQ",
                      "source": 1
                    },
                    {
                      "begin": 8492,
                      "end": 8554,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "209"
                    },
                    {
                      "begin": 8492,
                      "end": 8554,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 8550,
                      "end": 8551,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8547,
                      "end": 8548,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 8540,
                      "end": 8552,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 8492,
                      "end": 8554,
                      "name": "tag",
                      "source": 1,
                      "value": "209"
                    },
                    {
                      "begin": 8492,
                      "end": 8554,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8440,
                      "end": 8560,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8440,
                      "end": 8560,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8566,
                      "end": 8707,
                      "name": "tag",
                      "source": 1,
                      "value": "113"
                    },
                    {
                      "begin": 8566,
                      "end": 8707,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8622,
                      "end": 8627,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8653,
                      "end": 8659,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8647,
                      "end": 8660,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 8638,
                      "end": 8660,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8638,
                      "end": 8660,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8669,
                      "end": 8701,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "211"
                    },
                    {
                      "begin": 8695,
                      "end": 8700,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8669,
                      "end": 8701,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "112"
                    },
                    {
                      "begin": 8669,
                      "end": 8701,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8669,
                      "end": 8701,
                      "name": "tag",
                      "source": 1,
                      "value": "211"
                    },
                    {
                      "begin": 8669,
                      "end": 8701,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8566,
                      "end": 8707,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 8566,
                      "end": 8707,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 8566,
                      "end": 8707,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8566,
                      "end": 8707,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8566,
                      "end": 8707,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8713,
                      "end": 8835,
                      "name": "tag",
                      "source": 1,
                      "value": "114"
                    },
                    {
                      "begin": 8713,
                      "end": 8835,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8786,
                      "end": 8810,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "213"
                    },
                    {
                      "begin": 8804,
                      "end": 8809,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8786,
                      "end": 8810,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 8786,
                      "end": 8810,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8786,
                      "end": 8810,
                      "name": "tag",
                      "source": 1,
                      "value": "213"
                    },
                    {
                      "begin": 8786,
                      "end": 8810,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8779,
                      "end": 8784,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8776,
                      "end": 8811,
                      "name": "EQ",
                      "source": 1
                    },
                    {
                      "begin": 8766,
                      "end": 8829,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "214"
                    },
                    {
                      "begin": 8766,
                      "end": 8829,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 8825,
                      "end": 8826,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8822,
                      "end": 8823,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 8815,
                      "end": 8827,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 8766,
                      "end": 8829,
                      "name": "tag",
                      "source": 1,
                      "value": "214"
                    },
                    {
                      "begin": 8766,
                      "end": 8829,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8713,
                      "end": 8835,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8713,
                      "end": 8835,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8841,
                      "end": 8984,
                      "name": "tag",
                      "source": 1,
                      "value": "115"
                    },
                    {
                      "begin": 8841,
                      "end": 8984,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8898,
                      "end": 8903,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8929,
                      "end": 8935,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8923,
                      "end": 8936,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 8914,
                      "end": 8936,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8914,
                      "end": 8936,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8945,
                      "end": 8978,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "216"
                    },
                    {
                      "begin": 8972,
                      "end": 8977,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 8945,
                      "end": 8978,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "114"
                    },
                    {
                      "begin": 8945,
                      "end": 8978,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8945,
                      "end": 8978,
                      "name": "tag",
                      "source": 1,
                      "value": "216"
                    },
                    {
                      "begin": 8945,
                      "end": 8978,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8841,
                      "end": 8984,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 8841,
                      "end": 8984,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 8841,
                      "end": 8984,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8841,
                      "end": 8984,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8841,
                      "end": 8984,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "tag",
                      "source": 1,
                      "value": "55"
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 9093,
                      "end": 9099,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 9101,
                      "end": 9107,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 9109,
                      "end": 9115,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 9117,
                      "end": 9123,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 9125,
                      "end": 9131,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 9174,
                      "end": 9177,
                      "name": "PUSH",
                      "source": 1,
                      "value": "A0"
                    },
                    {
                      "begin": 9162,
                      "end": 9171,
                      "name": "DUP7",
                      "source": 1
                    },
                    {
                      "begin": 9153,
                      "end": 9160,
                      "name": "DUP9",
                      "source": 1
                    },
                    {
                      "begin": 9149,
                      "end": 9172,
                      "name": "SUB",
                      "source": 1
                    },
                    {
                      "begin": 9145,
                      "end": 9178,
                      "name": "SLT",
                      "source": 1
                    },
                    {
                      "begin": 9142,
                      "end": 9262,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 9142,
                      "end": 9262,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "218"
                    },
                    {
                      "begin": 9142,
                      "end": 9262,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 9181,
                      "end": 9260,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "219"
                    },
                    {
                      "begin": 9181,
                      "end": 9260,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "107"
                    },
                    {
                      "begin": 9181,
                      "end": 9260,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 9181,
                      "end": 9260,
                      "name": "tag",
                      "source": 1,
                      "value": "219"
                    },
                    {
                      "begin": 9181,
                      "end": 9260,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 9142,
                      "end": 9262,
                      "name": "tag",
                      "source": 1,
                      "value": "218"
                    },
                    {
                      "begin": 9142,
                      "end": 9262,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 9301,
                      "end": 9302,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 9326,
                      "end": 9389,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "220"
                    },
                    {
                      "begin": 9381,
                      "end": 9388,
                      "name": "DUP9",
                      "source": 1
                    },
                    {
                      "begin": 9372,
                      "end": 9378,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 9361,
                      "end": 9370,
                      "name": "DUP10",
                      "source": 1
                    },
                    {
                      "begin": 9357,
                      "end": 9379,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 9326,
                      "end": 9389,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "111"
                    },
                    {
                      "begin": 9326,
                      "end": 9389,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 9326,
                      "end": 9389,
                      "name": "tag",
                      "source": 1,
                      "value": "220"
                    },
                    {
                      "begin": 9326,
                      "end": 9389,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 9316,
                      "end": 9389,
                      "name": "SWAP6",
                      "source": 1
                    },
                    {
                      "begin": 9316,
                      "end": 9389,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9272,
                      "end": 9399,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9438,
                      "end": 9440,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 9464,
                      "end": 9527,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "221"
                    },
                    {
                      "begin": 9519,
                      "end": 9526,
                      "name": "DUP9",
                      "source": 1
                    },
                    {
                      "begin": 9510,
                      "end": 9516,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 9499,
                      "end": 9508,
                      "name": "DUP10",
                      "source": 1
                    },
                    {
                      "begin": 9495,
                      "end": 9517,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 9464,
                      "end": 9527,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "113"
                    },
                    {
                      "begin": 9464,
                      "end": 9527,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 9464,
                      "end": 9527,
                      "name": "tag",
                      "source": 1,
                      "value": "221"
                    },
                    {
                      "begin": 9464,
                      "end": 9527,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 9454,
                      "end": 9527,
                      "name": "SWAP5",
                      "source": 1
                    },
                    {
                      "begin": 9454,
                      "end": 9527,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9409,
                      "end": 9537,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9576,
                      "end": 9578,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 9602,
                      "end": 9666,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "222"
                    },
                    {
                      "begin": 9658,
                      "end": 9665,
                      "name": "DUP9",
                      "source": 1
                    },
                    {
                      "begin": 9649,
                      "end": 9655,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 9638,
                      "end": 9647,
                      "name": "DUP10",
                      "source": 1
                    },
                    {
                      "begin": 9634,
                      "end": 9656,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 9602,
                      "end": 9666,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "115"
                    },
                    {
                      "begin": 9602,
                      "end": 9666,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 9602,
                      "end": 9666,
                      "name": "tag",
                      "source": 1,
                      "value": "222"
                    },
                    {
                      "begin": 9602,
                      "end": 9666,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 9592,
                      "end": 9666,
                      "name": "SWAP4",
                      "source": 1
                    },
                    {
                      "begin": 9592,
                      "end": 9666,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9547,
                      "end": 9676,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9715,
                      "end": 9717,
                      "name": "PUSH",
                      "source": 1,
                      "value": "60"
                    },
                    {
                      "begin": 9741,
                      "end": 9805,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "223"
                    },
                    {
                      "begin": 9797,
                      "end": 9804,
                      "name": "DUP9",
                      "source": 1
                    },
                    {
                      "begin": 9788,
                      "end": 9794,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 9777,
                      "end": 9786,
                      "name": "DUP10",
                      "source": 1
                    },
                    {
                      "begin": 9773,
                      "end": 9795,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 9741,
                      "end": 9805,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "115"
                    },
                    {
                      "begin": 9741,
                      "end": 9805,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 9741,
                      "end": 9805,
                      "name": "tag",
                      "source": 1,
                      "value": "223"
                    },
                    {
                      "begin": 9741,
                      "end": 9805,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 9731,
                      "end": 9805,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 9731,
                      "end": 9805,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9686,
                      "end": 9815,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9854,
                      "end": 9857,
                      "name": "PUSH",
                      "source": 1,
                      "value": "80"
                    },
                    {
                      "begin": 9881,
                      "end": 9944,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "224"
                    },
                    {
                      "begin": 9936,
                      "end": 9943,
                      "name": "DUP9",
                      "source": 1
                    },
                    {
                      "begin": 9927,
                      "end": 9933,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 9916,
                      "end": 9925,
                      "name": "DUP10",
                      "source": 1
                    },
                    {
                      "begin": 9912,
                      "end": 9934,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 9881,
                      "end": 9944,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "111"
                    },
                    {
                      "begin": 9881,
                      "end": 9944,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 9881,
                      "end": 9944,
                      "name": "tag",
                      "source": 1,
                      "value": "224"
                    },
                    {
                      "begin": 9881,
                      "end": 9944,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 9871,
                      "end": 9944,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 9871,
                      "end": 9944,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 9825,
                      "end": 9954,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "SWAP6",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "SWAP6",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "SWAP4",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8990,
                      "end": 9961,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 9967,
                      "end": 10147,
                      "name": "tag",
                      "source": 1,
                      "value": "116"
                    },
                    {
                      "begin": 9967,
                      "end": 10147,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10015,
                      "end": 10092,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 10012,
                      "end": 10013,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 10005,
                      "end": 10093,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 10112,
                      "end": 10116,
                      "name": "PUSH",
                      "source": 1,
                      "value": "11"
                    },
                    {
                      "begin": 10109,
                      "end": 10110,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4"
                    },
                    {
                      "begin": 10102,
                      "end": 10117,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 10136,
                      "end": 10140,
                      "name": "PUSH",
                      "source": 1,
                      "value": "24"
                    },
                    {
                      "begin": 10133,
                      "end": 10134,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 10126,
                      "end": 10141,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 10153,
                      "end": 10347,
                      "name": "tag",
                      "source": 1,
                      "value": "57"
                    },
                    {
                      "begin": 10153,
                      "end": 10347,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10193,
                      "end": 10197,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 10213,
                      "end": 10233,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "227"
                    },
                    {
                      "begin": 10231,
                      "end": 10232,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 10213,
                      "end": 10233,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 10213,
                      "end": 10233,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10213,
                      "end": 10233,
                      "name": "tag",
                      "source": 1,
                      "value": "227"
                    },
                    {
                      "begin": 10213,
                      "end": 10233,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10208,
                      "end": 10233,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 10208,
                      "end": 10233,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10247,
                      "end": 10267,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "228"
                    },
                    {
                      "begin": 10265,
                      "end": 10266,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 10247,
                      "end": 10267,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 10247,
                      "end": 10267,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10247,
                      "end": 10267,
                      "name": "tag",
                      "source": 1,
                      "value": "228"
                    },
                    {
                      "begin": 10247,
                      "end": 10267,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10242,
                      "end": 10267,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 10242,
                      "end": 10267,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10291,
                      "end": 10292,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 10288,
                      "end": 10289,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 10284,
                      "end": 10293,
                      "name": "SUB",
                      "source": 1
                    },
                    {
                      "begin": 10276,
                      "end": 10293,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 10276,
                      "end": 10293,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10315,
                      "end": 10316,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 10309,
                      "end": 10313,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 10306,
                      "end": 10317,
                      "name": "GT",
                      "source": 1
                    },
                    {
                      "begin": 10303,
                      "end": 10340,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 10303,
                      "end": 10340,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "229"
                    },
                    {
                      "begin": 10303,
                      "end": 10340,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 10320,
                      "end": 10338,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "230"
                    },
                    {
                      "begin": 10320,
                      "end": 10338,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "116"
                    },
                    {
                      "begin": 10320,
                      "end": 10338,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10320,
                      "end": 10338,
                      "name": "tag",
                      "source": 1,
                      "value": "230"
                    },
                    {
                      "begin": 10320,
                      "end": 10338,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10303,
                      "end": 10340,
                      "name": "tag",
                      "source": 1,
                      "value": "229"
                    },
                    {
                      "begin": 10303,
                      "end": 10340,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10153,
                      "end": 10347,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 10153,
                      "end": 10347,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 10153,
                      "end": 10347,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10153,
                      "end": 10347,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10153,
                      "end": 10347,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10353,
                      "end": 10452,
                      "name": "tag",
                      "source": 1,
                      "value": "117"
                    },
                    {
                      "begin": 10353,
                      "end": 10452,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10405,
                      "end": 10411,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 10439,
                      "end": 10444,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 10433,
                      "end": 10445,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 10423,
                      "end": 10445,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 10423,
                      "end": 10445,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10353,
                      "end": 10452,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 10353,
                      "end": 10452,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 10353,
                      "end": 10452,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10353,
                      "end": 10452,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10458,
                      "end": 10627,
                      "name": "tag",
                      "source": 1,
                      "value": "118"
                    },
                    {
                      "begin": 10458,
                      "end": 10627,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10542,
                      "end": 10553,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 10576,
                      "end": 10582,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 10571,
                      "end": 10574,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 10564,
                      "end": 10583,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 10616,
                      "end": 10620,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 10611,
                      "end": 10614,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 10607,
                      "end": 10621,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 10592,
                      "end": 10621,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 10592,
                      "end": 10621,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10458,
                      "end": 10627,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 10458,
                      "end": 10627,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 10458,
                      "end": 10627,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10458,
                      "end": 10627,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10458,
                      "end": 10627,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10633,
                      "end": 10879,
                      "name": "tag",
                      "source": 1,
                      "value": "119"
                    },
                    {
                      "begin": 10633,
                      "end": 10879,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10714,
                      "end": 10715,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "tag",
                      "source": 1,
                      "value": "234"
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10738,
                      "end": 10744,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 10735,
                      "end": 10736,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 10732,
                      "end": 10745,
                      "name": "LT",
                      "source": 1
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "236"
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 10823,
                      "end": 10824,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 10818,
                      "end": 10821,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 10814,
                      "end": 10825,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 10808,
                      "end": 10826,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 10804,
                      "end": 10805,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 10799,
                      "end": 10802,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 10795,
                      "end": 10806,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 10788,
                      "end": 10827,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 10760,
                      "end": 10762,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 10757,
                      "end": 10758,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 10753,
                      "end": 10763,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 10748,
                      "end": 10763,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 10748,
                      "end": 10763,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "234"
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "tag",
                      "source": 1,
                      "value": "236"
                    },
                    {
                      "begin": 10724,
                      "end": 10837,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10871,
                      "end": 10872,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 10862,
                      "end": 10868,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 10857,
                      "end": 10860,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 10853,
                      "end": 10869,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 10846,
                      "end": 10873,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 10695,
                      "end": 10879,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10633,
                      "end": 10879,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10633,
                      "end": 10879,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10633,
                      "end": 10879,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10633,
                      "end": 10879,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10885,
                      "end": 10987,
                      "name": "tag",
                      "source": 1,
                      "value": "120"
                    },
                    {
                      "begin": 10885,
                      "end": 10987,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 10926,
                      "end": 10932,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 10977,
                      "end": 10979,
                      "name": "PUSH",
                      "source": 1,
                      "value": "1F"
                    },
                    {
                      "begin": 10973,
                      "end": 10980,
                      "name": "NOT",
                      "source": 1
                    },
                    {
                      "begin": 10968,
                      "end": 10970,
                      "name": "PUSH",
                      "source": 1,
                      "value": "1F"
                    },
                    {
                      "begin": 10961,
                      "end": 10966,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 10957,
                      "end": 10971,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 10953,
                      "end": 10981,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 10943,
                      "end": 10981,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 10943,
                      "end": 10981,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10885,
                      "end": 10987,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 10885,
                      "end": 10987,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 10885,
                      "end": 10987,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10885,
                      "end": 10987,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 10993,
                      "end": 11370,
                      "name": "tag",
                      "source": 1,
                      "value": "121"
                    },
                    {
                      "begin": 10993,
                      "end": 11370,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11081,
                      "end": 11084,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 11109,
                      "end": 11148,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "239"
                    },
                    {
                      "begin": 11142,
                      "end": 11147,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 11109,
                      "end": 11148,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "117"
                    },
                    {
                      "begin": 11109,
                      "end": 11148,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11109,
                      "end": 11148,
                      "name": "tag",
                      "source": 1,
                      "value": "239"
                    },
                    {
                      "begin": 11109,
                      "end": 11148,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11164,
                      "end": 11235,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "240"
                    },
                    {
                      "begin": 11228,
                      "end": 11234,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 11223,
                      "end": 11226,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 11164,
                      "end": 11235,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "118"
                    },
                    {
                      "begin": 11164,
                      "end": 11235,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11164,
                      "end": 11235,
                      "name": "tag",
                      "source": 1,
                      "value": "240"
                    },
                    {
                      "begin": 11164,
                      "end": 11235,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11157,
                      "end": 11235,
                      "name": "SWAP4",
                      "source": 1
                    },
                    {
                      "begin": 11157,
                      "end": 11235,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11244,
                      "end": 11309,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "241"
                    },
                    {
                      "begin": 11302,
                      "end": 11308,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 11297,
                      "end": 11300,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 11290,
                      "end": 11294,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 11283,
                      "end": 11288,
                      "name": "DUP7",
                      "source": 1
                    },
                    {
                      "begin": 11279,
                      "end": 11295,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 11244,
                      "end": 11309,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "119"
                    },
                    {
                      "begin": 11244,
                      "end": 11309,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11244,
                      "end": 11309,
                      "name": "tag",
                      "source": 1,
                      "value": "241"
                    },
                    {
                      "begin": 11244,
                      "end": 11309,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11334,
                      "end": 11363,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "242"
                    },
                    {
                      "begin": 11356,
                      "end": 11362,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 11334,
                      "end": 11363,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "120"
                    },
                    {
                      "begin": 11334,
                      "end": 11363,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11334,
                      "end": 11363,
                      "name": "tag",
                      "source": 1,
                      "value": "242"
                    },
                    {
                      "begin": 11334,
                      "end": 11363,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11329,
                      "end": 11332,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 11325,
                      "end": 11364,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 11318,
                      "end": 11364,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 11318,
                      "end": 11364,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11085,
                      "end": 11370,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10993,
                      "end": 11370,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 10993,
                      "end": 11370,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 10993,
                      "end": 11370,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10993,
                      "end": 11370,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 10993,
                      "end": 11370,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11376,
                      "end": 11689,
                      "name": "tag",
                      "source": 1,
                      "value": "60"
                    },
                    {
                      "begin": 11376,
                      "end": 11689,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11489,
                      "end": 11493,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 11527,
                      "end": 11529,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 11516,
                      "end": 11525,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 11512,
                      "end": 11530,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 11504,
                      "end": 11530,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 11504,
                      "end": 11530,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11576,
                      "end": 11585,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 11570,
                      "end": 11574,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 11566,
                      "end": 11586,
                      "name": "SUB",
                      "source": 1
                    },
                    {
                      "begin": 11562,
                      "end": 11563,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 11551,
                      "end": 11560,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 11547,
                      "end": 11564,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 11540,
                      "end": 11587,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 11604,
                      "end": 11682,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "244"
                    },
                    {
                      "begin": 11677,
                      "end": 11681,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 11668,
                      "end": 11674,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 11604,
                      "end": 11682,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "121"
                    },
                    {
                      "begin": 11604,
                      "end": 11682,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11604,
                      "end": 11682,
                      "name": "tag",
                      "source": 1,
                      "value": "244"
                    },
                    {
                      "begin": 11604,
                      "end": 11682,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11596,
                      "end": 11682,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 11596,
                      "end": 11682,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11376,
                      "end": 11689,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 11376,
                      "end": 11689,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 11376,
                      "end": 11689,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11376,
                      "end": 11689,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11376,
                      "end": 11689,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11695,
                      "end": 12046,
                      "name": "tag",
                      "source": 1,
                      "value": "68"
                    },
                    {
                      "begin": 11695,
                      "end": 12046,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11765,
                      "end": 11771,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 11814,
                      "end": 11816,
                      "name": "PUSH",
                      "source": 1,
                      "value": "20"
                    },
                    {
                      "begin": 11802,
                      "end": 11811,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 11793,
                      "end": 11800,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 11789,
                      "end": 11812,
                      "name": "SUB",
                      "source": 1
                    },
                    {
                      "begin": 11785,
                      "end": 11817,
                      "name": "SLT",
                      "source": 1
                    },
                    {
                      "begin": 11782,
                      "end": 11901,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 11782,
                      "end": 11901,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "246"
                    },
                    {
                      "begin": 11782,
                      "end": 11901,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 11820,
                      "end": 11899,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "247"
                    },
                    {
                      "begin": 11820,
                      "end": 11899,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "107"
                    },
                    {
                      "begin": 11820,
                      "end": 11899,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11820,
                      "end": 11899,
                      "name": "tag",
                      "source": 1,
                      "value": "247"
                    },
                    {
                      "begin": 11820,
                      "end": 11899,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11782,
                      "end": 11901,
                      "name": "tag",
                      "source": 1,
                      "value": "246"
                    },
                    {
                      "begin": 11782,
                      "end": 11901,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11940,
                      "end": 11941,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 11965,
                      "end": 12029,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "248"
                    },
                    {
                      "begin": 12021,
                      "end": 12028,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 12012,
                      "end": 12018,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12001,
                      "end": 12010,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 11997,
                      "end": 12019,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 11965,
                      "end": 12029,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "115"
                    },
                    {
                      "begin": 11965,
                      "end": 12029,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 11965,
                      "end": 12029,
                      "name": "tag",
                      "source": 1,
                      "value": "248"
                    },
                    {
                      "begin": 11965,
                      "end": 12029,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 11955,
                      "end": 12029,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 11955,
                      "end": 12029,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11911,
                      "end": 12039,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11695,
                      "end": 12046,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 11695,
                      "end": 12046,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 11695,
                      "end": 12046,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11695,
                      "end": 12046,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 11695,
                      "end": 12046,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12052,
                      "end": 12462,
                      "name": "tag",
                      "source": 1,
                      "value": "70"
                    },
                    {
                      "begin": 12052,
                      "end": 12462,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12092,
                      "end": 12099,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 12115,
                      "end": 12135,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "250"
                    },
                    {
                      "begin": 12133,
                      "end": 12134,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12115,
                      "end": 12135,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 12115,
                      "end": 12135,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12115,
                      "end": 12135,
                      "name": "tag",
                      "source": 1,
                      "value": "250"
                    },
                    {
                      "begin": 12115,
                      "end": 12135,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12110,
                      "end": 12135,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 12110,
                      "end": 12135,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12149,
                      "end": 12169,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "251"
                    },
                    {
                      "begin": 12167,
                      "end": 12168,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 12149,
                      "end": 12169,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 12149,
                      "end": 12169,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12149,
                      "end": 12169,
                      "name": "tag",
                      "source": 1,
                      "value": "251"
                    },
                    {
                      "begin": 12149,
                      "end": 12169,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12144,
                      "end": 12169,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 12144,
                      "end": 12169,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12204,
                      "end": 12205,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12201,
                      "end": 12202,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12197,
                      "end": 12206,
                      "name": "MUL",
                      "source": 1
                    },
                    {
                      "begin": 12226,
                      "end": 12256,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "252"
                    },
                    {
                      "begin": 12244,
                      "end": 12255,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 12226,
                      "end": 12256,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 12226,
                      "end": 12256,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12226,
                      "end": 12256,
                      "name": "tag",
                      "source": 1,
                      "value": "252"
                    },
                    {
                      "begin": 12226,
                      "end": 12256,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12215,
                      "end": 12256,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 12215,
                      "end": 12256,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12405,
                      "end": 12406,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12396,
                      "end": 12403,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12392,
                      "end": 12407,
                      "name": "DIV",
                      "source": 1
                    },
                    {
                      "begin": 12389,
                      "end": 12390,
                      "name": "DUP5",
                      "source": 1
                    },
                    {
                      "begin": 12386,
                      "end": 12408,
                      "name": "EQ",
                      "source": 1
                    },
                    {
                      "begin": 12366,
                      "end": 12367,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 12359,
                      "end": 12368,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 12339,
                      "end": 12422,
                      "name": "OR",
                      "source": 1
                    },
                    {
                      "begin": 12316,
                      "end": 12455,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "253"
                    },
                    {
                      "begin": 12316,
                      "end": 12455,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 12435,
                      "end": 12453,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "254"
                    },
                    {
                      "begin": 12435,
                      "end": 12453,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "116"
                    },
                    {
                      "begin": 12435,
                      "end": 12453,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12435,
                      "end": 12453,
                      "name": "tag",
                      "source": 1,
                      "value": "254"
                    },
                    {
                      "begin": 12435,
                      "end": 12453,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12316,
                      "end": 12455,
                      "name": "tag",
                      "source": 1,
                      "value": "253"
                    },
                    {
                      "begin": 12316,
                      "end": 12455,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12100,
                      "end": 12462,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12052,
                      "end": 12462,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 12052,
                      "end": 12462,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 12052,
                      "end": 12462,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12052,
                      "end": 12462,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12052,
                      "end": 12462,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12468,
                      "end": 12648,
                      "name": "tag",
                      "source": 1,
                      "value": "122"
                    },
                    {
                      "begin": 12468,
                      "end": 12648,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12516,
                      "end": 12593,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 12513,
                      "end": 12514,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 12506,
                      "end": 12594,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 12613,
                      "end": 12617,
                      "name": "PUSH",
                      "source": 1,
                      "value": "12"
                    },
                    {
                      "begin": 12610,
                      "end": 12611,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4"
                    },
                    {
                      "begin": 12603,
                      "end": 12618,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 12637,
                      "end": 12641,
                      "name": "PUSH",
                      "source": 1,
                      "value": "24"
                    },
                    {
                      "begin": 12634,
                      "end": 12635,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 12627,
                      "end": 12642,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 12654,
                      "end": 12839,
                      "name": "tag",
                      "source": 1,
                      "value": "72"
                    },
                    {
                      "begin": 12654,
                      "end": 12839,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12694,
                      "end": 12695,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 12711,
                      "end": 12731,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "257"
                    },
                    {
                      "begin": 12729,
                      "end": 12730,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12711,
                      "end": 12731,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 12711,
                      "end": 12731,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12711,
                      "end": 12731,
                      "name": "tag",
                      "source": 1,
                      "value": "257"
                    },
                    {
                      "begin": 12711,
                      "end": 12731,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12706,
                      "end": 12731,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 12706,
                      "end": 12731,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12745,
                      "end": 12765,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "258"
                    },
                    {
                      "begin": 12763,
                      "end": 12764,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 12745,
                      "end": 12765,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "82"
                    },
                    {
                      "begin": 12745,
                      "end": 12765,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12745,
                      "end": 12765,
                      "name": "tag",
                      "source": 1,
                      "value": "258"
                    },
                    {
                      "begin": 12745,
                      "end": 12765,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12740,
                      "end": 12765,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 12740,
                      "end": 12765,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12784,
                      "end": 12785,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12774,
                      "end": 12809,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "259"
                    },
                    {
                      "begin": 12774,
                      "end": 12809,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 12789,
                      "end": 12807,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "260"
                    },
                    {
                      "begin": 12789,
                      "end": 12807,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "122"
                    },
                    {
                      "begin": 12789,
                      "end": 12807,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 12789,
                      "end": 12807,
                      "name": "tag",
                      "source": 1,
                      "value": "260"
                    },
                    {
                      "begin": 12789,
                      "end": 12807,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12774,
                      "end": 12809,
                      "name": "tag",
                      "source": 1,
                      "value": "259"
                    },
                    {
                      "begin": 12774,
                      "end": 12809,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 12831,
                      "end": 12832,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12828,
                      "end": 12829,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 12824,
                      "end": 12833,
                      "name": "DIV",
                      "source": 1
                    },
                    {
                      "begin": 12819,
                      "end": 12833,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 12819,
                      "end": 12833,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12654,
                      "end": 12839,
                      "name": "SWAP3",
                      "source": 1
                    },
                    {
                      "begin": 12654,
                      "end": 12839,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 12654,
                      "end": 12839,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12654,
                      "end": 12839,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 12654,
                      "end": 12839,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    }
                  ]
                }
              },
              "sourceList": [
                "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol",
                "#utility.yul"
              ]
            },
            "methodIdentifiers": {
              "check()": "919840ad",
              "get()": "6d4ce63c",
              "latestAnswer()": "50d25bcd",
              "peek()": "59e02dd7"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"rate\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Oracle contract for BALWSTETHWETH LP Token\",\"kind\":\"dev\",\"methods\":{\"get()\":{\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"latestAnswer()\":{\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"peek()\":{\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"check()\":{\"notice\":\"Check the oracle (re-entrancy)\"},\"get()\":{\"notice\":\"Get the latest price.\"},\"latestAnswer()\":{\"notice\":\"Check the current spot price without any state changes. For oracles like TWAP this will be different from peek().\"},\"peek()\":{\"notice\":\"Check the last price without any state changes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"BALWSTETHWETHOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "check()": {
                "notice": "Check the oracle (re-entrancy)"
              },
              "get()": {
                "notice": "Get the latest price."
              },
              "latestAnswer()": {
                "notice": "Check the current spot price without any state changes. For oracles like TWAP this will be different from peek()."
              },
              "peek()": {
                "notice": "Check the last price without any state changes."
              }
            },
            "version": 1
          }
        },
        "Errors": {
          "abi": [],
          "devdoc": {
            "author": "Sturdy, inspiration from Aave",
            "details": "Error messages prefix glossary:  - VL = ValidationLogic  - MATH = Math libraries  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)  - AT = AToken  - SDT = StableDebtToken  - VDT = VariableDebtToken  - LP = LendingPool  - LPAPR = LendingPoolAddressesProviderRegistry  - LPC = LendingPoolConfiguration  - RL = ReserveLogic  - LPCM = LendingPoolCollateralManager  - P = Pausable",
            "kind": "dev",
            "methods": {},
            "title": "Errors library",
            "version": 1
          },
          "evm": {
            "assembly": "    /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":46974:59024  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":46974:59024  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202549630b9fd262d836cf7355ff183a25e9de9e786efa8942c0c8b2c79da8c75364736f6c63430008130033\n}\n",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202549630b9fd262d836cf7355ff183a25e9de9e786efa8942c0c8b2c79da8c75364736f6c63430008130033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0x49 PUSH4 0xB9FD262 0xD8 CALLDATASIZE 0xCF PUSH20 0x55FF183A25E9DE9E786EFA8942C0C8B2C79DA8C7 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "46974:12050:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202549630b9fd262d836cf7355ff183a25e9de9e786efa8942c0c8b2c79da8c75364736f6c63430008130033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0x49 PUSH4 0xB9FD262 0xD8 CALLDATASIZE 0xCF PUSH20 0x55FF183A25E9DE9E786EFA8942C0C8B2C79DA8C7 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "46974:12050:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH #[$]",
                  "source": 0,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH [$]",
                  "source": 0,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "B"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "DUP3",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "DUP3",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "DUP3",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "CODECOPY",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "DUP1",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "MLOAD",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "BYTE",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "73"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "EQ",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH [tag]",
                  "source": 0,
                  "value": "1"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "JUMPI",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "MSTORE",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "4"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "MSTORE",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "24"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "REVERT",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "tag",
                  "source": 0,
                  "value": "1"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "JUMPDEST",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "ADDRESS",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "MSTORE",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "PUSH",
                  "source": 0,
                  "value": "73"
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "DUP2",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "MSTORE8",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "DUP3",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "DUP2",
                  "source": 0
                },
                {
                  "begin": 46974,
                  "end": 59024,
                  "name": "RETURN",
                  "source": 0
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a26469706673582212202549630b9fd262d836cf7355ff183a25e9de9e786efa8942c0c8b2c79da8c75364736f6c63430008130033",
                  ".code": [
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "PUSHDEPLOYADDRESS",
                      "source": 0
                    },
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "ADDRESS",
                      "source": 0
                    },
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "EQ",
                      "source": 0
                    },
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "PUSH",
                      "source": 0,
                      "value": "80"
                    },
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 46974,
                      "end": 59024,
                      "name": "REVERT",
                      "source": 0
                    }
                  ]
                }
              },
              "sourceList": [
                "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol",
                "#utility.yul"
              ]
            },
            "methodIdentifiers": {}
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Sturdy, inspiration from Aave\",\"details\":\"Error messages prefix glossary:  - VL = ValidationLogic  - MATH = Math libraries  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)  - AT = AToken  - SDT = StableDebtToken  - VDT = VariableDebtToken  - LP = LendingPool  - LPAPR = LendingPoolAddressesProviderRegistry  - LPC = LendingPoolConfiguration  - RL = ReserveLogic  - LPCM = LendingPoolCollateralManager  - P = Pausable\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines the error messages emitted by the different contracts of the Sturdy protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Defines the error messages emitted by the different contracts of the Sturdy protocol",
            "version": 1
          }
        },
        "IAsset": {
          "abi": [],
          "devdoc": {
            "details": "This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {}
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IAuthentication": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getActionId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "getActionId(bytes4)": {
                "details": "Returns the action identifier associated with the external function described by `selector`."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "getActionId(bytes4)": "851c1bb3"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IAuthentication\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IAuthorizer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "actionId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "where",
                  "type": "address"
                }
              ],
              "name": "canPerform",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "canPerform(bytes32,address,address)": {
                "details": "Returns true if `account` can perform the action described by `actionId` in the contract `where`."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "canPerform(bytes32,address,address)": "9be2a884"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IAuthorizer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IBalancerStablePool": {
          "abi": [
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "getRate()": "679aefce"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IBalancerStablePool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IChainlinkAggregator": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "int256",
                  "name": "current",
                  "type": "int256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                }
              ],
              "name": "AnswerUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "startedBy",
                  "type": "address"
                }
              ],
              "name": "NewRound",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "name": "getAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "name": "getTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRound",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "getAnswer(uint256)": "b5ab58dc",
              "getTimestamp(uint256)": "b633620c",
              "latestAnswer()": "50d25bcd",
              "latestRound()": "668a0f02",
              "latestRoundData()": "feaf968c",
              "latestTimestamp()": "8205bf6a"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IChainlinkAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IFlashLoanRecipient": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "feeAmounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "receiveFlashLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "receiveFlashLoan(address[],uint256[],uint256[],bytes)": {
                "details": "When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "receiveFlashLoan(address[],uint256[],uint256[],bytes)": "f04f2707"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IOracle": {
          "abi": [
            {
              "inputs": [],
              "name": "get",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "rate",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "peek",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "rate",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "get()": {
                "returns": {
                  "rate": "The rate of the requested asset / pair / pool.",
                  "success": "if no valid (recent) rate is available, return false else true."
                }
              },
              "latestAnswer()": {
                "returns": {
                  "rate": "The rate of the requested asset / pair / pool."
                }
              },
              "peek()": {
                "returns": {
                  "rate": "The rate of the requested asset / pair / pool.",
                  "success": "if no valid (recent) rate is available, return false else true."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "get()": "6d4ce63c",
              "latestAnswer()": "50d25bcd",
              "peek()": "59e02dd7"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"rate\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"rate\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get()\":{\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\",\"success\":\"if no valid (recent) rate is available, return false else true.\"}},\"latestAnswer()\":{\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"peek()\":{\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\",\"success\":\"if no valid (recent) rate is available, return false else true.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get()\":{\"notice\":\"Get the latest price.\"},\"latestAnswer()\":{\"notice\":\"Check the current spot price without any state changes. For oracles like TWAP this will be different from peek().\"},\"peek()\":{\"notice\":\"Check the last price without any state changes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "get()": {
                "notice": "Get the latest price."
              },
              "latestAnswer()": {
                "notice": "Check the current spot price without any state changes. For oracles like TWAP this will be different from peek()."
              },
              "peek()": {
                "notice": "Check the last price without any state changes."
              }
            },
            "version": 1
          }
        },
        "IOracleValidate": {
          "abi": [
            {
              "inputs": [],
              "name": "check",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "check()": "919840ad"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"check()\":{\"notice\":\"Check the oracle (re-entrancy)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IOracleValidate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "check()": {
                "notice": "Check the oracle (re-entrancy)"
              }
            },
            "version": 1
          }
        },
        "IProtocolFeesCollector": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newFlashLoanFeePercentage",
                  "type": "uint256"
                }
              ],
              "name": "FlashLoanFeePercentageChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newSwapFeePercentage",
                  "type": "uint256"
                }
              ],
              "name": "SwapFeePercentageChanged",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "getAuthorizer",
              "outputs": [
                {
                  "internalType": "contract IAuthorizer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "getCollectedFeeAmounts",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "feeAmounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFlashLoanFeePercentage",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSwapFeePercentage",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newFlashLoanFeePercentage",
                  "type": "uint256"
                }
              ],
              "name": "setFlashLoanFeePercentage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newSwapFeePercentage",
                  "type": "uint256"
                }
              ],
              "name": "setSwapFeePercentage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "vault",
              "outputs": [
                {
                  "internalType": "contract IVault",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "withdrawCollectedFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "getAuthorizer()": "aaabadc5",
              "getCollectedFeeAmounts(address[])": "e42abf35",
              "getFlashLoanFeePercentage()": "d877845c",
              "getSwapFeePercentage()": "55c67628",
              "setFlashLoanFeePercentage(uint256)": "6b6b9f69",
              "setSwapFeePercentage(uint256)": "38e9922e",
              "vault()": "fbfa77cf",
              "withdrawCollectedFees(address[],uint256[],address)": "6daefab6"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "ISignaturesValidator": {
          "abi": [
            {
              "inputs": [],
              "name": "getDomainSeparator",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getNextNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface for the SignatureValidator helper, used to support meta-transactions.",
            "kind": "dev",
            "methods": {
              "getDomainSeparator()": {
                "details": "Returns the EIP712 domain separator."
              },
              "getNextNonce(address)": {
                "details": "Returns the next nonce used by an address to sign messages."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "getDomainSeparator()": "ed24911d",
              "getNextNonce(address)": "90193b7c"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "ITemporarilyPausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                }
              ],
              "name": "PausedStateChanged",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "getPausedState",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "pauseWindowEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bufferPeriodEndTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface for the TemporarilyPausable helper.",
            "events": {
              "PausedStateChanged(bool)": {
                "details": "Emitted every time the pause state changes by `_setPaused`."
              }
            },
            "kind": "dev",
            "methods": {
              "getPausedState()": {
                "details": "Returns the current paused state."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "getPausedState()": "1c0de051"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IVault": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IAuthorizer",
                  "name": "newAuthorizer",
                  "type": "address"
                }
              ],
              "name": "AuthorizerChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ExternalBalanceTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IFlashLoanRecipient",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                }
              ],
              "name": "FlashLoan",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "delta",
                  "type": "int256"
                }
              ],
              "name": "InternalBalanceChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                }
              ],
              "name": "PausedStateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "liquidityProvider",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "int256[]",
                  "name": "deltas",
                  "type": "int256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "protocolFeeAmounts",
                  "type": "uint256[]"
                }
              ],
              "name": "PoolBalanceChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "assetManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "cashDelta",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "managedDelta",
                  "type": "int256"
                }
              ],
              "name": "PoolBalanceManaged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "poolAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "enum IVault.PoolSpecialization",
                  "name": "specialization",
                  "type": "uint8"
                }
              ],
              "name": "PoolRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "RelayerApprovalChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "TokensDeregistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "assetManagers",
                  "type": "address[]"
                }
              ],
              "name": "TokensRegistered",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "contract IWETH",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]"
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                },
                {
                  "internalType": "int256[]",
                  "name": "limits",
                  "type": "int256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "batchSwap",
              "outputs": [
                {
                  "internalType": "int256[]",
                  "name": "",
                  "type": "int256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "deregisterTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IAsset[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "minAmountsOut",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.ExitPoolRequest",
                  "name": "request",
                  "type": "tuple"
                }
              ],
              "name": "exitPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IFlashLoanRecipient",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "flashLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getActionId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAuthorizer",
              "outputs": [
                {
                  "internalType": "contract IAuthorizer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDomainSeparator",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "getInternalBalance",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getNextNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPausedState",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "pauseWindowEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bufferPeriodEndTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "enum IVault.PoolSpecialization",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getPoolTokenInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "cash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "managed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastChangeBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetManager",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                }
              ],
              "name": "getPoolTokens",
              "outputs": [
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "balances",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "lastChangeBlock",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getProtocolFeesCollector",
              "outputs": [
                {
                  "internalType": "contract IProtocolFeesCollector",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "relayer",
                  "type": "address"
                }
              ],
              "name": "hasApprovedRelayer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IAsset[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "maxAmountsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.JoinPoolRequest",
                  "name": "request",
                  "type": "tuple"
                }
              ],
              "name": "joinPool",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum IVault.PoolBalanceOpKind",
                      "name": "kind",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IVault.PoolBalanceOp[]",
                  "name": "ops",
                  "type": "tuple[]"
                }
              ],
              "name": "managePoolBalance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum IVault.UserBalanceOpKind",
                      "name": "kind",
                      "type": "uint8"
                    },
                    {
                      "internalType": "contract IAsset",
                      "name": "asset",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IVault.UserBalanceOp[]",
                  "name": "ops",
                  "type": "tuple[]"
                }
              ],
              "name": "manageUserBalance",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]"
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                }
              ],
              "name": "queryBatchSwap",
              "outputs": [
                {
                  "internalType": "int256[]",
                  "name": "assetDeltas",
                  "type": "int256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum IVault.PoolSpecialization",
                  "name": "specialization",
                  "type": "uint8"
                }
              ],
              "name": "registerPool",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "assetManagers",
                  "type": "address[]"
                }
              ],
              "name": "registerTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAuthorizer",
                  "name": "newAuthorizer",
                  "type": "address"
                }
              ],
              "name": "setAuthorizer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                }
              ],
              "name": "setPaused",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "relayer",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setRelayerApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum IVault.SwapKind",
                      "name": "kind",
                      "type": "uint8"
                    },
                    {
                      "internalType": "contract IAsset",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAsset",
                      "name": "assetOut",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.SingleSwap",
                  "name": "singleSwap",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.",
            "events": {
              "AuthorizerChanged(address)": {
                "details": "Emitted when a new authorizer is set by `setAuthorizer`."
              },
              "ExternalBalanceTransfer(address,address,address,uint256)": {
                "details": "Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."
              },
              "FlashLoan(address,address,uint256,uint256)": {
                "details": "Emitted for each individual flash loan performed by `flashLoan`."
              },
              "InternalBalanceChanged(address,address,int256)": {
                "details": "Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address."
              },
              "PausedStateChanged(bool)": {
                "details": "Emitted every time the pause state changes by `_setPaused`."
              },
              "PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])": {
                "details": "Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."
              },
              "PoolBalanceManaged(bytes32,address,address,int256,int256)": {
                "details": "Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."
              },
              "PoolRegistered(bytes32,address,uint8)": {
                "details": "Emitted when a Pool is registered by calling `registerPool`."
              },
              "RelayerApprovalChanged(address,address,bool)": {
                "details": "Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."
              },
              "Swap(bytes32,address,address,uint256,uint256)": {
                "details": "Emitted for each individual swap performed by `swap` or `batchSwap`."
              },
              "TokensDeregistered(bytes32,address[])": {
                "details": "Emitted when a Pool deregisters tokens by calling `deregisterTokens`."
              },
              "TokensRegistered(bytes32,address[],address[])": {
                "details": "Emitted when a Pool registers tokens by calling `registerTokens`."
              }
            },
            "kind": "dev",
            "methods": {
              "WETH()": {
                "details": "Returns the Vault's WETH instance."
              },
              "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
                "details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
              },
              "deregisterTokens(bytes32,address[])": {
                "details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
              },
              "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
                "details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
              },
              "flashLoan(address,address[],uint256[],bytes)": {
                "details": "Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events."
              },
              "getActionId(bytes4)": {
                "details": "Returns the action identifier associated with the external function described by `selector`."
              },
              "getAuthorizer()": {
                "details": "Returns the Vault's Authorizer."
              },
              "getDomainSeparator()": {
                "details": "Returns the EIP712 domain separator."
              },
              "getInternalBalance(address,address[])": {
                "details": "Returns `user`'s Internal Balance for a set of tokens."
              },
              "getNextNonce(address)": {
                "details": "Returns the next nonce used by an address to sign messages."
              },
              "getPausedState()": {
                "details": "Returns the current paused state."
              },
              "getPool(bytes32)": {
                "details": "Returns a Pool's contract address and specialization setting."
              },
              "getPoolTokenInfo(bytes32,address)": {
                "details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
              },
              "getPoolTokens(bytes32)": {
                "details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
              },
              "getProtocolFeesCollector()": {
                "details": "Returns the current protocol fee module."
              },
              "hasApprovedRelayer(address,address)": {
                "details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
              },
              "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
                "details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
              },
              "managePoolBalance((uint8,bytes32,address,uint256)[])": {
                "details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
              },
              "manageUserBalance((uint8,address,uint256,address,address)[])": {
                "details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
              },
              "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
                "details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
              },
              "registerPool(uint8)": {
                "details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
              },
              "registerTokens(bytes32,address[],address[])": {
                "details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
              },
              "setAuthorizer(address)": {
                "details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
              },
              "setPaused(bool)": {
                "details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
              },
              "setRelayerApproval(address,address,bool)": {
                "details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
              },
              "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
                "details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
              "deregisterTokens(bytes32,address[])": "7d3aeb96",
              "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
              "flashLoan(address,address[],uint256[],bytes)": "5c38449e",
              "getActionId(bytes4)": "851c1bb3",
              "getAuthorizer()": "aaabadc5",
              "getDomainSeparator()": "ed24911d",
              "getInternalBalance(address,address[])": "0f5a6efa",
              "getNextNonce(address)": "90193b7c",
              "getPausedState()": "1c0de051",
              "getPool(bytes32)": "f6c00927",
              "getPoolTokenInfo(bytes32,address)": "b05f8e48",
              "getPoolTokens(bytes32)": "f94d4668",
              "getProtocolFeesCollector()": "d2946c2b",
              "hasApprovedRelayer(address,address)": "fec90d72",
              "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
              "managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
              "manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
              "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
              "registerPool(uint8)": "09b2760f",
              "registerTokens(bytes32,address[],address[])": "66a9c7d2",
              "setAuthorizer(address)": "058a628f",
              "setPaused(bool)": "16c38b3c",
              "setRelayerApproval(address,address,bool)": "fa6e671d",
              "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IWETH": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "deposit()": "d0e30db0",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "Math": {
          "abi": [],
          "devdoc": {
            "details": "Standard math utilities missing in the Solidity language.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "    /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59121:60073  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":59121:60073  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f2ae8ca1b9725b7987517c5299e265a6dd15c7979dd490ee0197b19c1d68445364736f6c63430008130033\n}\n",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2ae8ca1b9725b7987517c5299e265a6dd15c7979dd490ee0197b19c1d68445364736f6c63430008130033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xAE DUP13 LOG1 0xB9 PUSH19 0x5B7987517C5299E265A6DD15C7979DD490EE01 SWAP8 0xB1 SWAP13 SAR PUSH9 0x445364736F6C634300 ADDMOD SGT STOP CALLER ",
              "sourceMap": "59121:952:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2ae8ca1b9725b7987517c5299e265a6dd15c7979dd490ee0197b19c1d68445364736f6c63430008130033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xAE DUP13 LOG1 0xB9 PUSH19 0x5B7987517C5299E265A6DD15C7979DD490EE01 SWAP8 0xB1 SWAP13 SAR PUSH9 0x445364736F6C634300 ADDMOD SGT STOP CALLER ",
              "sourceMap": "59121:952:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              },
              "internal": {
                "average(uint256,uint256)": "infinite",
                "ceilDiv(uint256,uint256)": "infinite",
                "max(uint256,uint256)": "infinite",
                "min(uint256,uint256)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH #[$]",
                  "source": 0,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH [$]",
                  "source": 0,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "B"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "DUP3",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "DUP3",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "DUP3",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "CODECOPY",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "DUP1",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "MLOAD",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "BYTE",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "73"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "EQ",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH [tag]",
                  "source": 0,
                  "value": "1"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "JUMPI",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "MSTORE",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "4"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "MSTORE",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "24"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "REVERT",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "tag",
                  "source": 0,
                  "value": "1"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "JUMPDEST",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "ADDRESS",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "MSTORE",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "PUSH",
                  "source": 0,
                  "value": "73"
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "DUP2",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "MSTORE8",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "DUP3",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "DUP2",
                  "source": 0
                },
                {
                  "begin": 59121,
                  "end": 60073,
                  "name": "RETURN",
                  "source": 0
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a2646970667358221220f2ae8ca1b9725b7987517c5299e265a6dd15c7979dd490ee0197b19c1d68445364736f6c63430008130033",
                  ".code": [
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "PUSHDEPLOYADDRESS",
                      "source": 0
                    },
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "ADDRESS",
                      "source": 0
                    },
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "EQ",
                      "source": 0
                    },
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "PUSH",
                      "source": 0,
                      "value": "80"
                    },
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 59121,
                      "end": 60073,
                      "name": "REVERT",
                      "source": 0
                    }
                  ]
                }
              },
              "sourceList": [
                "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol",
                "#utility.yul"
              ]
            },
            "methodIdentifiers": {}
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol\":{\"keccak256\":\"0x5494aeedd0fb7339d797985309cb12dddd0a9e76ea4afc0e03000631c93c2f5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://84e973e9cd1ab14a73f4271b897f59ee1012af9dfe40024b78e99516338a1f50\",\"dweb:/ipfs/QmYf7jZUANpgJpn9tC7oxiV95ByXVRA1HmvpnvifMWSGUH\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol": {
        "ast": {
          "absolutePath": "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol",
          "exportedSymbols": {
            "BALWSTETHWETHOracle": [
              1442
            ],
            "Errors": [
              1190
            ],
            "IAsset": [
              133
            ],
            "IAuthentication": [
              10
            ],
            "IAuthorizer": [
              163
            ],
            "IBalancerStablePool": [
              823
            ],
            "IChainlinkAggregator": [
              817
            ],
            "IERC20": [
              119
            ],
            "IFlashLoanRecipient": [
              150
            ],
            "IOracle": [
              755
            ],
            "IOracleValidate": [
              732
            ],
            "IProtocolFeesCollector": [
              226
            ],
            "ISignaturesValidator": [
              26
            ],
            "ITemporarilyPausable": [
              43
            ],
            "IVault": [
              727
            ],
            "IWETH": [
              131
            ],
            "Math": [
              1276
            ]
          },
          "id": 1443,
          "license": "AGPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAuthentication",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 10,
              "linearizedBaseContracts": [
                10
              ],
              "name": "IAuthentication",
              "nameLocation": "564:15:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2,
                    "nodeType": "StructuredDocumentation",
                    "src": "586:116:0",
                    "text": " @dev Returns the action identifier associated with the external function described by `selector`."
                  },
                  "functionSelector": "851c1bb3",
                  "id": 9,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActionId",
                  "nameLocation": "716:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "735:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 9,
                        "src": "728:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "727:17:0"
                  },
                  "returnParameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 9,
                        "src": "768:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "768:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "767:9:0"
                  },
                  "scope": 10,
                  "src": "707:70:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "554:225:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISignaturesValidator",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 11,
                "nodeType": "StructuredDocumentation",
                "src": "810:95:0",
                "text": " @dev Interface for the SignatureValidator helper, used to support meta-transactions."
              },
              "fullyImplemented": false,
              "id": 26,
              "linearizedBaseContracts": [
                26
              ],
              "name": "ISignaturesValidator",
              "nameLocation": "916:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "943:60:0",
                    "text": " @dev Returns the EIP712 domain separator."
                  },
                  "functionSelector": "ed24911d",
                  "id": 17,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDomainSeparator",
                  "nameLocation": "1017:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1035:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "1061:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1061:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1060:9:0"
                  },
                  "scope": 26,
                  "src": "1008:62:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 18,
                    "nodeType": "StructuredDocumentation",
                    "src": "1076:83:0",
                    "text": " @dev Returns the next nonce used by an address to sign messages."
                  },
                  "functionSelector": "90193b7c",
                  "id": 25,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNextNonce",
                  "nameLocation": "1173:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1194:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1186:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1186:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1185:14:0"
                  },
                  "returnParameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1223:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:9:0"
                  },
                  "scope": 26,
                  "src": "1164:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "906:328:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ITemporarilyPausable",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 27,
                "nodeType": "StructuredDocumentation",
                "src": "1265:61:0",
                "text": " @dev Interface for the TemporarilyPausable helper."
              },
              "fullyImplemented": false,
              "id": 43,
              "linearizedBaseContracts": [
                43
              ],
              "name": "ITemporarilyPausable",
              "nameLocation": "1337:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 28,
                    "nodeType": "StructuredDocumentation",
                    "src": "1364:83:0",
                    "text": " @dev Emitted every time the pause state changes by `_setPaused`."
                  },
                  "eventSelector": "9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be64",
                  "id": 32,
                  "name": "PausedStateChanged",
                  "nameLocation": "1458:18:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 30,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paused",
                        "nameLocation": "1482:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1477:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1477:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1476:13:0"
                  },
                  "src": "1452:38:0"
                },
                {
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "1496:57:0",
                    "text": " @dev Returns the current paused state."
                  },
                  "functionSelector": "1c0de051",
                  "id": 42,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPausedState",
                  "nameLocation": "1567:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1581:2:0"
                  },
                  "returnParameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "paused",
                        "nameLocation": "1649:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "1644:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1644:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "pauseWindowEndTime",
                        "nameLocation": "1677:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "1669:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1669:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "bufferPeriodEndTime",
                        "nameLocation": "1717:19:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "1709:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1709:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1630:116:0"
                  },
                  "scope": 43,
                  "src": "1558:189:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "1327:422:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 44,
                "nodeType": "StructuredDocumentation",
                "src": "1767:70:0",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 119,
              "linearizedBaseContracts": [
                119
              ],
              "name": "IERC20",
              "nameLocation": "1848:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "1861:66:0",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 50,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "1941:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1952:2:0"
                  },
                  "returnParameters": {
                    "id": 49,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 48,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1978:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 47,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1978:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1977:9:0"
                  },
                  "scope": 119,
                  "src": "1932:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1993:72:0",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 58,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2079:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2097:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2089:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2089:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2088:17:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2129:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2129:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2128:9:0"
                  },
                  "scope": 119,
                  "src": "2070:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "2144:209:0",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 68,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "2367:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2384:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "2376:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2403:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "2395:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2395:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:35:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 66,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "2429:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2428:6:0"
                  },
                  "scope": 119,
                  "src": "2358:77:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 69,
                    "nodeType": "StructuredDocumentation",
                    "src": "2441:264:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 78,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "2719:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2737:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "2729:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2729:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2752:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "2744:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2744:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2728:32:0"
                  },
                  "returnParameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "2784:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2784:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2783:9:0"
                  },
                  "scope": 119,
                  "src": "2710:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 79,
                    "nodeType": "StructuredDocumentation",
                    "src": "2799:642:0",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 88,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3455:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3471:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "3463:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3463:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3488:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "3480:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3480:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3462:33:0"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "3514:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3514:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3513:6:0"
                  },
                  "scope": 119,
                  "src": "3446:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 89,
                    "nodeType": "StructuredDocumentation",
                    "src": "3526:296:0",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 100,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "3836:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3866:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 100,
                        "src": "3858:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "3890:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 100,
                        "src": "3882:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3882:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3917:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 100,
                        "src": "3909:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3909:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3848:81:0"
                  },
                  "returnParameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 100,
                        "src": "3948:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3948:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3947:6:0"
                  },
                  "scope": 119,
                  "src": "3827:127:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 101,
                    "nodeType": "StructuredDocumentation",
                    "src": "3960:158:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 109,
                  "name": "Transfer",
                  "nameLocation": "4129:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 103,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4154:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "4138:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4138:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 105,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4176:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "4160:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4160:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 107,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4188:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "4180:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4180:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4137:57:0"
                  },
                  "src": "4123:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 110,
                    "nodeType": "StructuredDocumentation",
                    "src": "4201:148:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 118,
                  "name": "Approval",
                  "nameLocation": "4360:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4385:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "4369:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4369:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 114,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4408:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "4392:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4392:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4425:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "4417:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4417:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4368:63:0"
                  },
                  "src": "4354:78:0"
                }
              ],
              "scope": 1443,
              "src": "1838:2596:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 121,
                    "name": "IERC20",
                    "nameLocations": [
                      "4620:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 119,
                    "src": "4620:6:0"
                  },
                  "id": 122,
                  "nodeType": "InheritanceSpecifier",
                  "src": "4620:6:0"
                }
              ],
              "canonicalName": "IWETH",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 120,
                "nodeType": "StructuredDocumentation",
                "src": "4450:150:0",
                "text": " @dev Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"
              },
              "fullyImplemented": false,
              "id": 131,
              "linearizedBaseContracts": [
                131,
                119
              ],
              "name": "IWETH",
              "nameLocation": "4611:5:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "d0e30db0",
                  "id": 125,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "4642:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4649:2:0"
                  },
                  "returnParameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4668:0:0"
                  },
                  "scope": 131,
                  "src": "4633:36:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 130,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "4684:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4701:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "4693:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4693:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4692:16:0"
                  },
                  "returnParameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4717:0:0"
                  },
                  "scope": 131,
                  "src": "4675:43:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "4601:119:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAsset",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 132,
                "nodeType": "StructuredDocumentation",
                "src": "4738:309:0",
                "text": " @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."
              },
              "fullyImplemented": true,
              "id": 133,
              "linearizedBaseContracts": [
                133
              ],
              "name": "IAsset",
              "nameLocation": "5058:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 1443,
              "src": "5048:73:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IFlashLoanRecipient",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 150,
              "linearizedBaseContracts": [
                150
              ],
              "name": "IFlashLoanRecipient",
              "nameLocation": "5161:19:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 134,
                    "nodeType": "StructuredDocumentation",
                    "src": "5187:496:0",
                    "text": " @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."
                  },
                  "functionSelector": "f04f2707",
                  "id": 149,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "receiveFlashLoan",
                  "nameLocation": "5697:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 138,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "5739:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "5723:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 136,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 135,
                              "name": "IERC20",
                              "nameLocations": [
                                "5723:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "5723:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "5723:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 137,
                          "nodeType": "ArrayTypeName",
                          "src": "5723:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "5772:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "5755:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 139,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5755:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 140,
                          "nodeType": "ArrayTypeName",
                          "src": "5755:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "feeAmounts",
                        "nameLocation": "5806:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "5789:27:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 142,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5789:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 143,
                          "nodeType": "ArrayTypeName",
                          "src": "5789:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "userData",
                        "nameLocation": "5839:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "5826:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5826:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5713:140:0"
                  },
                  "returnParameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5862:0:0"
                  },
                  "scope": 150,
                  "src": "5688:175:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "5151:714:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAuthorizer",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 163,
              "linearizedBaseContracts": [
                163
              ],
              "name": "IAuthorizer",
              "nameLocation": "5899:11:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "5917:121:0",
                    "text": " @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."
                  },
                  "functionSelector": "9be2a884",
                  "id": 162,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canPerform",
                  "nameLocation": "6052:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "actionId",
                        "nameLocation": "6080:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "6072:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6072:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6106:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "6098:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6098:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "where",
                        "nameLocation": "6131:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "6123:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6123:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6062:80:0"
                  },
                  "returnParameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 160,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "6166:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6166:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6165:6:0"
                  },
                  "scope": 163,
                  "src": "6043:129:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "5889:285:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IProtocolFeesCollector",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 226,
              "linearizedBaseContracts": [
                226
              ],
              "name": "IProtocolFeesCollector",
              "nameLocation": "6223:22:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "a9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc",
                  "id": 167,
                  "name": "SwapFeePercentageChanged",
                  "nameLocation": "6258:24:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newSwapFeePercentage",
                        "nameLocation": "6291:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "6283:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6283:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6282:30:0"
                  },
                  "src": "6252:61:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a",
                  "id": 171,
                  "name": "FlashLoanFeePercentageChanged",
                  "nameLocation": "6324:29:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newFlashLoanFeePercentage",
                        "nameLocation": "6362:25:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 171,
                        "src": "6354:33:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6354:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6353:35:0"
                  },
                  "src": "6318:71:0"
                },
                {
                  "functionSelector": "6daefab6",
                  "id": 183,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawCollectedFees",
                  "nameLocation": "6404:21:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "6453:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "6435:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 173,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 172,
                              "name": "IERC20",
                              "nameLocations": [
                                "6435:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "6435:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "6435:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 174,
                          "nodeType": "ArrayTypeName",
                          "src": "6435:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "6488:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "6469:26:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 176,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6469:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 177,
                          "nodeType": "ArrayTypeName",
                          "src": "6469:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "6513:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "6505:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6505:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6425:103:0"
                  },
                  "returnParameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6537:0:0"
                  },
                  "scope": 226,
                  "src": "6395:143:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "38e9922e",
                  "id": 188,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setSwapFeePercentage",
                  "nameLocation": "6553:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "newSwapFeePercentage",
                        "nameLocation": "6582:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "6574:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6574:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6573:30:0"
                  },
                  "returnParameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6612:0:0"
                  },
                  "scope": 226,
                  "src": "6544:69:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6b6b9f69",
                  "id": 193,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFlashLoanFeePercentage",
                  "nameLocation": "6628:25:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "newFlashLoanFeePercentage",
                        "nameLocation": "6662:25:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "6654:33:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6654:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6653:35:0"
                  },
                  "returnParameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6697:0:0"
                  },
                  "scope": 226,
                  "src": "6619:79:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "55c67628",
                  "id": 198,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSwapFeePercentage",
                  "nameLocation": "6713:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6733:2:0"
                  },
                  "returnParameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 196,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "6759:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 195,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6759:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6758:9:0"
                  },
                  "scope": 226,
                  "src": "6704:64:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d877845c",
                  "id": 203,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFlashLoanFeePercentage",
                  "nameLocation": "6783:25:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6808:2:0"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "6834:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6834:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6833:9:0"
                  },
                  "scope": 226,
                  "src": "6774:69:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e42abf35",
                  "id": 213,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCollectedFeeAmounts",
                  "nameLocation": "6858:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "6897:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "6881:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 205,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 204,
                              "name": "IERC20",
                              "nameLocations": [
                                "6881:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "6881:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "6881:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 206,
                          "nodeType": "ArrayTypeName",
                          "src": "6881:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6880:24:0"
                  },
                  "returnParameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "feeAmounts",
                        "nameLocation": "6945:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "6928:27:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 209,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6928:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 210,
                          "nodeType": "ArrayTypeName",
                          "src": "6928:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6927:29:0"
                  },
                  "scope": 226,
                  "src": "6849:108:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "aaabadc5",
                  "id": 219,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizer",
                  "nameLocation": "6972:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6985:2:0"
                  },
                  "returnParameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "7011:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$163",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 216,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 215,
                            "name": "IAuthorizer",
                            "nameLocations": [
                              "7011:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 163,
                            "src": "7011:11:0"
                          },
                          "referencedDeclaration": 163,
                          "src": "7011:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$163",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7010:13:0"
                  },
                  "scope": 226,
                  "src": "6963:61:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fbfa77cf",
                  "id": 225,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "vault",
                  "nameLocation": "7039:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7044:2:0"
                  },
                  "returnParameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "7070:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$727",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 222,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 221,
                            "name": "IVault",
                            "nameLocations": [
                              "7070:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 727,
                            "src": "7070:6:0"
                          },
                          "referencedDeclaration": 727,
                          "src": "7070:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$727",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7069:8:0"
                  },
                  "scope": 226,
                  "src": "7030:48:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "6213:867:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 228,
                    "name": "ISignaturesValidator",
                    "nameLocations": [
                      "7298:20:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 26,
                    "src": "7298:20:0"
                  },
                  "id": 229,
                  "nodeType": "InheritanceSpecifier",
                  "src": "7298:20:0"
                },
                {
                  "baseName": {
                    "id": 230,
                    "name": "ITemporarilyPausable",
                    "nameLocations": [
                      "7320:20:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 43,
                    "src": "7320:20:0"
                  },
                  "id": 231,
                  "nodeType": "InheritanceSpecifier",
                  "src": "7320:20:0"
                },
                {
                  "baseName": {
                    "id": 232,
                    "name": "IAuthentication",
                    "nameLocations": [
                      "7342:15:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10,
                    "src": "7342:15:0"
                  },
                  "id": 233,
                  "nodeType": "InheritanceSpecifier",
                  "src": "7342:15:0"
                }
              ],
              "canonicalName": "IVault",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 227,
                "nodeType": "StructuredDocumentation",
                "src": "7106:171:0",
                "text": " @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n don't override one of these declarations."
              },
              "fullyImplemented": false,
              "id": 727,
              "linearizedBaseContracts": [
                727,
                10,
                43,
                26
              ],
              "name": "IVault",
              "nameLocation": "7288:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "8855:55:0",
                    "text": " @dev Returns the Vault's Authorizer."
                  },
                  "functionSelector": "aaabadc5",
                  "id": 240,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizer",
                  "nameLocation": "8924:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8937:2:0"
                  },
                  "returnParameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "8963:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$163",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 237,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 236,
                            "name": "IAuthorizer",
                            "nameLocations": [
                              "8963:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 163,
                            "src": "8963:11:0"
                          },
                          "referencedDeclaration": 163,
                          "src": "8963:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$163",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8962:13:0"
                  },
                  "scope": 727,
                  "src": "8915:61:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "8982:175:0",
                    "text": " @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."
                  },
                  "functionSelector": "058a628f",
                  "id": 247,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setAuthorizer",
                  "nameLocation": "9171:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 244,
                        "mutability": "mutable",
                        "name": "newAuthorizer",
                        "nameLocation": "9197:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "9185:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$163",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 243,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 242,
                            "name": "IAuthorizer",
                            "nameLocations": [
                              "9185:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 163,
                            "src": "9185:11:0"
                          },
                          "referencedDeclaration": 163,
                          "src": "9185:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$163",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9184:27:0"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9220:0:0"
                  },
                  "scope": 727,
                  "src": "9162:59:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 248,
                    "nodeType": "StructuredDocumentation",
                    "src": "9227:80:0",
                    "text": " @dev Emitted when a new authorizer is set by `setAuthorizer`."
                  },
                  "eventSelector": "94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef",
                  "id": 253,
                  "name": "AuthorizerChanged",
                  "nameLocation": "9318:17:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAuthorizer",
                        "nameLocation": "9356:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "9336:33:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$163",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 250,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 249,
                            "name": "IAuthorizer",
                            "nameLocations": [
                              "9336:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 163,
                            "src": "9336:11:0"
                          },
                          "referencedDeclaration": 163,
                          "src": "9336:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$163",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9335:35:0"
                  },
                  "src": "9312:59:0"
                },
                {
                  "documentation": {
                    "id": 254,
                    "nodeType": "StructuredDocumentation",
                    "src": "10467:99:0",
                    "text": " @dev Returns true if `user` has approved `relayer` to act as a relayer for them."
                  },
                  "functionSelector": "fec90d72",
                  "id": 263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasApprovedRelayer",
                  "nameLocation": "10580:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "10607:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "10599:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10599:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "relayer",
                        "nameLocation": "10621:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "10613:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10613:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10598:31:0"
                  },
                  "returnParameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "10653:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10653:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10652:6:0"
                  },
                  "scope": 727,
                  "src": "10571:88:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 264,
                    "nodeType": "StructuredDocumentation",
                    "src": "10665:178:0",
                    "text": " @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."
                  },
                  "functionSelector": "fa6e671d",
                  "id": 273,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRelayerApproval",
                  "nameLocation": "10857:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "10893:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "10885:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "relayer",
                        "nameLocation": "10917:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "10909:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10909:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "10939:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "10934:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10934:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10875:78:0"
                  },
                  "returnParameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10962:0:0"
                  },
                  "scope": 727,
                  "src": "10848:115:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "10969:104:0",
                    "text": " @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."
                  },
                  "eventSelector": "46961fdb4502b646d5095fba7600486a8ac05041d55cdf0f16ed677180b5cad8",
                  "id": 282,
                  "name": "RelayerApprovalChanged",
                  "nameLocation": "11084:22:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayer",
                        "nameLocation": "11123:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "11107:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11107:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 278,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "11148:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "11132:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11132:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "11161:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "11156:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11156:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11106:64:0"
                  },
                  "src": "11078:93:0"
                },
                {
                  "documentation": {
                    "id": 283,
                    "nodeType": "StructuredDocumentation",
                    "src": "11879:78:0",
                    "text": " @dev Returns `user`'s Internal Balance for a set of tokens."
                  },
                  "functionSelector": "0f5a6efa",
                  "id": 295,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInternalBalance",
                  "nameLocation": "11971:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "11998:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "11990:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11990:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "12020:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "12004:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 287,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 286,
                              "name": "IERC20",
                              "nameLocations": [
                                "12004:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "12004:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "12004:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 288,
                          "nodeType": "ArrayTypeName",
                          "src": "12004:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11989:38:0"
                  },
                  "returnParameters": {
                    "id": 294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 293,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "12051:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 291,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12051:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 292,
                          "nodeType": "ArrayTypeName",
                          "src": "12051:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12050:18:0"
                  },
                  "scope": 727,
                  "src": "11962:107:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 296,
                    "nodeType": "StructuredDocumentation",
                    "src": "12075:416:0",
                    "text": " @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
                  },
                  "functionSelector": "0e8e3e84",
                  "id": 303,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "manageUserBalance",
                  "nameLocation": "12505:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "mutability": "mutable",
                        "name": "ops",
                        "nameLocation": "12546:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 303,
                        "src": "12523:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.UserBalanceOp[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 298,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 297,
                              "name": "UserBalanceOp",
                              "nameLocations": [
                                "12523:13:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 316,
                              "src": "12523:13:0"
                            },
                            "referencedDeclaration": 316,
                            "src": "12523:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserBalanceOp_$316_storage_ptr",
                              "typeString": "struct IVault.UserBalanceOp"
                            }
                          },
                          "id": 299,
                          "nodeType": "ArrayTypeName",
                          "src": "12523:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_storage_$dyn_storage_ptr",
                            "typeString": "struct IVault.UserBalanceOp[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12522:28:0"
                  },
                  "returnParameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12567:0:0"
                  },
                  "scope": 727,
                  "src": "12496:72:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.UserBalanceOp",
                  "id": 316,
                  "members": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "kind",
                      "nameLocation": "12803:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 316,
                      "src": "12785:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserBalanceOpKind_$321",
                        "typeString": "enum IVault.UserBalanceOpKind"
                      },
                      "typeName": {
                        "id": 305,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 304,
                          "name": "UserBalanceOpKind",
                          "nameLocations": [
                            "12785:17:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 321,
                          "src": "12785:17:0"
                        },
                        "referencedDeclaration": 321,
                        "src": "12785:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserBalanceOpKind_$321",
                          "typeString": "enum IVault.UserBalanceOpKind"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 309,
                      "mutability": "mutable",
                      "name": "asset",
                      "nameLocation": "12824:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 316,
                      "src": "12817:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAsset_$133",
                        "typeString": "contract IAsset"
                      },
                      "typeName": {
                        "id": 308,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 307,
                          "name": "IAsset",
                          "nameLocations": [
                            "12817:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 133,
                          "src": "12817:6:0"
                        },
                        "referencedDeclaration": 133,
                        "src": "12817:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$133",
                          "typeString": "contract IAsset"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 311,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "12847:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 316,
                      "src": "12839:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12839:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 313,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "12871:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 316,
                      "src": "12863:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 312,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12863:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "12903:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 316,
                      "src": "12887:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12887:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "UserBalanceOp",
                  "nameLocation": "12761:13:0",
                  "nodeType": "StructDefinition",
                  "scope": 727,
                  "src": "12754:165:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IVault.UserBalanceOpKind",
                  "id": 321,
                  "members": [
                    {
                      "id": 317,
                      "name": "DEPOSIT_INTERNAL",
                      "nameLocation": "14557:16:0",
                      "nodeType": "EnumValue",
                      "src": "14557:16:0"
                    },
                    {
                      "id": 318,
                      "name": "WITHDRAW_INTERNAL",
                      "nameLocation": "14575:17:0",
                      "nodeType": "EnumValue",
                      "src": "14575:17:0"
                    },
                    {
                      "id": 319,
                      "name": "TRANSFER_INTERNAL",
                      "nameLocation": "14594:17:0",
                      "nodeType": "EnumValue",
                      "src": "14594:17:0"
                    },
                    {
                      "id": 320,
                      "name": "TRANSFER_EXTERNAL",
                      "nameLocation": "14613:17:0",
                      "nodeType": "EnumValue",
                      "src": "14613:17:0"
                    }
                  ],
                  "name": "UserBalanceOpKind",
                  "nameLocation": "14537:17:0",
                  "nodeType": "EnumDefinition",
                  "src": "14532:100:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 322,
                    "nodeType": "StructuredDocumentation",
                    "src": "14638:317:0",
                    "text": " @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."
                  },
                  "eventSelector": "18e1ea4139e68413d7d08aa752e71568e36b2c5bf940893314c2c5b01eaa0c42",
                  "id": 331,
                  "name": "InternalBalanceChanged",
                  "nameLocation": "14966:22:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "15005:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "14989:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14989:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 327,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "15026:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "15011:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$119",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 326,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 325,
                            "name": "IERC20",
                            "nameLocations": [
                              "15011:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 119,
                            "src": "15011:6:0"
                          },
                          "referencedDeclaration": 119,
                          "src": "15011:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$119",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "delta",
                        "nameLocation": "15040:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "15033:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15033:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14988:58:0"
                  },
                  "src": "14960:87:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 332,
                    "nodeType": "StructuredDocumentation",
                    "src": "15053:131:0",
                    "text": " @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."
                  },
                  "eventSelector": "540a1a3f28340caec336c81d8d7b3df139ee5cdc1839a4f283d7ebb7eaae2d5c",
                  "id": 343,
                  "name": "ExternalBalanceTransfer",
                  "nameLocation": "15195:23:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 335,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "15234:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "15219:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$119",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 334,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 333,
                            "name": "IERC20",
                            "nameLocations": [
                              "15219:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 119,
                            "src": "15219:6:0"
                          },
                          "referencedDeclaration": 119,
                          "src": "15219:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$119",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "15257:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "15241:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15241:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "15273:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "15265:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15265:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "15292:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "15284:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15284:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15218:81:0"
                  },
                  "src": "15189:111:0"
                },
                {
                  "canonicalName": "IVault.PoolSpecialization",
                  "id": 347,
                  "members": [
                    {
                      "id": 344,
                      "name": "GENERAL",
                      "nameLocation": "16406:7:0",
                      "nodeType": "EnumValue",
                      "src": "16406:7:0"
                    },
                    {
                      "id": 345,
                      "name": "MINIMAL_SWAP_INFO",
                      "nameLocation": "16415:17:0",
                      "nodeType": "EnumValue",
                      "src": "16415:17:0"
                    },
                    {
                      "id": 346,
                      "name": "TWO_TOKEN",
                      "nameLocation": "16434:9:0",
                      "nodeType": "EnumValue",
                      "src": "16434:9:0"
                    }
                  ],
                  "name": "PoolSpecialization",
                  "nameLocation": "16385:18:0",
                  "nodeType": "EnumDefinition",
                  "src": "16380:65:0"
                },
                {
                  "documentation": {
                    "id": 348,
                    "nodeType": "StructuredDocumentation",
                    "src": "16451:702:0",
                    "text": " @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."
                  },
                  "functionSelector": "09b2760f",
                  "id": 356,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerPool",
                  "nameLocation": "17167:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "specialization",
                        "nameLocation": "17199:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "17180:33:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$347",
                          "typeString": "enum IVault.PoolSpecialization"
                        },
                        "typeName": {
                          "id": 350,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 349,
                            "name": "PoolSpecialization",
                            "nameLocations": [
                              "17180:18:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 347,
                            "src": "17180:18:0"
                          },
                          "referencedDeclaration": 347,
                          "src": "17180:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolSpecialization_$347",
                            "typeString": "enum IVault.PoolSpecialization"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17179:35:0"
                  },
                  "returnParameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "17233:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17233:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17232:9:0"
                  },
                  "scope": 727,
                  "src": "17158:84:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 357,
                    "nodeType": "StructuredDocumentation",
                    "src": "17248:84:0",
                    "text": " @dev Emitted when a Pool is registered by calling `registerPool`."
                  },
                  "eventSelector": "3c13bc30b8e878c53fd2a36b679409c073afd75950be43d8858768e956fbc20e",
                  "id": 366,
                  "name": "PoolRegistered",
                  "nameLocation": "17343:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 359,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "17374:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "17358:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 361,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolAddress",
                        "nameLocation": "17398:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "17382:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17382:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 364,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "specialization",
                        "nameLocation": "17430:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "17411:33:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$347",
                          "typeString": "enum IVault.PoolSpecialization"
                        },
                        "typeName": {
                          "id": 363,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 362,
                            "name": "PoolSpecialization",
                            "nameLocations": [
                              "17411:18:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 347,
                            "src": "17411:18:0"
                          },
                          "referencedDeclaration": 347,
                          "src": "17411:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolSpecialization_$347",
                            "typeString": "enum IVault.PoolSpecialization"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17357:88:0"
                  },
                  "src": "17337:109:0"
                },
                {
                  "documentation": {
                    "id": 367,
                    "nodeType": "StructuredDocumentation",
                    "src": "17452:85:0",
                    "text": " @dev Returns a Pool's contract address and specialization setting."
                  },
                  "functionSelector": "f6c00927",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPool",
                  "nameLocation": "17551:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "17567:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "17559:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17559:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17558:16:0"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "17598:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17598:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "17607:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$347",
                          "typeString": "enum IVault.PoolSpecialization"
                        },
                        "typeName": {
                          "id": 374,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 373,
                            "name": "PoolSpecialization",
                            "nameLocations": [
                              "17607:18:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 347,
                            "src": "17607:18:0"
                          },
                          "referencedDeclaration": 347,
                          "src": "17607:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolSpecialization_$347",
                            "typeString": "enum IVault.PoolSpecialization"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17597:29:0"
                  },
                  "scope": 727,
                  "src": "17542:85:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 378,
                    "nodeType": "StructuredDocumentation",
                    "src": "17633:1422:0",
                    "text": " @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."
                  },
                  "functionSelector": "66a9c7d2",
                  "id": 390,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerTokens",
                  "nameLocation": "19069:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 380,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "19101:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "19093:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "19093:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "19133:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "19117:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 382,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 381,
                              "name": "IERC20",
                              "nameLocations": [
                                "19117:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "19117:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "19117:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 383,
                          "nodeType": "ArrayTypeName",
                          "src": "19117:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "assetManagers",
                        "nameLocation": "19166:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "19149:30:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 385,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19149:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 386,
                          "nodeType": "ArrayTypeName",
                          "src": "19149:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19083:102:0"
                  },
                  "returnParameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19194:0:0"
                  },
                  "scope": 727,
                  "src": "19060:135:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 391,
                    "nodeType": "StructuredDocumentation",
                    "src": "19201:89:0",
                    "text": " @dev Emitted when a Pool registers tokens by calling `registerTokens`."
                  },
                  "eventSelector": "f5847d3f2197b16cdcd2098ec95d0905cd1abdaf415f07bb7cef2bba8ac5dec4",
                  "id": 402,
                  "name": "TokensRegistered",
                  "nameLocation": "19301:16:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "19334:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "19318:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "19318:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "19351:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "19342:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 395,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 394,
                              "name": "IERC20",
                              "nameLocations": [
                                "19342:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "19342:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "19342:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 396,
                          "nodeType": "ArrayTypeName",
                          "src": "19342:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 400,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "assetManagers",
                        "nameLocation": "19369:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "19359:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 398,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19359:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 399,
                          "nodeType": "ArrayTypeName",
                          "src": "19359:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19317:66:0"
                  },
                  "src": "19295:89:0"
                },
                {
                  "documentation": {
                    "id": 403,
                    "nodeType": "StructuredDocumentation",
                    "src": "19390:567:0",
                    "text": " @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."
                  },
                  "functionSelector": "7d3aeb96",
                  "id": 412,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deregisterTokens",
                  "nameLocation": "19971:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "19996:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "19988:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "19988:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 409,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "20020:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "20004:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 407,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 406,
                              "name": "IERC20",
                              "nameLocations": [
                                "20004:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "20004:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "20004:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 408,
                          "nodeType": "ArrayTypeName",
                          "src": "20004:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19987:40:0"
                  },
                  "returnParameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20036:0:0"
                  },
                  "scope": 727,
                  "src": "19962:75:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 413,
                    "nodeType": "StructuredDocumentation",
                    "src": "20043:93:0",
                    "text": " @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."
                  },
                  "eventSelector": "7dcdc6d02ef40c7c1a7046a011b058bd7f988fa14e20a66344f9d4e60657d610",
                  "id": 421,
                  "name": "TokensDeregistered",
                  "nameLocation": "20147:18:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 415,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "20182:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 421,
                        "src": "20166:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "20166:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "20199:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 421,
                        "src": "20190:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 417,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 416,
                              "name": "IERC20",
                              "nameLocations": [
                                "20190:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "20190:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "20190:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 418,
                          "nodeType": "ArrayTypeName",
                          "src": "20190:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20165:41:0"
                  },
                  "src": "20141:66:0"
                },
                {
                  "documentation": {
                    "id": 422,
                    "nodeType": "StructuredDocumentation",
                    "src": "20213:1043:0",
                    "text": " @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."
                  },
                  "functionSelector": "b05f8e48",
                  "id": 438,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPoolTokenInfo",
                  "nameLocation": "21270:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "21295:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "21287:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "21287:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 427,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "21310:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "21303:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$119",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 426,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 425,
                            "name": "IERC20",
                            "nameLocations": [
                              "21303:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 119,
                            "src": "21303:6:0"
                          },
                          "referencedDeclaration": 119,
                          "src": "21303:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$119",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21286:30:0"
                  },
                  "returnParameters": {
                    "id": 437,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "cash",
                        "nameLocation": "21385:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "21377:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21377:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "managed",
                        "nameLocation": "21411:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "21403:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21403:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "lastChangeBlock",
                        "nameLocation": "21440:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "21432:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21432:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "assetManager",
                        "nameLocation": "21477:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "21469:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21469:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21363:136:0"
                  },
                  "scope": 727,
                  "src": "21261:239:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 439,
                    "nodeType": "StructuredDocumentation",
                    "src": "21506:828:0",
                    "text": " @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."
                  },
                  "functionSelector": "f94d4668",
                  "id": 453,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPoolTokens",
                  "nameLocation": "22348:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "22370:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "22362:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "22362:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22361:16:0"
                  },
                  "returnParameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "22454:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "22438:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 444,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 443,
                              "name": "IERC20",
                              "nameLocations": [
                                "22438:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "22438:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "22438:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 445,
                          "nodeType": "ArrayTypeName",
                          "src": "22438:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 449,
                        "mutability": "mutable",
                        "name": "balances",
                        "nameLocation": "22491:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "22474:25:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 447,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "22474:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 448,
                          "nodeType": "ArrayTypeName",
                          "src": "22474:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "lastChangeBlock",
                        "nameLocation": "22521:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "22513:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22513:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22424:122:0"
                  },
                  "scope": 727,
                  "src": "22339:208:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 454,
                    "nodeType": "StructuredDocumentation",
                    "src": "22553:2304:0",
                    "text": " @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."
                  },
                  "functionSelector": "b95cac28",
                  "id": 466,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joinPool",
                  "nameLocation": "24871:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "24897:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "24889:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "24889:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "24921:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "24913:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24913:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "24945:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "24937:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24937:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "request",
                        "nameLocation": "24987:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "24964:30:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JoinPoolRequest_$478_memory_ptr",
                          "typeString": "struct IVault.JoinPoolRequest"
                        },
                        "typeName": {
                          "id": 462,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 461,
                            "name": "JoinPoolRequest",
                            "nameLocations": [
                              "24964:15:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 478,
                            "src": "24964:15:0"
                          },
                          "referencedDeclaration": 478,
                          "src": "24964:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JoinPoolRequest_$478_storage_ptr",
                            "typeString": "struct IVault.JoinPoolRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24879:121:0"
                  },
                  "returnParameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "25017:0:0"
                  },
                  "scope": 727,
                  "src": "24862:156:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.JoinPoolRequest",
                  "id": 478,
                  "members": [
                    {
                      "constant": false,
                      "id": 470,
                      "mutability": "mutable",
                      "name": "assets",
                      "nameLocation": "25066:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "25057:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IAsset_$133_$dyn_storage_ptr",
                        "typeString": "contract IAsset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 468,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 467,
                            "name": "IAsset",
                            "nameLocations": [
                              "25057:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 133,
                            "src": "25057:6:0"
                          },
                          "referencedDeclaration": 133,
                          "src": "25057:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$133",
                            "typeString": "contract IAsset"
                          }
                        },
                        "id": 469,
                        "nodeType": "ArrayTypeName",
                        "src": "25057:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$133_$dyn_storage_ptr",
                          "typeString": "contract IAsset[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "maxAmountsIn",
                      "nameLocation": "25092:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "25082:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25082:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 472,
                        "nodeType": "ArrayTypeName",
                        "src": "25082:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 475,
                      "mutability": "mutable",
                      "name": "userData",
                      "nameLocation": "25120:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "25114:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 474,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "25114:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 477,
                      "mutability": "mutable",
                      "name": "fromInternalBalance",
                      "nameLocation": "25143:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "25138:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 476,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "25138:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "JoinPoolRequest",
                  "nameLocation": "25031:15:0",
                  "nodeType": "StructDefinition",
                  "scope": 727,
                  "src": "25024:145:0",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 479,
                    "nodeType": "StructuredDocumentation",
                    "src": "25175:2489:0",
                    "text": " @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."
                  },
                  "functionSelector": "8bdb3913",
                  "id": 491,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exitPool",
                  "nameLocation": "27678:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "27704:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "27696:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "27696:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "27728:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "27720:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27720:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "27760:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "27744:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27744:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "request",
                        "nameLocation": "27802:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "27779:30:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExitPoolRequest_$503_memory_ptr",
                          "typeString": "struct IVault.ExitPoolRequest"
                        },
                        "typeName": {
                          "id": 487,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 486,
                            "name": "ExitPoolRequest",
                            "nameLocations": [
                              "27779:15:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 503,
                            "src": "27779:15:0"
                          },
                          "referencedDeclaration": 503,
                          "src": "27779:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExitPoolRequest_$503_storage_ptr",
                            "typeString": "struct IVault.ExitPoolRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "27686:129:0"
                  },
                  "returnParameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "27824:0:0"
                  },
                  "scope": 727,
                  "src": "27669:156:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.ExitPoolRequest",
                  "id": 503,
                  "members": [
                    {
                      "constant": false,
                      "id": 495,
                      "mutability": "mutable",
                      "name": "assets",
                      "nameLocation": "27873:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "27864:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IAsset_$133_$dyn_storage_ptr",
                        "typeString": "contract IAsset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 493,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 492,
                            "name": "IAsset",
                            "nameLocations": [
                              "27864:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 133,
                            "src": "27864:6:0"
                          },
                          "referencedDeclaration": 133,
                          "src": "27864:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$133",
                            "typeString": "contract IAsset"
                          }
                        },
                        "id": 494,
                        "nodeType": "ArrayTypeName",
                        "src": "27864:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$133_$dyn_storage_ptr",
                          "typeString": "contract IAsset[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 498,
                      "mutability": "mutable",
                      "name": "minAmountsOut",
                      "nameLocation": "27899:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "27889:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27889:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 497,
                        "nodeType": "ArrayTypeName",
                        "src": "27889:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 500,
                      "mutability": "mutable",
                      "name": "userData",
                      "nameLocation": "27928:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "27922:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 499,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "27922:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 502,
                      "mutability": "mutable",
                      "name": "toInternalBalance",
                      "nameLocation": "27951:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "27946:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 501,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "27946:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExitPoolRequest",
                  "nameLocation": "27838:15:0",
                  "nodeType": "StructDefinition",
                  "scope": 727,
                  "src": "27831:144:0",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 504,
                    "nodeType": "StructuredDocumentation",
                    "src": "27981:116:0",
                    "text": " @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."
                  },
                  "eventSelector": "e5ce249087ce04f05a957192435400fd97868dba0e6a4b4c049abf8af80dae78",
                  "id": 520,
                  "name": "PoolBalanceChanged",
                  "nameLocation": "28108:18:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 506,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "28152:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "28136:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "28136:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 508,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "liquidityProvider",
                        "nameLocation": "28184:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "28168:33:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28168:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "28220:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "28211:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 510,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 509,
                              "name": "IERC20",
                              "nameLocations": [
                                "28211:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "28211:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "28211:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 511,
                          "nodeType": "ArrayTypeName",
                          "src": "28211:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 515,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "deltas",
                        "nameLocation": "28245:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "28236:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 513,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "28236:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 514,
                          "nodeType": "ArrayTypeName",
                          "src": "28236:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 518,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "protocolFeeAmounts",
                        "nameLocation": "28271:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "28261:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 516,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "28261:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 517,
                          "nodeType": "ArrayTypeName",
                          "src": "28261:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28126:169:0"
                  },
                  "src": "28102:194:0"
                },
                {
                  "canonicalName": "IVault.PoolBalanceChangeKind",
                  "id": 523,
                  "members": [
                    {
                      "id": 521,
                      "name": "JOIN",
                      "nameLocation": "28331:4:0",
                      "nodeType": "EnumValue",
                      "src": "28331:4:0"
                    },
                    {
                      "id": 522,
                      "name": "EXIT",
                      "nameLocation": "28337:4:0",
                      "nodeType": "EnumValue",
                      "src": "28337:4:0"
                    }
                  ],
                  "name": "PoolBalanceChangeKind",
                  "nameLocation": "28307:21:0",
                  "nodeType": "EnumDefinition",
                  "src": "28302:41:0"
                },
                {
                  "canonicalName": "IVault.SwapKind",
                  "id": 526,
                  "members": [
                    {
                      "id": 524,
                      "name": "GIVEN_IN",
                      "nameLocation": "31944:8:0",
                      "nodeType": "EnumValue",
                      "src": "31944:8:0"
                    },
                    {
                      "id": 525,
                      "name": "GIVEN_OUT",
                      "nameLocation": "31954:9:0",
                      "nodeType": "EnumValue",
                      "src": "31954:9:0"
                    }
                  ],
                  "name": "SwapKind",
                  "nameLocation": "31933:8:0",
                  "nodeType": "EnumDefinition",
                  "src": "31928:37:0"
                },
                {
                  "documentation": {
                    "id": 527,
                    "nodeType": "StructuredDocumentation",
                    "src": "31971:587:0",
                    "text": " @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."
                  },
                  "functionSelector": "52bbbe29",
                  "id": 542,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nameLocation": "32572:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "singleSwap",
                        "nameLocation": "32604:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "32586:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleSwap_$558_memory_ptr",
                          "typeString": "struct IVault.SingleSwap"
                        },
                        "typeName": {
                          "id": 529,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 528,
                            "name": "SingleSwap",
                            "nameLocations": [
                              "32586:10:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 558,
                            "src": "32586:10:0"
                          },
                          "referencedDeclaration": 558,
                          "src": "32586:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleSwap_$558_storage_ptr",
                            "typeString": "struct IVault.SingleSwap"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 533,
                        "mutability": "mutable",
                        "name": "funds",
                        "nameLocation": "32646:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "32624:27:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundManagement_$619_memory_ptr",
                          "typeString": "struct IVault.FundManagement"
                        },
                        "typeName": {
                          "id": 532,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 531,
                            "name": "FundManagement",
                            "nameLocations": [
                              "32624:14:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 619,
                            "src": "32624:14:0"
                          },
                          "referencedDeclaration": 619,
                          "src": "32624:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FundManagement_$619_storage_ptr",
                            "typeString": "struct IVault.FundManagement"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "32669:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "32661:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32661:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 537,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "32692:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "32684:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 536,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32684:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32576:130:0"
                  },
                  "returnParameters": {
                    "id": 541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 540,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "32733:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32733:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32732:9:0"
                  },
                  "scope": 727,
                  "src": "32563:179:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.SingleSwap",
                  "id": 558,
                  "members": [
                    {
                      "constant": false,
                      "id": 544,
                      "mutability": "mutable",
                      "name": "poolId",
                      "nameLocation": "33334:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "33326:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 543,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "33326:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 547,
                      "mutability": "mutable",
                      "name": "kind",
                      "nameLocation": "33359:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "33350:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SwapKind_$526",
                        "typeString": "enum IVault.SwapKind"
                      },
                      "typeName": {
                        "id": 546,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 545,
                          "name": "SwapKind",
                          "nameLocations": [
                            "33350:8:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 526,
                          "src": "33350:8:0"
                        },
                        "referencedDeclaration": 526,
                        "src": "33350:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SwapKind_$526",
                          "typeString": "enum IVault.SwapKind"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 550,
                      "mutability": "mutable",
                      "name": "assetIn",
                      "nameLocation": "33380:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "33373:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAsset_$133",
                        "typeString": "contract IAsset"
                      },
                      "typeName": {
                        "id": 549,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 548,
                          "name": "IAsset",
                          "nameLocations": [
                            "33373:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 133,
                          "src": "33373:6:0"
                        },
                        "referencedDeclaration": 133,
                        "src": "33373:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$133",
                          "typeString": "contract IAsset"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 553,
                      "mutability": "mutable",
                      "name": "assetOut",
                      "nameLocation": "33404:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "33397:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAsset_$133",
                        "typeString": "contract IAsset"
                      },
                      "typeName": {
                        "id": 552,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 551,
                          "name": "IAsset",
                          "nameLocations": [
                            "33397:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 133,
                          "src": "33397:6:0"
                        },
                        "referencedDeclaration": 133,
                        "src": "33397:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$133",
                          "typeString": "contract IAsset"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 555,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "33430:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "33422:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33422:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 557,
                      "mutability": "mutable",
                      "name": "userData",
                      "nameLocation": "33452:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "33446:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 556,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "33446:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "SingleSwap",
                  "nameLocation": "33305:10:0",
                  "nodeType": "StructDefinition",
                  "scope": 727,
                  "src": "33298:169:0",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 559,
                    "nodeType": "StructuredDocumentation",
                    "src": "33473:1980:0",
                    "text": " @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."
                  },
                  "functionSelector": "945bcec9",
                  "id": 584,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "batchSwap",
                  "nameLocation": "35467:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 562,
                        "mutability": "mutable",
                        "name": "kind",
                        "nameLocation": "35495:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "35486:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SwapKind_$526",
                          "typeString": "enum IVault.SwapKind"
                        },
                        "typeName": {
                          "id": 561,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 560,
                            "name": "SwapKind",
                            "nameLocations": [
                              "35486:8:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 526,
                            "src": "35486:8:0"
                          },
                          "referencedDeclaration": 526,
                          "src": "35486:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SwapKind_$526",
                            "typeString": "enum IVault.SwapKind"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 566,
                        "mutability": "mutable",
                        "name": "swaps",
                        "nameLocation": "35532:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "35509:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$595_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.BatchSwapStep[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 564,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 563,
                              "name": "BatchSwapStep",
                              "nameLocations": [
                                "35509:13:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 595,
                              "src": "35509:13:0"
                            },
                            "referencedDeclaration": 595,
                            "src": "35509:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchSwapStep_$595_storage_ptr",
                              "typeString": "struct IVault.BatchSwapStep"
                            }
                          },
                          "id": 565,
                          "nodeType": "ArrayTypeName",
                          "src": "35509:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$595_storage_$dyn_storage_ptr",
                            "typeString": "struct IVault.BatchSwapStep[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 570,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "35563:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "35547:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$133_$dyn_memory_ptr",
                          "typeString": "contract IAsset[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 568,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 567,
                              "name": "IAsset",
                              "nameLocations": [
                                "35547:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 133,
                              "src": "35547:6:0"
                            },
                            "referencedDeclaration": 133,
                            "src": "35547:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$133",
                              "typeString": "contract IAsset"
                            }
                          },
                          "id": 569,
                          "nodeType": "ArrayTypeName",
                          "src": "35547:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAsset_$133_$dyn_storage_ptr",
                            "typeString": "contract IAsset[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 573,
                        "mutability": "mutable",
                        "name": "funds",
                        "nameLocation": "35601:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "35579:27:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundManagement_$619_memory_ptr",
                          "typeString": "struct IVault.FundManagement"
                        },
                        "typeName": {
                          "id": 572,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 571,
                            "name": "FundManagement",
                            "nameLocations": [
                              "35579:14:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 619,
                            "src": "35579:14:0"
                          },
                          "referencedDeclaration": 619,
                          "src": "35579:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FundManagement_$619_storage_ptr",
                            "typeString": "struct IVault.FundManagement"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 576,
                        "mutability": "mutable",
                        "name": "limits",
                        "nameLocation": "35632:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "35616:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 574,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "35616:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 575,
                          "nodeType": "ArrayTypeName",
                          "src": "35616:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "35656:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "35648:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "35648:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "35476:194:0"
                  },
                  "returnParameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "35697:15:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 580,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "35697:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 581,
                          "nodeType": "ArrayTypeName",
                          "src": "35697:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "35696:17:0"
                  },
                  "scope": 727,
                  "src": "35458:256:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.BatchSwapStep",
                  "id": 595,
                  "members": [
                    {
                      "constant": false,
                      "id": 586,
                      "mutability": "mutable",
                      "name": "poolId",
                      "nameLocation": "36315:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "36307:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 585,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "36307:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 588,
                      "mutability": "mutable",
                      "name": "assetInIndex",
                      "nameLocation": "36339:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "36331:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 587,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36331:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 590,
                      "mutability": "mutable",
                      "name": "assetOutIndex",
                      "nameLocation": "36369:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "36361:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 589,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36361:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 592,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "36400:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "36392:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 591,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36392:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 594,
                      "mutability": "mutable",
                      "name": "userData",
                      "nameLocation": "36422:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "36416:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 593,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "36416:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BatchSwapStep",
                  "nameLocation": "36283:13:0",
                  "nodeType": "StructDefinition",
                  "scope": 727,
                  "src": "36276:161:0",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 596,
                    "nodeType": "StructuredDocumentation",
                    "src": "36443:92:0",
                    "text": " @dev Emitted for each individual swap performed by `swap` or `batchSwap`."
                  },
                  "eventSelector": "2170c741c41531aec20e7c107c24eecfdd15e69c9bb0a8dd37b1840b9e0b207b",
                  "id": 610,
                  "name": "Swap",
                  "nameLocation": "36546:4:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "36576:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "36560:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "36560:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "36607:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "36592:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$119",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 600,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 599,
                            "name": "IERC20",
                            "nameLocations": [
                              "36592:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 119,
                            "src": "36592:6:0"
                          },
                          "referencedDeclaration": 119,
                          "src": "36592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$119",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 604,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "36639:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "36624:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$119",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 603,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 602,
                            "name": "IERC20",
                            "nameLocations": [
                              "36624:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 119,
                            "src": "36624:6:0"
                          },
                          "referencedDeclaration": 119,
                          "src": "36624:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$119",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 606,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "36665:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "36657:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "36657:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 608,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "36691:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "36683:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "36683:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "36550:156:0"
                  },
                  "src": "36540:167:0"
                },
                {
                  "canonicalName": "IVault.FundManagement",
                  "id": 619,
                  "members": [
                    {
                      "constant": false,
                      "id": 612,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "37678:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "37670:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 611,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "37670:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 614,
                      "mutability": "mutable",
                      "name": "fromInternalBalance",
                      "nameLocation": "37699:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "37694:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 613,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "37694:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 616,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "37744:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "37728:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 615,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "37728:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 618,
                      "mutability": "mutable",
                      "name": "toInternalBalance",
                      "nameLocation": "37768:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "37763:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 617,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "37763:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FundManagement",
                  "nameLocation": "37645:14:0",
                  "nodeType": "StructDefinition",
                  "scope": 727,
                  "src": "37638:154:0",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 620,
                    "nodeType": "StructuredDocumentation",
                    "src": "37798:1027:0",
                    "text": " @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."
                  },
                  "functionSelector": "f84d066e",
                  "id": 640,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "queryBatchSwap",
                  "nameLocation": "38839:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 635,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "kind",
                        "nameLocation": "38872:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "38863:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SwapKind_$526",
                          "typeString": "enum IVault.SwapKind"
                        },
                        "typeName": {
                          "id": 622,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 621,
                            "name": "SwapKind",
                            "nameLocations": [
                              "38863:8:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 526,
                            "src": "38863:8:0"
                          },
                          "referencedDeclaration": 526,
                          "src": "38863:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SwapKind_$526",
                            "typeString": "enum IVault.SwapKind"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "swaps",
                        "nameLocation": "38909:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "38886:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$595_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.BatchSwapStep[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 625,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 624,
                              "name": "BatchSwapStep",
                              "nameLocations": [
                                "38886:13:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 595,
                              "src": "38886:13:0"
                            },
                            "referencedDeclaration": 595,
                            "src": "38886:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchSwapStep_$595_storage_ptr",
                              "typeString": "struct IVault.BatchSwapStep"
                            }
                          },
                          "id": 626,
                          "nodeType": "ArrayTypeName",
                          "src": "38886:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$595_storage_$dyn_storage_ptr",
                            "typeString": "struct IVault.BatchSwapStep[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 631,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "38940:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "38924:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$133_$dyn_memory_ptr",
                          "typeString": "contract IAsset[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 629,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 628,
                              "name": "IAsset",
                              "nameLocations": [
                                "38924:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 133,
                              "src": "38924:6:0"
                            },
                            "referencedDeclaration": 133,
                            "src": "38924:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$133",
                              "typeString": "contract IAsset"
                            }
                          },
                          "id": 630,
                          "nodeType": "ArrayTypeName",
                          "src": "38924:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAsset_$133_$dyn_storage_ptr",
                            "typeString": "contract IAsset[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 634,
                        "mutability": "mutable",
                        "name": "funds",
                        "nameLocation": "38978:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "38956:27:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundManagement_$619_memory_ptr",
                          "typeString": "struct IVault.FundManagement"
                        },
                        "typeName": {
                          "id": 633,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 632,
                            "name": "FundManagement",
                            "nameLocations": [
                              "38956:14:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 619,
                            "src": "38956:14:0"
                          },
                          "referencedDeclaration": 619,
                          "src": "38956:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FundManagement_$619_storage_ptr",
                            "typeString": "struct IVault.FundManagement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "38853:136:0"
                  },
                  "returnParameters": {
                    "id": 639,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 638,
                        "mutability": "mutable",
                        "name": "assetDeltas",
                        "nameLocation": "39024:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "39008:27:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 636,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "39008:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 637,
                          "nodeType": "ArrayTypeName",
                          "src": "39008:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "39007:29:0"
                  },
                  "scope": 727,
                  "src": "38830:207:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 641,
                    "nodeType": "StructuredDocumentation",
                    "src": "39063:604:0",
                    "text": " @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."
                  },
                  "functionSelector": "5c38449e",
                  "id": 656,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "flashLoan",
                  "nameLocation": "39681:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "39720:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "39700:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFlashLoanRecipient_$150",
                          "typeString": "contract IFlashLoanRecipient"
                        },
                        "typeName": {
                          "id": 643,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 642,
                            "name": "IFlashLoanRecipient",
                            "nameLocations": [
                              "39700:19:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 150,
                            "src": "39700:19:0"
                          },
                          "referencedDeclaration": 150,
                          "src": "39700:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFlashLoanRecipient_$150",
                            "typeString": "contract IFlashLoanRecipient"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "39755:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "39739:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 646,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 645,
                              "name": "IERC20",
                              "nameLocations": [
                                "39739:6:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 119,
                              "src": "39739:6:0"
                            },
                            "referencedDeclaration": 119,
                            "src": "39739:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$119",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 647,
                          "nodeType": "ArrayTypeName",
                          "src": "39739:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$119_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 651,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "39788:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "39771:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 649,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "39771:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 650,
                          "nodeType": "ArrayTypeName",
                          "src": "39771:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "userData",
                        "nameLocation": "39818:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "39805:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "39805:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "39690:142:0"
                  },
                  "returnParameters": {
                    "id": 655,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "39841:0:0"
                  },
                  "scope": 727,
                  "src": "39672:170:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 657,
                    "nodeType": "StructuredDocumentation",
                    "src": "39848:88:0",
                    "text": " @dev Emitted for each individual flash loan performed by `flashLoan`."
                  },
                  "eventSelector": "0d7d75e01ab95780d3cd1c8ec0dd6c2ce19e3a20427eec8bf53283b6fb8e95f0",
                  "id": 669,
                  "name": "FlashLoan",
                  "nameLocation": "39947:9:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 668,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "39985:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "39957:37:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFlashLoanRecipient_$150",
                          "typeString": "contract IFlashLoanRecipient"
                        },
                        "typeName": {
                          "id": 659,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 658,
                            "name": "IFlashLoanRecipient",
                            "nameLocations": [
                              "39957:19:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 150,
                            "src": "39957:19:0"
                          },
                          "referencedDeclaration": 150,
                          "src": "39957:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFlashLoanRecipient_$150",
                            "typeString": "contract IFlashLoanRecipient"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "40011:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "39996:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$119",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 662,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 661,
                            "name": "IERC20",
                            "nameLocations": [
                              "39996:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 119,
                            "src": "39996:6:0"
                          },
                          "referencedDeclaration": 119,
                          "src": "39996:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$119",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 665,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "40026:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "40018:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "40018:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 667,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeAmount",
                        "nameLocation": "40042:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "40034:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "40034:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "39956:96:0"
                  },
                  "src": "39941:112:0"
                },
                {
                  "documentation": {
                    "id": 670,
                    "nodeType": "StructuredDocumentation",
                    "src": "41049:434:0",
                    "text": " @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
                  },
                  "functionSelector": "e6c46092",
                  "id": 677,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "managePoolBalance",
                  "nameLocation": "41497:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "ops",
                        "nameLocation": "41538:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 677,
                        "src": "41515:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolBalanceOp_$688_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.PoolBalanceOp[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 672,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 671,
                              "name": "PoolBalanceOp",
                              "nameLocations": [
                                "41515:13:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 688,
                              "src": "41515:13:0"
                            },
                            "referencedDeclaration": 688,
                            "src": "41515:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolBalanceOp_$688_storage_ptr",
                              "typeString": "struct IVault.PoolBalanceOp"
                            }
                          },
                          "id": 673,
                          "nodeType": "ArrayTypeName",
                          "src": "41515:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolBalanceOp_$688_storage_$dyn_storage_ptr",
                            "typeString": "struct IVault.PoolBalanceOp[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "41514:28:0"
                  },
                  "returnParameters": {
                    "id": 676,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "41551:0:0"
                  },
                  "scope": 727,
                  "src": "41488:64:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.PoolBalanceOp",
                  "id": 688,
                  "members": [
                    {
                      "constant": false,
                      "id": 680,
                      "mutability": "mutable",
                      "name": "kind",
                      "nameLocation": "41607:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 688,
                      "src": "41589:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolBalanceOpKind_$692",
                        "typeString": "enum IVault.PoolBalanceOpKind"
                      },
                      "typeName": {
                        "id": 679,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 678,
                          "name": "PoolBalanceOpKind",
                          "nameLocations": [
                            "41589:17:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 692,
                          "src": "41589:17:0"
                        },
                        "referencedDeclaration": 692,
                        "src": "41589:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolBalanceOpKind_$692",
                          "typeString": "enum IVault.PoolBalanceOpKind"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 682,
                      "mutability": "mutable",
                      "name": "poolId",
                      "nameLocation": "41629:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 688,
                      "src": "41621:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 681,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "41621:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 685,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "41652:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 688,
                      "src": "41645:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$119",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 684,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 683,
                          "name": "IERC20",
                          "nameLocations": [
                            "41645:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 119,
                          "src": "41645:6:0"
                        },
                        "referencedDeclaration": 119,
                        "src": "41645:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$119",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 687,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "41675:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 688,
                      "src": "41667:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 686,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "41667:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolBalanceOp",
                  "nameLocation": "41565:13:0",
                  "nodeType": "StructDefinition",
                  "scope": 727,
                  "src": "41558:130:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IVault.PoolBalanceOpKind",
                  "id": 692,
                  "members": [
                    {
                      "id": 689,
                      "name": "WITHDRAW",
                      "nameLocation": "42210:8:0",
                      "nodeType": "EnumValue",
                      "src": "42210:8:0"
                    },
                    {
                      "id": 690,
                      "name": "DEPOSIT",
                      "nameLocation": "42220:7:0",
                      "nodeType": "EnumValue",
                      "src": "42220:7:0"
                    },
                    {
                      "id": 691,
                      "name": "UPDATE",
                      "nameLocation": "42229:6:0",
                      "nodeType": "EnumValue",
                      "src": "42229:6:0"
                    }
                  ],
                  "name": "PoolBalanceOpKind",
                  "nameLocation": "42190:17:0",
                  "nodeType": "EnumDefinition",
                  "src": "42185:52:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 693,
                    "nodeType": "StructuredDocumentation",
                    "src": "42243:109:0",
                    "text": " @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."
                  },
                  "eventSelector": "6edcaf6241105b4c94c2efdbf3a6b12458eb3d07be3a0e81d24b13c44045fe7a",
                  "id": 706,
                  "name": "PoolBalanceManaged",
                  "nameLocation": "42363:18:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 695,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nameLocation": "42407:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "42391:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "42391:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "assetManager",
                        "nameLocation": "42439:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "42423:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "42423:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 700,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "42476:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "42461:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$119",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 699,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 698,
                            "name": "IERC20",
                            "nameLocations": [
                              "42461:6:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 119,
                            "src": "42461:6:0"
                          },
                          "referencedDeclaration": 119,
                          "src": "42461:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$119",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 702,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "cashDelta",
                        "nameLocation": "42498:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "42491:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "42491:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 704,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "managedDelta",
                        "nameLocation": "42524:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "42517:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "42517:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "42381:161:0"
                  },
                  "src": "42357:186:0"
                },
                {
                  "documentation": {
                    "id": 707,
                    "nodeType": "StructuredDocumentation",
                    "src": "43420:64:0",
                    "text": " @dev Returns the current protocol fee module."
                  },
                  "functionSelector": "d2946c2b",
                  "id": 713,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProtocolFeesCollector",
                  "nameLocation": "43498:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "43522:2:0"
                  },
                  "returnParameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 711,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "43548:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IProtocolFeesCollector_$226",
                          "typeString": "contract IProtocolFeesCollector"
                        },
                        "typeName": {
                          "id": 710,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 709,
                            "name": "IProtocolFeesCollector",
                            "nameLocations": [
                              "43548:22:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 226,
                            "src": "43548:22:0"
                          },
                          "referencedDeclaration": 226,
                          "src": "43548:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IProtocolFeesCollector_$226",
                            "typeString": "contract IProtocolFeesCollector"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "43547:24:0"
                  },
                  "scope": 727,
                  "src": "43489:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 714,
                    "nodeType": "StructuredDocumentation",
                    "src": "43578:635:0",
                    "text": " @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."
                  },
                  "functionSelector": "16c38b3c",
                  "id": 719,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setPaused",
                  "nameLocation": "44227:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 717,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "paused",
                        "nameLocation": "44242:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 719,
                        "src": "44237:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "44237:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "44236:13:0"
                  },
                  "returnParameters": {
                    "id": 718,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "44258:0:0"
                  },
                  "scope": 727,
                  "src": "44218:41:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 720,
                    "nodeType": "StructuredDocumentation",
                    "src": "44265:58:0",
                    "text": " @dev Returns the Vault's WETH instance."
                  },
                  "functionSelector": "ad5c4648",
                  "id": 726,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WETH",
                  "nameLocation": "44337:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "44341:2:0"
                  },
                  "returnParameters": {
                    "id": 725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 724,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 726,
                        "src": "44367:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$131",
                          "typeString": "contract IWETH"
                        },
                        "typeName": {
                          "id": 723,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 722,
                            "name": "IWETH",
                            "nameLocations": [
                              "44367:5:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 131,
                            "src": "44367:5:0"
                          },
                          "referencedDeclaration": 131,
                          "src": "44367:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$131",
                            "typeString": "contract IWETH"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "44366:7:0"
                  },
                  "scope": 727,
                  "src": "44328:46:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "7278:37155:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IOracleValidate",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 732,
              "linearizedBaseContracts": [
                732
              ],
              "name": "IOracleValidate",
              "nameLocation": "44469:15:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 728,
                    "nodeType": "StructuredDocumentation",
                    "src": "44489:42:0",
                    "text": "@notice Check the oracle (re-entrancy)"
                  },
                  "functionSelector": "919840ad",
                  "id": 731,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "check",
                  "nameLocation": "44543:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "44548:2:0"
                  },
                  "returnParameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "44559:0:0"
                  },
                  "scope": 732,
                  "src": "44534:26:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "44459:103:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IOracle",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 755,
              "linearizedBaseContracts": [
                755
              ],
              "name": "IOracle",
              "nameLocation": "44592:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 733,
                    "nodeType": "StructuredDocumentation",
                    "src": "44604:185:0",
                    "text": "@notice Get the latest price.\n @return success if no valid (recent) rate is available, return false else true.\n @return rate The rate of the requested asset / pair / pool."
                  },
                  "functionSelector": "6d4ce63c",
                  "id": 740,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "get",
                  "nameLocation": "44801:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 734,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "44804:2:0"
                  },
                  "returnParameters": {
                    "id": 739,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 736,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "44830:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 740,
                        "src": "44825:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "44825:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 738,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "44847:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 740,
                        "src": "44839:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "44839:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "44824:28:0"
                  },
                  "scope": 755,
                  "src": "44792:61:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 741,
                    "nodeType": "StructuredDocumentation",
                    "src": "44857:211:0",
                    "text": "@notice Check the last price without any state changes.\n @return success if no valid (recent) rate is available, return false else true.\n @return rate The rate of the requested asset / pair / pool."
                  },
                  "functionSelector": "59e02dd7",
                  "id": 748,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "peek",
                  "nameLocation": "45080:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 742,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "45084:2:0"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 744,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "45115:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 748,
                        "src": "45110:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 743,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "45110:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "45131:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 748,
                        "src": "45124:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45124:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45109:27:0"
                  },
                  "scope": 755,
                  "src": "45071:66:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 749,
                    "nodeType": "StructuredDocumentation",
                    "src": "45141:191:0",
                    "text": "@notice Check the current spot price without any state changes. For oracles like TWAP this will be different from peek().\n @return rate The rate of the requested asset / pair / pool."
                  },
                  "functionSelector": "50d25bcd",
                  "id": 754,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestAnswer",
                  "nameLocation": "45344:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 750,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "45356:2:0"
                  },
                  "returnParameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 752,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "45389:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "45382:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45382:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45381:13:0"
                  },
                  "scope": 755,
                  "src": "45335:60:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "44582:815:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IChainlinkAggregator",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 817,
              "linearizedBaseContracts": [
                817
              ],
              "name": "IChainlinkAggregator",
              "nameLocation": "45438:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 760,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "45472:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "45480:2:0"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "45506:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "45506:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45505:7:0"
                  },
                  "scope": 817,
                  "src": "45463:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "50d25bcd",
                  "id": 765,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestAnswer",
                  "nameLocation": "45526:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "45538:2:0"
                  },
                  "returnParameters": {
                    "id": 764,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 763,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 765,
                        "src": "45564:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45564:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45563:8:0"
                  },
                  "scope": 817,
                  "src": "45517:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8205bf6a",
                  "id": 770,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestTimestamp",
                  "nameLocation": "45585:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 766,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "45600:2:0"
                  },
                  "returnParameters": {
                    "id": 769,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 768,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 770,
                        "src": "45626:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 767,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45626:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45625:9:0"
                  },
                  "scope": 817,
                  "src": "45576:59:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "668a0f02",
                  "id": 775,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRound",
                  "nameLocation": "45648:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "45659:2:0"
                  },
                  "returnParameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 773,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "45685:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45685:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45684:9:0"
                  },
                  "scope": 817,
                  "src": "45639:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b5ab58dc",
                  "id": 782,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAnswer",
                  "nameLocation": "45707:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 778,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 777,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "45725:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "45717:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 776,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45717:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45716:17:0"
                  },
                  "returnParameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "45757:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45757:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45756:8:0"
                  },
                  "scope": 817,
                  "src": "45698:67:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b633620c",
                  "id": 789,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimestamp",
                  "nameLocation": "45778:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 785,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 784,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "45799:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 789,
                        "src": "45791:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 783,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45791:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45790:17:0"
                  },
                  "returnParameters": {
                    "id": 788,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 787,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 789,
                        "src": "45831:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 786,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45831:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45830:9:0"
                  },
                  "scope": 817,
                  "src": "45769:71:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "feaf968c",
                  "id": 802,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "45853:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "45868:2:0"
                  },
                  "returnParameters": {
                    "id": 801,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 792,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "45920:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "45913:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 791,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "45913:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "45942:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "45935:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45935:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "45964:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "45956:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 795,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45956:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 798,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "45989:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "45981:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45981:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 800,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "46013:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "46006:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 799,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "46006:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "45905:129:0"
                  },
                  "scope": 817,
                  "src": "45844:191:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "eventSelector": "0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f",
                  "id": 810,
                  "name": "AnswerUpdated",
                  "nameLocation": "46045:13:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 804,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "current",
                        "nameLocation": "46074:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "46059:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "46059:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 806,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "46099:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "46083:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "46083:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 808,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "46116:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "46108:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 807,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "46108:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "46058:68:0"
                  },
                  "src": "46039:88:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c3c45d1924f55369653f407ee9f095309d1e687b2c0011b1f709042d4f457e17",
                  "id": 816,
                  "name": "NewRound",
                  "nameLocation": "46136:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 815,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 812,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "46161:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 816,
                        "src": "46145:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "46145:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 814,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "startedBy",
                        "nameLocation": "46186:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 816,
                        "src": "46170:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "46170:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "46144:52:0"
                  },
                  "src": "46130:67:0"
                }
              ],
              "scope": 1443,
              "src": "45428:771:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBalancerStablePool",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 823,
              "linearizedBaseContracts": [
                823
              ],
              "name": "IBalancerStablePool",
              "nameLocation": "46246:19:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "679aefce",
                  "id": 822,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "46279:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 818,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "46286:2:0"
                  },
                  "returnParameters": {
                    "id": 821,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 820,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 822,
                        "src": "46312:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 819,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "46312:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "46311:9:0"
                  },
                  "scope": 823,
                  "src": "46270:51:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "46236:87:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Errors",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 824,
                "nodeType": "StructuredDocumentation",
                "src": "46349:624:0",
                "text": " @title Errors library\n @author Sturdy, inspiration from Aave\n @notice Defines the error messages emitted by the different contracts of the Sturdy protocol\n @dev Error messages prefix glossary:\n  - VL = ValidationLogic\n  - MATH = Math libraries\n  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)\n  - AT = AToken\n  - SDT = StableDebtToken\n  - VDT = VariableDebtToken\n  - LP = LendingPool\n  - LPAPR = LendingPoolAddressesProviderRegistry\n  - LPC = LendingPoolConfiguration\n  - RL = ReserveLogic\n  - LPCM = LendingPoolCollateralManager\n  - P = Pausable"
              },
              "fullyImplemented": true,
              "id": 1190,
              "linearizedBaseContracts": [
                1190
              ],
              "name": "Errors",
              "nameLocation": "46982:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 827,
                  "mutability": "constant",
                  "name": "CALLER_NOT_POOL_ADMIN",
                  "nameLocation": "47036:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47011:53:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47011:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3333",
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47060:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ed93c67e1a9b7f09d3b44ee593360f0073603a8e45415e2c3c69afc994a1103d",
                      "typeString": "literal_string \"33\""
                    },
                    "value": "33"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 830,
                  "mutability": "constant",
                  "name": "BORROW_ALLOWANCE_NOT_ENOUGH",
                  "nameLocation": "47132:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47107:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47107:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3539",
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47162:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_dec29173c70f4e70086d64e09cb72b415f3d6a1843817cff62483903f0e12f62",
                      "typeString": "literal_string \"59\""
                    },
                    "value": "59"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 833,
                  "mutability": "constant",
                  "name": "VL_INVALID_AMOUNT",
                  "nameLocation": "47280:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47255:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47255:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47300:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 836,
                  "mutability": "constant",
                  "name": "VL_NO_ACTIVE_RESERVE",
                  "nameLocation": "47367:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47342:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47342:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47390:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                      "typeString": "literal_string \"2\""
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 839,
                  "mutability": "constant",
                  "name": "VL_RESERVE_FROZEN",
                  "nameLocation": "47461:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47436:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47436:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "33",
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47481:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de",
                      "typeString": "literal_string \"3\""
                    },
                    "value": "3"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 842,
                  "mutability": "constant",
                  "name": "VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH",
                  "nameLocation": "47575:41:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47550:72:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47550:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "34",
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47619:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_13600b294191fc92924bb3ce4b969c1e7e2bab8f4c93c3fc6d0a51733df3c060",
                      "typeString": "literal_string \"4\""
                    },
                    "value": "4"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 845,
                  "mutability": "constant",
                  "name": "VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE",
                  "nameLocation": "47692:36:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47667:67:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47667:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "35",
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47731:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1",
                      "typeString": "literal_string \"5\""
                    },
                    "value": "5"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 848,
                  "mutability": "constant",
                  "name": "VL_TRANSFER_NOT_ALLOWED",
                  "nameLocation": "47821:23:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47796:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47796:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "36",
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47847:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e455bf8ea6e7463a1046a0b52804526e119b4bf5136279614e0b1e8e296a4e2d",
                      "typeString": "literal_string \"6\""
                    },
                    "value": "6"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 851,
                  "mutability": "constant",
                  "name": "VL_BORROWING_NOT_ENABLED",
                  "nameLocation": "47912:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47887:55:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47887:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "37",
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47939:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021",
                      "typeString": "literal_string \"7\""
                    },
                    "value": "7"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 854,
                  "mutability": "constant",
                  "name": "VL_INVALID_INTEREST_RATE_MODE_SELECTED",
                  "nameLocation": "48001:38:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "47976:69:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "47976:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "38",
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "48042:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e4b1702d9298fee62dfeccc57d322a463ad55ca201256d01f62b45b2e1c21c10",
                      "typeString": "literal_string \"8\""
                    },
                    "value": "8"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 857,
                  "mutability": "constant",
                  "name": "VL_COLLATERAL_BALANCE_IS_0",
                  "nameLocation": "48115:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "48090:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "48090:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "39",
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "48144:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb",
                      "typeString": "literal_string \"9\""
                    },
                    "value": "9"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 860,
                  "mutability": "constant",
                  "name": "VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD",
                  "nameLocation": "48209:49:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "48184:81:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "48184:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "48261:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac",
                      "typeString": "literal_string \"10\""
                    },
                    "value": "10"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 863,
                  "mutability": "constant",
                  "name": "VL_COLLATERAL_CANNOT_COVER_NEW_BORROW",
                  "nameLocation": "48354:37:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "48329:69:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "48329:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3131",
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "48394:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7880aec93413f117ef14bd4e6d130875ab2c7d7d55a064fac3c2f7bd51516380",
                      "typeString": "literal_string \"11\""
                    },
                    "value": "11"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 866,
                  "mutability": "constant",
                  "name": "VL_STABLE_BORROWING_NOT_ENABLED",
                  "nameLocation": "48485:31:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "48460:63:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "48460:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3132",
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "48519:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7f8b6b088b6d74c2852fc86c796dca07b44eed6fb3daf5e6b59f7c364db14528",
                      "typeString": "literal_string \"12\""
                    },
                    "value": "12"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 869,
                  "mutability": "constant",
                  "name": "VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY",
                  "nameLocation": "48584:40:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "48559:72:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "48559:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3133",
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "48627:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a",
                      "typeString": "literal_string \"13\""
                    },
                    "value": "13"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 872,
                  "mutability": "constant",
                  "name": "VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE",
                  "nameLocation": "48727:42:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "48702:74:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "48702:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3134",
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "48772:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5c4c6aa067b6f8e6cb38e6ab843832a94d1712d661a04d73c517d6a1931a9e5d",
                      "typeString": "literal_string \"14\""
                    },
                    "value": "14"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 875,
                  "mutability": "constant",
                  "name": "VL_NO_DEBT_OF_SELECTED_TYPE",
                  "nameLocation": "48884:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "48859:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "48859:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3135",
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "48914:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1d3be50b2bb17407dd170f1d5da128d1def30c6b1598d6a629e79b4775265526",
                      "typeString": "literal_string \"15\""
                    },
                    "value": "15"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 878,
                  "mutability": "constant",
                  "name": "VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF",
                  "nameLocation": "49060:40:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "49035:72:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "49035:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3136",
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "49103:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe",
                      "typeString": "literal_string \"16\""
                    },
                    "value": "16"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 881,
                  "mutability": "constant",
                  "name": "VL_NO_STABLE_RATE_LOAN_IN_RESERVE",
                  "nameLocation": "49209:33:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "49184:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "49184:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3137",
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "49245:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8e8fab5f003314da8d1873ea7720e8d9f47650136d916064d1edb8a11d682624",
                      "typeString": "literal_string \"17\""
                    },
                    "value": "17"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 884,
                  "mutability": "constant",
                  "name": "VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE",
                  "nameLocation": "49349:35:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "49324:67:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "49324:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3138",
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "49387:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c",
                      "typeString": "literal_string \"18\""
                    },
                    "value": "18"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 887,
                  "mutability": "constant",
                  "name": "VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0",
                  "nameLocation": "49493:40:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "49468:72:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "49468:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3139",
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "49536:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_939eb54753ed0cc7e2272bfb34cbe098308c93936ed54d79078f76ade0b2e789",
                      "typeString": "literal_string \"19\""
                    },
                    "value": "19"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 890,
                  "mutability": "constant",
                  "name": "VL_DEPOSIT_ALREADY_IN_USE",
                  "nameLocation": "49624:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "49599:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "49599:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "49652:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_731dc163f73d31d8c68f9917ce4ff967753939f70432973c04fd2c2a48148607",
                      "typeString": "literal_string \"20\""
                    },
                    "value": "20"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 893,
                  "mutability": "constant",
                  "name": "LP_NOT_ENOUGH_STABLE_BORROW_BALANCE",
                  "nameLocation": "49739:35:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "49714:67:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "49714:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3231",
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "49777:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f4c2b5de886427473655d4c904c743576dc2d53249b7535d96c06cc97ae7216b",
                      "typeString": "literal_string \"21\""
                    },
                    "value": "21"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 896,
                  "mutability": "constant",
                  "name": "LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET",
                  "nameLocation": "49872:45:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "49847:77:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "49847:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3232",
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "49920:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d4d1a59767271eefdc7830a772b9732a11d503531d972ab8c981a6b1c0e666e5",
                      "typeString": "literal_string \"22\""
                    },
                    "value": "22"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 899,
                  "mutability": "constant",
                  "name": "LP_LIQUIDATION_CALL_FAILED",
                  "nameLocation": "50006:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "49981:58:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "49981:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3233",
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50035:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1572b593c53d839d80004aa4b8c51211864104f06ace9e22be9c4365b50655ea",
                      "typeString": "literal_string \"23\""
                    },
                    "value": "23"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 902,
                  "mutability": "constant",
                  "name": "LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW",
                  "nameLocation": "50097:33:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "50072:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50072:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3234",
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50133:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6585423cb6456b1d4957f6454d2f004f0c4f58d53a00082412d5c2ef4b1b31fd",
                      "typeString": "literal_string \"24\""
                    },
                    "value": "24"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 905,
                  "mutability": "constant",
                  "name": "LP_REQUESTED_AMOUNT_TOO_SMALL",
                  "nameLocation": "50221:29:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "50196:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50196:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3235",
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50253:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_81e080ffc23e8b8d44dd829bc823229e92b893eb1d8f624419d3f5682eb97fc3",
                      "typeString": "literal_string \"25\""
                    },
                    "value": "25"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 908,
                  "mutability": "constant",
                  "name": "LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE",
                  "nameLocation": "50342:39:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "50317:71:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50317:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3236",
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50384:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9cce9eb03c9f29c6481fca9f0f942b15bef0bbbc47fda0ddb44df157019835d9",
                      "typeString": "literal_string \"26\""
                    },
                    "value": "26"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 911,
                  "mutability": "constant",
                  "name": "LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR",
                  "nameLocation": "50473:39:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "50448:71:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50448:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3237",
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50515:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43",
                      "typeString": "literal_string \"27\""
                    },
                    "value": "27"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 914,
                  "mutability": "constant",
                  "name": "LP_INCONSISTENT_FLASHLOAN_PARAMS",
                  "nameLocation": "50617:32:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "50592:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50592:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3238",
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50652:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9560168699514dcd528543d614e81b4f36adf182dc624d2f1eb91df8addd987e",
                      "typeString": "literal_string \"28\""
                    },
                    "value": "28"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 917,
                  "mutability": "constant",
                  "name": "CT_CALLER_MUST_BE_LENDING_POOL",
                  "nameLocation": "50685:30:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "50660:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50660:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3239",
                    "id": 916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50718:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561",
                      "typeString": "literal_string \"29\""
                    },
                    "value": "29"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 920,
                  "mutability": "constant",
                  "name": "CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF",
                  "nameLocation": "50807:35:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "50782:67:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50782:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3330",
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50845:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bbf5a24880b10a5f9f601c4058e4771ddea17e7d765ceb3c903814e1c0d621e0",
                      "typeString": "literal_string \"30\""
                    },
                    "value": "30"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 923,
                  "mutability": "constant",
                  "name": "CT_TRANSFER_AMOUNT_NOT_GT_0",
                  "nameLocation": "50921:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "50896:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50896:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3331",
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "50951:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_933c48a61c3bad621ebc5d57117f9e773fefae4468bceaf9d3198a3bf7c1d678",
                      "typeString": "literal_string \"31\""
                    },
                    "value": "31"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 926,
                  "mutability": "constant",
                  "name": "RL_RESERVE_ALREADY_INITIALIZED",
                  "nameLocation": "51038:30:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51013:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51013:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3332",
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "51071:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e",
                      "typeString": "literal_string \"32\""
                    },
                    "value": "32"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 929,
                  "mutability": "constant",
                  "name": "LPC_RESERVE_LIQUIDITY_NOT_0",
                  "nameLocation": "51146:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51121:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51121:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3334",
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "51176:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_77c32b454bb61eb9df9e3848d0ded3e59753acda90ae58befe564733aec82e4c",
                      "typeString": "literal_string \"34\""
                    },
                    "value": "34"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 932,
                  "mutability": "constant",
                  "name": "LPC_INVALID_ATOKEN_POOL_ADDRESS",
                  "nameLocation": "51257:31:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51232:63:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51232:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3335",
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "51291:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5ca7b081b8c6c57b0469c340dba43ec8d33c0b898c69e55c4f74ff7ed9ac71ea",
                      "typeString": "literal_string \"35\""
                    },
                    "value": "35"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 935,
                  "mutability": "constant",
                  "name": "LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS",
                  "nameLocation": "51372:42:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51347:74:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51347:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3336",
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "51417:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3b4066bd7b7960752225af105d3beafb5c47a26c5aae7e6798a437b7c0bb33e6",
                      "typeString": "literal_string \"36\""
                    },
                    "value": "36"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 938,
                  "mutability": "constant",
                  "name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS",
                  "nameLocation": "51498:44:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51473:76:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51473:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3337",
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "51545:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5bc0457d8881b800fd1bc0d6df907345b3bf287e43a5790ded3d08dbacf9c03a",
                      "typeString": "literal_string \"37\""
                    },
                    "value": "37"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 941,
                  "mutability": "constant",
                  "name": "LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
                  "nameLocation": "51626:48:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51601:80:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51601:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3338",
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "51677:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d67d834462ca31eaef1f30157e31659f60355143b7441e6fc7d9eae1fa79f3f8",
                      "typeString": "literal_string \"38\""
                    },
                    "value": "38"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 944,
                  "mutability": "constant",
                  "name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
                  "nameLocation": "51758:50:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51733:82:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51733:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3339",
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "51811:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_318a541463286d7584b45438601196fbc1a55628e303a0613eb6d46e60640c95",
                      "typeString": "literal_string \"39\""
                    },
                    "value": "39"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 947,
                  "mutability": "constant",
                  "name": "LPC_INVALID_ADDRESSES_PROVIDER_ID",
                  "nameLocation": "51892:33:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51867:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51867:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3430",
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "51928:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6",
                      "typeString": "literal_string \"40\""
                    },
                    "value": "40"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 950,
                  "mutability": "constant",
                  "name": "LPC_INVALID_CONFIGURATION",
                  "nameLocation": "52009:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "51984:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "51984:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3735",
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52037:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6dbb33232cde86c8a04f90a8bed9fc1c5ef520188a14538d96eb100d69bc2a94",
                      "typeString": "literal_string \"75\""
                    },
                    "value": "75"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 953,
                  "mutability": "constant",
                  "name": "LPC_CALLER_NOT_EMERGENCY_ADMIN",
                  "nameLocation": "52115:30:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52090:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52090:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3736",
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52148:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f1ae7da53f98170be52cc9330214a82f7ba06ee306297b4e1fb86fb21c611aa6",
                      "typeString": "literal_string \"76\""
                    },
                    "value": "76"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 956,
                  "mutability": "constant",
                  "name": "LPAPR_PROVIDER_NOT_REGISTERED",
                  "nameLocation": "52225:29:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52200:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 954,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52200:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3431",
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52257:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6bcaf047ba4c8ac400fca43393035242dd1aabda2d6068a0c51242b97224de8d",
                      "typeString": "literal_string \"41\""
                    },
                    "value": "41"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 959,
                  "mutability": "constant",
                  "name": "LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD",
                  "nameLocation": "52322:38:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52297:70:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52297:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3432",
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52363:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
                      "typeString": "literal_string \"42\""
                    },
                    "value": "42"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 962,
                  "mutability": "constant",
                  "name": "LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED",
                  "nameLocation": "52442:36:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52417:68:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52417:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3433",
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52481:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4dfb3440902001bce9b7ebf7be7d95fe9e2056bd5ce309ceb83b32f4e00e21ed",
                      "typeString": "literal_string \"43\""
                    },
                    "value": "43"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 965,
                  "mutability": "constant",
                  "name": "LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER",
                  "nameLocation": "52562:44:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52537:76:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52537:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3434",
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52609:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2e9b7c94e032d8b3b8b30bd825717a5ac74958b53e7c37a892a4fd7dc56e4975",
                      "typeString": "literal_string \"44\""
                    },
                    "value": "44"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 968,
                  "mutability": "constant",
                  "name": "LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE",
                  "nameLocation": "52690:38:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52665:70:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52665:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3435",
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52731:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cc1431a2586c1e11fb75c87e5ee58e4204126a9fdde07075c91770f50276cbb0",
                      "typeString": "literal_string \"45\""
                    },
                    "value": "45"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 971,
                  "mutability": "constant",
                  "name": "LPCM_NO_ERRORS",
                  "nameLocation": "52821:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52796:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52796:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3436",
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52838:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c47ece0ffae697632ce145a7086cbcf260f7fa60876ff2606761ea2b7581ee76",
                      "typeString": "literal_string \"46\""
                    },
                    "value": "46"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 974,
                  "mutability": "constant",
                  "name": "LP_INVALID_FLASHLOAN_MODE",
                  "nameLocation": "52886:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52861:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52861:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3437",
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "52914:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_eb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31",
                      "typeString": "literal_string \"47\""
                    },
                    "value": "47"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 977,
                  "mutability": "constant",
                  "name": "MATH_MULTIPLICATION_OVERFLOW",
                  "nameLocation": "52981:28:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "52956:60:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "52956:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3438",
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53012:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6304e47846f882085b0f4b1a184252ae95ffe5e2a02daf39c014f492dcb1441c",
                      "typeString": "literal_string \"48\""
                    },
                    "value": "48"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 980,
                  "mutability": "constant",
                  "name": "MATH_ADDITION_OVERFLOW",
                  "nameLocation": "53045:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53020:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53020:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3439",
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53070:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79",
                      "typeString": "literal_string \"49\""
                    },
                    "value": "49"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 983,
                  "mutability": "constant",
                  "name": "MATH_DIVISION_BY_ZERO",
                  "nameLocation": "53103:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53078:53:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53078:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3530",
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53127:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803",
                      "typeString": "literal_string \"50\""
                    },
                    "value": "50"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 986,
                  "mutability": "constant",
                  "name": "RL_LIQUIDITY_INDEX_OVERFLOW",
                  "nameLocation": "53160:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53135:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53135:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3531",
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53190:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f928ede1c39c5595ff22fe845412ee05a93eeaa584f8ef0c46b5eeb14cb99ec8",
                      "typeString": "literal_string \"51\""
                    },
                    "value": "51"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 989,
                  "mutability": "constant",
                  "name": "RL_VARIABLE_BORROW_INDEX_OVERFLOW",
                  "nameLocation": "53261:33:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53236:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53236:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3532",
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53297:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cd41b8bf8f20f7ad95d96d948a315af225b219053fc98a80aee13063b692b681",
                      "typeString": "literal_string \"52\""
                    },
                    "value": "52"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 992,
                  "mutability": "constant",
                  "name": "RL_LIQUIDITY_RATE_OVERFLOW",
                  "nameLocation": "53374:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53349:58:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53349:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3533",
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53403:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3",
                      "typeString": "literal_string \"53\""
                    },
                    "value": "53"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 995,
                  "mutability": "constant",
                  "name": "RL_VARIABLE_BORROW_RATE_OVERFLOW",
                  "nameLocation": "53473:32:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53448:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53448:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3534",
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53508:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_006b3e710f3089a74ecb6b0f5948e5ff07a3db6ba4da475d2be17624ba96b95b",
                      "typeString": "literal_string \"54\""
                    },
                    "value": "54"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 998,
                  "mutability": "constant",
                  "name": "RL_STABLE_BORROW_RATE_OVERFLOW",
                  "nameLocation": "53584:30:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53559:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53559:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3535",
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53617:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35",
                      "typeString": "literal_string \"55\""
                    },
                    "value": "55"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1001,
                  "mutability": "constant",
                  "name": "CT_INVALID_MINT_AMOUNT",
                  "nameLocation": "53691:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53666:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53666:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3536",
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53716:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_32da71dbd53bc029835bc5ecdd3e688035cc92bb61b1811d1685e67ba974e19f",
                      "typeString": "literal_string \"56\""
                    },
                    "value": "56"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1004,
                  "mutability": "constant",
                  "name": "LP_FAILED_REPAY_WITH_COLLATERAL",
                  "nameLocation": "53774:31:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53749:63:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53749:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3537",
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53808:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16",
                      "typeString": "literal_string \"57\""
                    },
                    "value": "57"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1007,
                  "mutability": "constant",
                  "name": "CT_INVALID_BURN_AMOUNT",
                  "nameLocation": "53841:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53816:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53816:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3538",
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53866:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_59d26ca75eb04b47ab1bca5d789d02e4d0cf9ff8cb49c9041caeeeab4eccafbf",
                      "typeString": "literal_string \"58\""
                    },
                    "value": "58"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1010,
                  "mutability": "constant",
                  "name": "LP_FAILED_COLLATERAL_SWAP",
                  "nameLocation": "53924:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53899:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53899:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3630",
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "53952:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7446b42d7fe1689ec32fc1ca65129d9f21f1979742315d34500a6886f6986bea",
                      "typeString": "literal_string \"60\""
                    },
                    "value": "60"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1013,
                  "mutability": "constant",
                  "name": "LP_INVALID_EQUAL_ASSETS_TO_SWAP",
                  "nameLocation": "53985:31:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "53960:63:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "53960:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3631",
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54019:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5ae62207e7adee0b793bf869601474e77943fa4d9e3e0420f34d788e59bc19bd",
                      "typeString": "literal_string \"61\""
                    },
                    "value": "61"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1016,
                  "mutability": "constant",
                  "name": "LP_REENTRANCY_NOT_ALLOWED",
                  "nameLocation": "54052:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54027:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54027:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3632",
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54080:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d9670a00d025e59e1bd58d53874bea4ab34fea782716e2c168e89a3c8452d3bb",
                      "typeString": "literal_string \"62\""
                    },
                    "value": "62"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1019,
                  "mutability": "constant",
                  "name": "LP_CALLER_MUST_BE_AN_ATOKEN",
                  "nameLocation": "54113:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54088:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54088:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3633",
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54143:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4569971f3d79dc8da7f8a6820be6cb8dc4a52bb0df6599b2aae7182111b63cd5",
                      "typeString": "literal_string \"63\""
                    },
                    "value": "63"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1022,
                  "mutability": "constant",
                  "name": "LP_IS_PAUSED",
                  "nameLocation": "54176:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54151:44:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54151:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3634",
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54191:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_646d998f946f968f0675fd4e3cb527e1222094ea0d9cc1fd615146a8fe29802e",
                      "typeString": "literal_string \"64\""
                    },
                    "value": "64"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1025,
                  "mutability": "constant",
                  "name": "LP_NO_MORE_RESERVES_ALLOWED",
                  "nameLocation": "54244:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54219:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54219:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3635",
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54274:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_606503ebd6bdca7290248af82fd5a09ca0489398da9f242244210336ae6ece9f",
                      "typeString": "literal_string \"65\""
                    },
                    "value": "65"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1028,
                  "mutability": "constant",
                  "name": "LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN",
                  "nameLocation": "54307:37:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54282:69:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54282:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3636",
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54347:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_35bb2e240092263378f77ea1e9c278099a33b604c4c4e26d13ea227e8bb74470",
                      "typeString": "literal_string \"66\""
                    },
                    "value": "66"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1031,
                  "mutability": "constant",
                  "name": "RC_INVALID_LTV",
                  "nameLocation": "54380:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54355:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54355:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3637",
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54397:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_eafa31dc210956fc0884ec5660eba9405197797219cbbda41b6aaf7118c651d8",
                      "typeString": "literal_string \"67\""
                    },
                    "value": "67"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1034,
                  "mutability": "constant",
                  "name": "RC_INVALID_LIQ_THRESHOLD",
                  "nameLocation": "54430:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54405:56:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54405:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3638",
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54457:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cc143a676b82d5e07b2c9d57717b403ab3c58caa273a42cdb95b15980141a86c",
                      "typeString": "literal_string \"68\""
                    },
                    "value": "68"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1037,
                  "mutability": "constant",
                  "name": "RC_INVALID_LIQ_BONUS",
                  "nameLocation": "54490:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54465:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54465:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3639",
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54513:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_db37925934a3d3177db64e11f5e0156ceb8a756fee58ded16e549afa607ddb1d",
                      "typeString": "literal_string \"69\""
                    },
                    "value": "69"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1040,
                  "mutability": "constant",
                  "name": "RC_INVALID_DECIMALS",
                  "nameLocation": "54546:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54521:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3730",
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54568:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cdbc23227c72e0a3f4683bdbccfcbed38047ca1a70d48b78c210dc5393029019",
                      "typeString": "literal_string \"70\""
                    },
                    "value": "70"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1043,
                  "mutability": "constant",
                  "name": "RC_INVALID_RESERVE_FACTOR",
                  "nameLocation": "54601:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54576:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54576:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3731",
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54629:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691",
                      "typeString": "literal_string \"71\""
                    },
                    "value": "71"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1046,
                  "mutability": "constant",
                  "name": "LPAPR_INVALID_ADDRESSES_PROVIDER_ID",
                  "nameLocation": "54662:35:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54637:67:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54637:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3732",
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54700:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8fd0324b6a5df169e0aa0c7938ef0034d0e971a998f91b36eba211882d3617b1",
                      "typeString": "literal_string \"72\""
                    },
                    "value": "72"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1049,
                  "mutability": "constant",
                  "name": "VL_INCONSISTENT_FLASHLOAN_PARAMS",
                  "nameLocation": "54733:32:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54708:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54708:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3733",
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54768:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2219b801710730437d0358146c829b62297a059eceaa0b40b27aea2daecf595",
                      "typeString": "literal_string \"73\""
                    },
                    "value": "73"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1052,
                  "mutability": "constant",
                  "name": "LP_INCONSISTENT_PARAMS_LENGTH",
                  "nameLocation": "54801:29:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54776:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1050,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54776:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3734",
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54833:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d",
                      "typeString": "literal_string \"74\""
                    },
                    "value": "74"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1055,
                  "mutability": "constant",
                  "name": "UL_INVALID_INDEX",
                  "nameLocation": "54866:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54841:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54841:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3737",
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54885:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7fe86492ed9171487feeb17b76d71244c5fb104d897816bb03a924e5871f3fa3",
                      "typeString": "literal_string \"77\""
                    },
                    "value": "77"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1058,
                  "mutability": "constant",
                  "name": "LP_NOT_CONTRACT",
                  "nameLocation": "54918:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54893:47:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54893:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3738",
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54936:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_63867b8d5e748cf93e24f7b381d92337d037805bfc271d6d67e0e86772662677",
                      "typeString": "literal_string \"78\""
                    },
                    "value": "78"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1061,
                  "mutability": "constant",
                  "name": "SDT_STABLE_DEBT_OVERFLOW",
                  "nameLocation": "54969:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "54944:56:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1059,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "54944:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3739",
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "54996:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2bf418e3ea3cce1b306c1bbf566df40bf3703cc73b456ccd399088d784bc76ee",
                      "typeString": "literal_string \"79\""
                    },
                    "value": "79"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1064,
                  "mutability": "constant",
                  "name": "SDT_BURN_EXCEEDS_BALANCE",
                  "nameLocation": "55029:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55004:56:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55004:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3830",
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55056:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_742ccb3c5ad7b0e2030ad7fa03711e32b9f4236452343c6e16a6cf67d464d149",
                      "typeString": "literal_string \"80\""
                    },
                    "value": "80"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1067,
                  "mutability": "constant",
                  "name": "VT_COLLATERAL_DEPOSIT_REQUIRE_ETH",
                  "nameLocation": "55089:33:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55064:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1065,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55064:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3831",
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55125:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e2ecacab2e0418b841e7d0b206f5c40e0e0489353c5747dd1cc77d7f5a66829f",
                      "typeString": "literal_string \"81\""
                    },
                    "value": "81"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1070,
                  "mutability": "constant",
                  "name": "VT_COLLATERAL_DEPOSIT_INVALID",
                  "nameLocation": "55199:29:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55174:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55174:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3832",
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55231:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5392f7a671cdf89487ccf8e3646ea8f7570009490584962db6fa064c6e4ad499",
                      "typeString": "literal_string \"82\""
                    },
                    "value": "82"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1073,
                  "mutability": "constant",
                  "name": "VT_LIQUIDITY_DEPOSIT_INVALID",
                  "nameLocation": "55292:28:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55267:60:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55267:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3833",
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55323:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_043ab7193d962ca510e48770a5a13714f4684febe0e5affcfd1eb73cfed1f218",
                      "typeString": "literal_string \"83\""
                    },
                    "value": "83"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1076,
                  "mutability": "constant",
                  "name": "VT_COLLATERAL_WITHDRAW_INVALID",
                  "nameLocation": "55408:30:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55383:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55383:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3834",
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55441:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ab20a672b3c5d5f71a8da6c43d4bf580ed35b623d6b0366b1de9df7e12238080",
                      "typeString": "literal_string \"84\""
                    },
                    "value": "84"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1079,
                  "mutability": "constant",
                  "name": "VT_COLLATERAL_WITHDRAW_INVALID_AMOUNT",
                  "nameLocation": "55503:37:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55478:69:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55478:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3835",
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55543:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_17157e479612de6088d957c64aca858964825e74089b3c7dacc26409e6d53000",
                      "typeString": "literal_string \"85\""
                    },
                    "value": "85"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1082,
                  "mutability": "constant",
                  "name": "VT_CONVERT_ASSET_BY_CURVE_INVALID",
                  "nameLocation": "55620:33:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55595:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55595:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3836",
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55656:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cc193713febc75d3d9bd2f9ce113f403ff19633f15c8cdbcf79756ae23e77f9a",
                      "typeString": "literal_string \"86\""
                    },
                    "value": "86"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1085,
                  "mutability": "constant",
                  "name": "VT_PROCESS_YIELD_INVALID",
                  "nameLocation": "55722:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55697:56:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55697:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3837",
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55749:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_845e9c18ca148a712f01bf14c91c3e2fe352eabe86c44817e3f33b63f585a343",
                      "typeString": "literal_string \"87\""
                    },
                    "value": "87"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1088,
                  "mutability": "constant",
                  "name": "VT_TREASURY_INVALID",
                  "nameLocation": "55812:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55787:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55787:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3838",
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55834:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a3bcf8af6929b66d6da7ee355c48fd1cf926fd090bc75a4dcbf7bd8e365645e3",
                      "typeString": "literal_string \"88\""
                    },
                    "value": "88"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1091,
                  "mutability": "constant",
                  "name": "LP_ATOKEN_INIT_INVALID",
                  "nameLocation": "55889:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55864:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55864:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3839",
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55914:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5ad0f966e4dd8863f27c0e6ee7d684c0c8f4319efed210fe15662a0d29bcd615",
                      "typeString": "literal_string \"89\""
                    },
                    "value": "89"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1094,
                  "mutability": "constant",
                  "name": "VT_FEE_TOO_BIG",
                  "nameLocation": "55969:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "55944:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "55944:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3930",
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "55986:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_04e57633024368235fc5219bfb9802814291d3a7b9a68d0aeb7bd3d297ac474e",
                      "typeString": "literal_string \"90\""
                    },
                    "value": "90"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1097,
                  "mutability": "constant",
                  "name": "VT_COLLATERAL_DEPOSIT_VAULT_UNAVAILABLE",
                  "nameLocation": "56036:39:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56011:71:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56011:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3931",
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56078:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4393e7114eb674248a1480712950c28cb06e118e040859a2eafa3ca8a6dfbd69",
                      "typeString": "literal_string \"91\""
                    },
                    "value": "91"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1100,
                  "mutability": "constant",
                  "name": "LP_LIQUIDATION_CONVERT_FAILED",
                  "nameLocation": "56111:29:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56086:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56086:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3932",
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56143:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_af057546d61dd28804ca035e688a36db5f311bb8c4c9d2e1e5e44c0555cfe3bf",
                      "typeString": "literal_string \"92\""
                    },
                    "value": "92"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1103,
                  "mutability": "constant",
                  "name": "VT_DEPLOY_FAILED",
                  "nameLocation": "56176:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56151:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56151:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3933",
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56195:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_881472a5783e16aed4d4ff91eeebe17d420d379d078fc85dddb0a3a55a9abffe",
                      "typeString": "literal_string \"93\""
                    },
                    "value": "93"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1106,
                  "mutability": "constant",
                  "name": "VT_INVALID_CONFIGURATION",
                  "nameLocation": "56251:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56226:56:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3934",
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56278:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_037d752242ae8d900ca1c2dba9512ed3f691680bee2a7d598ed49320619901d7",
                      "typeString": "literal_string \"94\""
                    },
                    "value": "94"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1109,
                  "mutability": "constant",
                  "name": "VL_OVERFLOW_MAX_RESERVE_CAPACITY",
                  "nameLocation": "56342:32:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56317:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56317:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3935",
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56377:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5b9d82bdb7ae056a203cf64bdf26f3fdec584cdfaca2ac8b4c3d0c5b66e90969",
                      "typeString": "literal_string \"95\""
                    },
                    "value": "95"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1112,
                  "mutability": "constant",
                  "name": "VT_WITHDRAW_AMOUNT_MISMATCH",
                  "nameLocation": "56446:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56421:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56421:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3936",
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56476:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_dab92d3cfd2fb10847c732668f5be4f526313d660461529e6720c950cca9ea28",
                      "typeString": "literal_string \"96\""
                    },
                    "value": "96"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1115,
                  "mutability": "constant",
                  "name": "VT_SWAP_MISMATCH_RETURNED_AMOUNT",
                  "nameLocation": "56540:32:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56515:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56515:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3937",
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56575:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_60750e84e711126719e0768062cd3784906b181c157d8590d52843dc3c91240f",
                      "typeString": "literal_string \"97\""
                    },
                    "value": "97"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1118,
                  "mutability": "constant",
                  "name": "CALLER_NOT_YIELD_PROCESSOR",
                  "nameLocation": "56640:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56615:58:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56615:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3938",
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56669:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_56fd040903fcc2e59c9b9f09df6ca51a830f066826ddedecdd2eb17dc3f3f289",
                      "typeString": "literal_string \"98\""
                    },
                    "value": "98"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1121,
                  "mutability": "constant",
                  "name": "VT_EXTRA_REWARDS_INDEX_INVALID",
                  "nameLocation": "56741:30:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56716:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56716:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3939",
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56774:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c41c8390c0da0418b7667ee0df6c246c26c4be6c0618368dce5a916e8008b0db",
                      "typeString": "literal_string \"99\""
                    },
                    "value": "99"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1124,
                  "mutability": "constant",
                  "name": "VT_SWAP_PATH_LENGTH_INVALID",
                  "nameLocation": "56837:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56812:60:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56812:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56867:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8c18210df0d9514f2d2e5d8ca7c100978219ee80d3968ad850ab5ead208287b3",
                      "typeString": "literal_string \"100\""
                    },
                    "value": "100"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1127,
                  "mutability": "constant",
                  "name": "VT_SWAP_PATH_TOKEN_INVALID",
                  "nameLocation": "56932:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56907:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56907:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313031",
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "56961:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f9535bac1c0dacfe011b6a07ce55ad3fdc761de7345d7b004778e93b9d222ae5",
                      "typeString": "literal_string \"101\""
                    },
                    "value": "101"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1130,
                  "mutability": "constant",
                  "name": "CLAIMER_UNAUTHORIZED",
                  "nameLocation": "57024:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "56999:53:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "56999:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313032",
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57047:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2a9063ed52b7d417e441f378325359c9ce274f5d6c3ecf11b7d42f24b9c90b7f",
                      "typeString": "literal_string \"102\""
                    },
                    "value": "102"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1133,
                  "mutability": "constant",
                  "name": "YD_INVALID_CONFIGURATION",
                  "nameLocation": "57116:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57091:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57091:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313033",
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57143:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f3e73e27cf4cda7ebc973aa432f8a54a97200c0745d43e1bc9c2879ffe79cc53",
                      "typeString": "literal_string \"103\""
                    },
                    "value": "103"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1136,
                  "mutability": "constant",
                  "name": "CALLER_NOT_EMISSION_MANAGER",
                  "nameLocation": "57229:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57204:60:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57204:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313034",
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57259:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2e5129c19be59da29ff89133759e8d7e21d926bf22eda9cdfd27c0cd8774b8c2",
                      "typeString": "literal_string \"104\""
                    },
                    "value": "104"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1139,
                  "mutability": "constant",
                  "name": "CALLER_NOT_INCENTIVE_CONTROLLER",
                  "nameLocation": "57334:31:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57309:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57309:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313035",
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57368:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7c8c0582d21a968b9aa25d45e0e719f1fe93aa4458f5d5939d507b861e308328",
                      "typeString": "literal_string \"105\""
                    },
                    "value": "105"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1142,
                  "mutability": "constant",
                  "name": "YD_VR_ASSET_ALREADY_IN_USE",
                  "nameLocation": "57447:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57422:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57422:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313036",
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57476:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ecb3d63bca2dac2f15cfd948f18f200abecc477e6036fc1499f13da50bed1ba1",
                      "typeString": "literal_string \"106\""
                    },
                    "value": "106"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1145,
                  "mutability": "constant",
                  "name": "YD_VR_INVALID_VAULT",
                  "nameLocation": "57541:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57516:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57516:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313037",
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57563:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e41a685dc3df81383d452481451b89eb3f69781b836c19936fa9714a13d1c9c2",
                      "typeString": "literal_string \"107\""
                    },
                    "value": "107"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1148,
                  "mutability": "constant",
                  "name": "YD_VR_INVALID_REWARDS_AMOUNT",
                  "nameLocation": "57635:28:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57610:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57610:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313038",
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57666:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9fc1ee6eadd67a54527f8d0704f8da30e58e7e115f3c3a09267ee1b121a8cd57",
                      "typeString": "literal_string \"108\""
                    },
                    "value": "108"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1151,
                  "mutability": "constant",
                  "name": "YD_VR_REWARD_TOKEN_NOT_VALID",
                  "nameLocation": "57747:28:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57722:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57722:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313039",
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57778:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b811eb8190fe00dc85563459f7e9e4ba4c2ef31ddac91e9e2d37d1e7e1b1d5bc",
                      "typeString": "literal_string \"109\""
                    },
                    "value": "109"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1154,
                  "mutability": "constant",
                  "name": "YD_VR_ASSET_NOT_REGISTERED",
                  "nameLocation": "57869:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57844:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57844:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313130",
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57898:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d905fec1a56b00009651ce5a01a34d2244da02f516f67ee88b03219738dbf226",
                      "typeString": "literal_string \"110\""
                    },
                    "value": "110"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1157,
                  "mutability": "constant",
                  "name": "YD_VR_CALLER_NOT_VAULT",
                  "nameLocation": "57932:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "57907:55:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "57907:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313131",
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "57957:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_de838e9e0a4b3e84cad3a9d39f9fe437c20f318b30d3166f08c0cdbee96032ab",
                      "typeString": "literal_string \"111\""
                    },
                    "value": "111"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1160,
                  "mutability": "constant",
                  "name": "LS_INVALID_CONFIGURATION",
                  "nameLocation": "58048:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "58023:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1158,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "58023:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313132",
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "58075:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e864dc03065e4dfe580e59a415a66186da3a35ff7cde57e5a4d851feef903ceb",
                      "typeString": "literal_string \"112\""
                    },
                    "value": "112"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1163,
                  "mutability": "constant",
                  "name": "LS_SWAP_AMOUNT_NOT_GT_0",
                  "nameLocation": "58151:23:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "58126:56:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "58126:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313133",
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "58177:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_712adca22095011a9de0b4aa84648bf2bea2744bd9326ede31e43d2a71662846",
                      "typeString": "literal_string \"113\""
                    },
                    "value": "113"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1166,
                  "mutability": "constant",
                  "name": "LS_BORROWING_ASSET_NOT_SUPPORTED",
                  "nameLocation": "58262:32:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "58237:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "58237:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313134",
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "58297:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6c16bd8c1487da703f7ab92e9636de903fad798d8f79b33ee17a640122eb3349",
                      "typeString": "literal_string \"114\""
                    },
                    "value": "114"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1169,
                  "mutability": "constant",
                  "name": "LS_SUPPLY_NOT_ALLOWED",
                  "nameLocation": "58379:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "58354:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "58354:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313135",
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "58403:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5d519e8ccff65fbf7a596d649336943263020a2cedd697418c72b82d84123abe",
                      "typeString": "literal_string \"115\""
                    },
                    "value": "115"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1172,
                  "mutability": "constant",
                  "name": "LS_SUPPLY_FAILED",
                  "nameLocation": "58460:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "58435:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "58435:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313136",
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "58479:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_06cc276dcbd36fa8a4ad61c60dbe1da479204cba66678327f4ef951465234202",
                      "typeString": "literal_string \"116\""
                    },
                    "value": "116"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1175,
                  "mutability": "constant",
                  "name": "LS_REPAY_FAILED",
                  "nameLocation": "58550:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "58525:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "58525:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313137",
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "58568:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d4579ab3c781860520f730aa471b37a7366c1c6efb6e34470da23130f5149f7",
                      "typeString": "literal_string \"117\""
                    },
                    "value": "117"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1178,
                  "mutability": "constant",
                  "name": "O_WRONG_PRICE",
                  "nameLocation": "58637:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "58612:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "58612:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "313138",
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "58653:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c792330a4f225cb27dfcf04335b51be24e1e574b19d83989f6006ef18804cbcb",
                      "typeString": "literal_string \"118\""
                    },
                    "value": "118"
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "Errors.CollateralManagerErrors",
                  "id": 1189,
                  "members": [
                    {
                      "id": 1179,
                      "name": "NO_ERROR",
                      "nameLocation": "58726:8:0",
                      "nodeType": "EnumValue",
                      "src": "58726:8:0"
                    },
                    {
                      "id": 1180,
                      "name": "NO_COLLATERAL_AVAILABLE",
                      "nameLocation": "58740:23:0",
                      "nodeType": "EnumValue",
                      "src": "58740:23:0"
                    },
                    {
                      "id": 1181,
                      "name": "COLLATERAL_CANNOT_BE_LIQUIDATED",
                      "nameLocation": "58769:31:0",
                      "nodeType": "EnumValue",
                      "src": "58769:31:0"
                    },
                    {
                      "id": 1182,
                      "name": "CURRRENCY_NOT_BORROWED",
                      "nameLocation": "58806:22:0",
                      "nodeType": "EnumValue",
                      "src": "58806:22:0"
                    },
                    {
                      "id": 1183,
                      "name": "HEALTH_FACTOR_ABOVE_THRESHOLD",
                      "nameLocation": "58834:29:0",
                      "nodeType": "EnumValue",
                      "src": "58834:29:0"
                    },
                    {
                      "id": 1184,
                      "name": "NOT_ENOUGH_LIQUIDITY",
                      "nameLocation": "58869:20:0",
                      "nodeType": "EnumValue",
                      "src": "58869:20:0"
                    },
                    {
                      "id": 1185,
                      "name": "NO_ACTIVE_RESERVE",
                      "nameLocation": "58895:17:0",
                      "nodeType": "EnumValue",
                      "src": "58895:17:0"
                    },
                    {
                      "id": 1186,
                      "name": "HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD",
                      "nameLocation": "58918:46:0",
                      "nodeType": "EnumValue",
                      "src": "58918:46:0"
                    },
                    {
                      "id": 1187,
                      "name": "INVALID_EQUAL_ASSETS_TO_SWAP",
                      "nameLocation": "58970:28:0",
                      "nodeType": "EnumValue",
                      "src": "58970:28:0"
                    },
                    {
                      "id": 1188,
                      "name": "FROZEN_RESERVE",
                      "nameLocation": "59004:14:0",
                      "nodeType": "EnumValue",
                      "src": "59004:14:0"
                    }
                  ],
                  "name": "CollateralManagerErrors",
                  "nameLocation": "58696:23:0",
                  "nodeType": "EnumDefinition",
                  "src": "58691:331:0"
                }
              ],
              "scope": 1443,
              "src": "46974:12050:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Math",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1191,
                "nodeType": "StructuredDocumentation",
                "src": "59047:73:0",
                "text": " @dev Standard math utilities missing in the Solidity language."
              },
              "fullyImplemented": true,
              "id": 1276,
              "linearizedBaseContracts": [
                1276
              ],
              "name": "Math",
              "nameLocation": "59129:4:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "59263:32:0",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1201,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "59276:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 1202,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "59281:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "59276:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 1205,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "59289:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "59276:14:0",
                          "trueExpression": {
                            "id": 1204,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "59285:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1200,
                        "id": 1207,
                        "nodeType": "Return",
                        "src": "59269:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1192,
                    "nodeType": "StructuredDocumentation",
                    "src": "59138:55:0",
                    "text": " @dev Returns the largest of two numbers."
                  },
                  "id": 1209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "max",
                  "nameLocation": "59205:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1194,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "59217:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "59209:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1193,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59209:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "59228:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "59220:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59220:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "59208:22:0"
                  },
                  "returnParameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "59254:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59254:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "59253:9:0"
                  },
                  "scope": 1276,
                  "src": "59196:99:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1226,
                    "nodeType": "Block",
                    "src": "59425:31:0",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1219,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1212,
                              "src": "59438:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1220,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1214,
                              "src": "59442:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "59438:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 1223,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "59450:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "59438:13:0",
                          "trueExpression": {
                            "id": 1222,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1212,
                            "src": "59446:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1218,
                        "id": 1225,
                        "nodeType": "Return",
                        "src": "59431:20:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1210,
                    "nodeType": "StructuredDocumentation",
                    "src": "59299:56:0",
                    "text": " @dev Returns the smallest of two numbers."
                  },
                  "id": 1227,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "min",
                  "nameLocation": "59367:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1212,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "59379:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "59371:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1211,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59371:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1214,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "59390:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "59382:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59382:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "59370:22:0"
                  },
                  "returnParameters": {
                    "id": 1218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1217,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "59416:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1216,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59416:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "59415:9:0"
                  },
                  "scope": 1276,
                  "src": "59358:98:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1249,
                    "nodeType": "Block",
                    "src": "59630:72:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1237,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "59677:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "id": 1238,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "59681:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "59677:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1240,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "59676:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1241,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1230,
                                    "src": "59687:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "^",
                                  "rightExpression": {
                                    "id": 1242,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1232,
                                    "src": "59691:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "59687:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1244,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "59686:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "59696:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "59686:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "59676:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1236,
                        "id": 1248,
                        "nodeType": "Return",
                        "src": "59669:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1228,
                    "nodeType": "StructuredDocumentation",
                    "src": "59460:96:0",
                    "text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
                  },
                  "id": 1250,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "average",
                  "nameLocation": "59568:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1230,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "59584:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1250,
                        "src": "59576:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59576:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1232,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "59595:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1250,
                        "src": "59587:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1231,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59587:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "59575:22:0"
                  },
                  "returnParameters": {
                    "id": 1236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1235,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1250,
                        "src": "59621:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59621:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "59620:9:0"
                  },
                  "scope": 1276,
                  "src": "59559:143:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1274,
                    "nodeType": "Block",
                    "src": "59958:113:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1260,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1253,
                              "src": "60038:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1261,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1255,
                              "src": "60042:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "60038:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1265,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1263,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1253,
                                      "src": "60047:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "%",
                                    "rightExpression": {
                                      "id": 1264,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1255,
                                      "src": "60051:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "60047:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "60056:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "60047:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "hexValue": "31",
                                  "id": 1269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "60064:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "60047:18:0",
                                "trueExpression": {
                                  "hexValue": "30",
                                  "id": 1268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "60060:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 1271,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "60046:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "60038:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1259,
                        "id": 1273,
                        "nodeType": "Return",
                        "src": "60031:35:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1251,
                    "nodeType": "StructuredDocumentation",
                    "src": "59706:178:0",
                    "text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
                  },
                  "id": 1275,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ceilDiv",
                  "nameLocation": "59896:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1253,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "59912:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "59904:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59904:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1255,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "59923:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "59915:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59915:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "59903:22:0"
                  },
                  "returnParameters": {
                    "id": 1259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1258,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "59949:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "59949:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "59948:9:0"
                  },
                  "scope": 1276,
                  "src": "59887:184:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1443,
              "src": "59121:952:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1278,
                    "name": "IOracle",
                    "nameLocations": [
                      "60167:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 755,
                    "src": "60167:7:0"
                  },
                  "id": 1279,
                  "nodeType": "InheritanceSpecifier",
                  "src": "60167:7:0"
                },
                {
                  "baseName": {
                    "id": 1280,
                    "name": "IOracleValidate",
                    "nameLocations": [
                      "60176:15:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 732,
                    "src": "60176:15:0"
                  },
                  "id": 1281,
                  "nodeType": "InheritanceSpecifier",
                  "src": "60176:15:0"
                }
              ],
              "canonicalName": "BALWSTETHWETHOracle",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1277,
                "nodeType": "StructuredDocumentation",
                "src": "60076:58:0",
                "text": " @dev Oracle contract for BALWSTETHWETH LP Token"
              },
              "fullyImplemented": true,
              "id": 1442,
              "linearizedBaseContracts": [
                1442,
                732,
                755
              ],
              "name": "BALWSTETHWETHOracle",
              "nameLocation": "60144:19:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1287,
                  "mutability": "constant",
                  "name": "BALWSTETHWETH",
                  "nameLocation": "60233:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1442,
                  "src": "60196:120:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBalancerStablePool_$823",
                    "typeString": "contract IBalancerStablePool"
                  },
                  "typeName": {
                    "id": 1283,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1282,
                      "name": "IBalancerStablePool",
                      "nameLocations": [
                        "60196:19:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 823,
                      "src": "60196:19:0"
                    },
                    "referencedDeclaration": 823,
                    "src": "60196:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBalancerStablePool_$823",
                      "typeString": "contract IBalancerStablePool"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307833323239363936394566313445423063366432393636394335353044346130343439313330323330",
                        "id": 1285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "60273:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x32296969Ef14EB0c6d29669C550D4a0449130230"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1284,
                      "name": "IBalancerStablePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 823,
                      "src": "60253:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IBalancerStablePool_$823_$",
                        "typeString": "type(contract IBalancerStablePool)"
                      }
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "60253:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBalancerStablePool_$823",
                      "typeString": "contract IBalancerStablePool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1293,
                  "mutability": "constant",
                  "name": "STETH",
                  "nameLocation": "60534:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1442,
                  "src": "60496:114:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IChainlinkAggregator_$817",
                    "typeString": "contract IChainlinkAggregator"
                  },
                  "typeName": {
                    "id": 1289,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1288,
                      "name": "IChainlinkAggregator",
                      "nameLocations": [
                        "60496:20:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 817,
                      "src": "60496:20:0"
                    },
                    "referencedDeclaration": 817,
                    "src": "60496:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IChainlinkAggregator_$817",
                      "typeString": "contract IChainlinkAggregator"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307838363339326443313963306237313938383632323163373841423131656238436635633532383132",
                        "id": 1291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "60567:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x86392dC19c0b719886221c78AB11eb8Cf5c52812"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1290,
                      "name": "IChainlinkAggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "60546:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IChainlinkAggregator_$817_$",
                        "typeString": "type(contract IChainlinkAggregator)"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "60546:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IChainlinkAggregator_$817",
                      "typeString": "contract IChainlinkAggregator"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1296,
                  "mutability": "constant",
                  "name": "BALANCER_VAULT",
                  "nameLocation": "60639:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1442,
                  "src": "60614:84:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "60614:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307842413132323232323232323238643842613434353935386137356130373034643536364246324338",
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "60656:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xBA12222222228d8Ba445958a75a0704d566BF2C8"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1349,
                    "nodeType": "Block",
                    "src": "60943:323:0",
                    "statements": [
                      {
                        "assignments": [
                          null,
                          1303,
                          null,
                          1305,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 1303,
                            "mutability": "mutable",
                            "name": "stETHPrice",
                            "nameLocation": "60959:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1349,
                            "src": "60952:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 1302,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "60952:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          {
                            "constant": false,
                            "id": 1305,
                            "mutability": "mutable",
                            "name": "updatedAt",
                            "nameLocation": "60981:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1349,
                            "src": "60973:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1304,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "60973:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1309,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1306,
                              "name": "STETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1293,
                              "src": "60996:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IChainlinkAggregator_$817",
                                "typeString": "contract IChainlinkAggregator"
                              }
                            },
                            "id": 1307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "61002:15:0",
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 802,
                            "src": "60996:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "60996:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "60949:70:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1311,
                                "name": "updatedAt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1305,
                                "src": "61033:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1312,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "61045:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1313,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "61051:9:0",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "61045:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "61063:6:0",
                                  "subdenomination": "days",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  },
                                  "value": "1"
                                },
                                "src": "61045:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "61033:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1317,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1190,
                                "src": "61071:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$1190_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "61078:13:0",
                              "memberName": "O_WRONG_PRICE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1178,
                              "src": "61071:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1310,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "61025:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "61025:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1320,
                        "nodeType": "ExpressionStatement",
                        "src": "61025:67:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1322,
                                "name": "stETHPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1303,
                                "src": "61106:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "61119:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "61106:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1325,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1190,
                                "src": "61122:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$1190_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "61129:13:0",
                              "memberName": "O_WRONG_PRICE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1178,
                              "src": "61122:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1321,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "61098:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "61098:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1328,
                        "nodeType": "ExpressionStatement",
                        "src": "61098:45:0"
                      },
                      {
                        "assignments": [
                          1330
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1330,
                            "mutability": "mutable",
                            "name": "minValue",
                            "nameLocation": "61158:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1349,
                            "src": "61150:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1329,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "61150:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1339,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1335,
                                  "name": "stETHPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1303,
                                  "src": "61186:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "61178:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1333,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "61178:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "61178:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "31653138",
                              "id": 1337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "61199:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 1331,
                              "name": "Math",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1276,
                              "src": "61169:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Math_$1276_$",
                                "typeString": "type(library Math)"
                              }
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "61174:3:0",
                            "memberName": "min",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1227,
                            "src": "61169:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "61169:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "61150:54:0"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1340,
                                      "name": "BALWSTETHWETH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1287,
                                      "src": "61219:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBalancerStablePool_$823",
                                        "typeString": "contract IBalancerStablePool"
                                      }
                                    },
                                    "id": 1341,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "61233:7:0",
                                    "memberName": "getRate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 822,
                                    "src": "61219:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 1342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "61219:23:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1343,
                                  "name": "minValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1330,
                                  "src": "61245:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "61219:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1345,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "61218:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 1346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "61257:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "61218:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1301,
                        "id": 1348,
                        "nodeType": "Return",
                        "src": "61211:50:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1297,
                    "nodeType": "StructuredDocumentation",
                    "src": "60745:147:0",
                    "text": "@custom:consol {_get() returns (ret) ensures {(ret * 95 / 100 < BALWSTETHWETH.getLatest(1)) && (ret * 105 / 100 > BALWSTETHWETH.getLatest(1))}}"
                  },
                  "id": 1350,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_get",
                  "nameLocation": "60904:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "60908:2:0"
                  },
                  "returnParameters": {
                    "id": 1301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1300,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "60934:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "60934:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "60933:9:0"
                  },
                  "scope": 1442,
                  "src": "60895:371:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    740
                  ],
                  "body": {
                    "id": 1364,
                    "nodeType": "Block",
                    "src": "61446:32:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 1359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "61460:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1360,
                                "name": "_get",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "61466:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "61466:6:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1362,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "61459:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 1358,
                        "id": 1363,
                        "nodeType": "Return",
                        "src": "61452:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1351,
                    "nodeType": "StructuredDocumentation",
                    "src": "61358:23:0",
                    "text": "@inheritdoc IOracle"
                  },
                  "functionSelector": "6d4ce63c",
                  "id": 1365,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "get",
                  "nameLocation": "61393:3:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1353,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "61413:8:0"
                  },
                  "parameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "61396:2:0"
                  },
                  "returnParameters": {
                    "id": 1358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1355,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1365,
                        "src": "61431:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1354,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "61431:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1357,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1365,
                        "src": "61437:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "61437:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "61430:15:0"
                  },
                  "scope": 1442,
                  "src": "61384:94:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    748
                  ],
                  "body": {
                    "id": 1382,
                    "nodeType": "Block",
                    "src": "61630:40:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "61644:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1377,
                                    "name": "_get",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1350,
                                    "src": "61657:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 1378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "61657:6:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "61650:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 1375,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "61650:6:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "61650:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "id": 1380,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "61643:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_int256_$",
                            "typeString": "tuple(bool,int256)"
                          }
                        },
                        "functionReturnParameters": 1373,
                        "id": 1381,
                        "nodeType": "Return",
                        "src": "61636:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1366,
                    "nodeType": "StructuredDocumentation",
                    "src": "61542:23:0",
                    "text": "@inheritdoc IOracle"
                  },
                  "functionSelector": "59e02dd7",
                  "id": 1383,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "peek",
                  "nameLocation": "61577:4:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1368,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "61598:8:0"
                  },
                  "parameters": {
                    "id": 1367,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "61581:2:0"
                  },
                  "returnParameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1370,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "61616:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1369,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "61616:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1372,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "61622:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1371,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "61622:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "61615:14:0"
                  },
                  "scope": 1442,
                  "src": "61568:102:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    754
                  ],
                  "body": {
                    "id": 1396,
                    "nodeType": "Block",
                    "src": "61837:32:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1392,
                                "name": "_get",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "61857:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "61857:6:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "61850:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 1390,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "61850:6:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "61850:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 1389,
                        "id": 1395,
                        "nodeType": "Return",
                        "src": "61843:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1384,
                    "nodeType": "StructuredDocumentation",
                    "src": "61742:23:0",
                    "text": "@inheritdoc IOracle"
                  },
                  "functionSelector": "50d25bcd",
                  "id": 1397,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestAnswer",
                  "nameLocation": "61777:12:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1386,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "61806:8:0"
                  },
                  "parameters": {
                    "id": 1385,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "61789:2:0"
                  },
                  "returnParameters": {
                    "id": 1389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1388,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "61831:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1397,
                        "src": "61824:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1387,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "61824:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "61823:13:0"
                  },
                  "scope": 1442,
                  "src": "61768:101:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    731
                  ],
                  "body": {
                    "id": 1440,
                    "nodeType": "Block",
                    "src": "61955:225:0",
                    "statements": [
                      {
                        "assignments": [
                          1406
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1406,
                            "mutability": "mutable",
                            "name": "ops",
                            "nameLocation": "61991:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1440,
                            "src": "61961:33:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IVault.UserBalanceOp[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1404,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1403,
                                  "name": "IVault.UserBalanceOp",
                                  "nameLocations": [
                                    "61961:6:0",
                                    "61968:13:0"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 316,
                                  "src": "61961:20:0"
                                },
                                "referencedDeclaration": 316,
                                "src": "61961:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBalanceOp_$316_storage_ptr",
                                  "typeString": "struct IVault.UserBalanceOp"
                                }
                              },
                              "id": 1405,
                              "nodeType": "ArrayTypeName",
                              "src": "61961:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_storage_$dyn_storage_ptr",
                                "typeString": "struct IVault.UserBalanceOp[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1413,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 1411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "62024:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "61997:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct IVault.UserBalanceOp memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1408,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1407,
                                  "name": "IVault.UserBalanceOp",
                                  "nameLocations": [
                                    "62001:6:0",
                                    "62008:13:0"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 316,
                                  "src": "62001:20:0"
                                },
                                "referencedDeclaration": 316,
                                "src": "62001:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBalanceOp_$316_storage_ptr",
                                  "typeString": "struct IVault.UserBalanceOp"
                                }
                              },
                              "id": 1409,
                              "nodeType": "ArrayTypeName",
                              "src": "62001:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_storage_$dyn_storage_ptr",
                                "typeString": "struct IVault.UserBalanceOp[]"
                              }
                            }
                          },
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "61997:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct IVault.UserBalanceOp memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "61961:65:0"
                      },
                      {
                        "expression": {
                          "id": 1421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1414,
                                "name": "ops",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1406,
                                "src": "62032:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct IVault.UserBalanceOp memory[] memory"
                                }
                              },
                              "id": 1416,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "62036:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "62032:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserBalanceOp_$316_memory_ptr",
                                "typeString": "struct IVault.UserBalanceOp memory"
                              }
                            },
                            "id": 1417,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "62039:4:0",
                            "memberName": "kind",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "62032:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserBalanceOpKind_$321",
                              "typeString": "enum IVault.UserBalanceOpKind"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 1418,
                                "name": "IVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 727,
                                "src": "62046:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVault_$727_$",
                                  "typeString": "type(contract IVault)"
                                }
                              },
                              "id": 1419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "62053:17:0",
                              "memberName": "UserBalanceOpKind",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 321,
                              "src": "62046:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_UserBalanceOpKind_$321_$",
                                "typeString": "type(enum IVault.UserBalanceOpKind)"
                              }
                            },
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "62071:17:0",
                            "memberName": "WITHDRAW_INTERNAL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 318,
                            "src": "62046:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserBalanceOpKind_$321",
                              "typeString": "enum IVault.UserBalanceOpKind"
                            }
                          },
                          "src": "62032:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserBalanceOpKind_$321",
                            "typeString": "enum IVault.UserBalanceOpKind"
                          }
                        },
                        "id": 1422,
                        "nodeType": "ExpressionStatement",
                        "src": "62032:56:0"
                      },
                      {
                        "expression": {
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1423,
                                "name": "ops",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1406,
                                "src": "62094:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct IVault.UserBalanceOp memory[] memory"
                                }
                              },
                              "id": 1425,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "62098:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "62094:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserBalanceOp_$316_memory_ptr",
                                "typeString": "struct IVault.UserBalanceOp memory"
                              }
                            },
                            "id": 1426,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "62101:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 313,
                            "src": "62094:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1429,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "62118:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BALWSTETHWETHOracle_$1442",
                                  "typeString": "contract BALWSTETHWETHOracle"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BALWSTETHWETHOracle_$1442",
                                  "typeString": "contract BALWSTETHWETHOracle"
                                }
                              ],
                              "id": 1428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "62110:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1427,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "62110:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "62110:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "62094:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1432,
                        "nodeType": "ExpressionStatement",
                        "src": "62094:29:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1437,
                              "name": "ops",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1406,
                              "src": "62171:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IVault.UserBalanceOp memory[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IVault.UserBalanceOp memory[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1434,
                                  "name": "BALANCER_VAULT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1296,
                                  "src": "62137:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1433,
                                "name": "IVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 727,
                                "src": "62130:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVault_$727_$",
                                  "typeString": "type(contract IVault)"
                                }
                              },
                              "id": 1435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "62130:22:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$727",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 1436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "62153:17:0",
                            "memberName": "manageUserBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 303,
                            "src": "62130:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_UserBalanceOp_$316_memory_ptr_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (struct IVault.UserBalanceOp memory[] memory) payable external"
                            }
                          },
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "62130:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1439,
                        "nodeType": "ExpressionStatement",
                        "src": "62130:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1398,
                    "nodeType": "StructuredDocumentation",
                    "src": "61895:31:0",
                    "text": "@inheritdoc IOracleValidate"
                  },
                  "functionSelector": "919840ad",
                  "id": 1441,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "check",
                  "nameLocation": "61938:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1399,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "61943:2:0"
                  },
                  "returnParameters": {
                    "id": 1400,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "61955:0:0"
                  },
                  "scope": 1442,
                  "src": "61929:251:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1443,
              "src": "60135:2047:0",
              "usedErrors": []
            }
          ],
          "src": "107:62076:0"
        },
        "id": 0
      }
    }
  },
  "compilerVersion": "0.8.19",
  "files": {
    "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol": "// SPDX-License-Identifier: AGPL-3.0-only\n// Using the same Copyleft License as in the original Repository\npragma solidity ^0.8.0;\n\n// import '@balancer-labs/v2-interfaces/contracts/vault/IVault.sol';\n// import './interfaces/IOracle.sol';\n// import './interfaces/IOracleValidate.sol';\n// import '../interfaces/IChainlinkAggregator.sol';\n// import '../interfaces/IBalancerStablePool.sol';\n// import {Errors} from '../protocol/libraries/helpers/Errors.sol';\n// import {Math} from '../dependencies/openzeppelin/contracts/Math.sol';\n\n// IAuthentication.sol\n\ninterface IAuthentication {\n    /**\n     * @dev Returns the action identifier associated with the external function described by `selector`.\n     */\n    function getActionId(bytes4 selector) external view returns (bytes32);\n}\n\n\n// ISignaturesValidator.sol\n/**\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\n */\ninterface ISignaturesValidator {\n    /**\n     * @dev Returns the EIP712 domain separator.\n     */\n    function getDomainSeparator() external view returns (bytes32);\n\n    /**\n     * @dev Returns the next nonce used by an address to sign messages.\n     */\n    function getNextNonce(address user) external view returns (uint256);\n}\n\n\n// ITemporarilyPausable.sol\n/**\n * @dev Interface for the TemporarilyPausable helper.\n */\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}\n\n\n// IECR20.sol\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// IWETH.sol\n\n/**\n * @dev Interface for WETH9.\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\n */\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n\n\n// IAsset.sol\n\n/**\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n * types.\n *\n * This concept is unrelated to a Pool's Asset Managers.\n */\ninterface IAsset {\n    // solhint-disable-previous-line no-empty-blocks\n}\n\n\n// IFlashLoanRecipient.sol\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n\n\n\n// IAuthorizer.sol\n\ninterface IAuthorizer {\n    /**\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     */\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) external view returns (bool);\n}\n\n\n// File: IProtocolFeesCollector.sol\ninterface IProtocolFeesCollector {\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\n\n    function withdrawCollectedFees(\n        IERC20[] calldata tokens,\n        uint256[] calldata amounts,\n        address recipient\n    ) external;\n\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\n\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\n\n    function getSwapFeePercentage() external view returns (uint256);\n\n    function getFlashLoanFeePercentage() external view returns (uint256);\n\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\n\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    function vault() external view returns (IVault);\n}\n\n\n\n\n// File: IVault.sol\n\n/**\n * @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n * don't override one of these declarations.\n */\ninterface IVault is ISignaturesValidator, ITemporarilyPausable, IAuthentication {\n    // Generalities about the Vault:\n    //\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\n    //\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\n    //\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\n\n    // Authorizer\n    //\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\n    // can perform a given action.\n\n    /**\n     * @dev Returns the Vault's Authorizer.\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n     *\n     * Emits an `AuthorizerChanged` event.\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n\n    /**\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    // Relayers\n    //\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\n    // this power, two things must occur:\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\n    //    functions.\n    //  - Each user must approve the relayer to act on their behalf.\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\n\n    /**\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\n     */\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\n\n    /**\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n     *\n     * Emits a `RelayerApprovalChanged` event.\n     */\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external;\n\n    /**\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\n     */\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\n\n    // Internal Balance\n    //\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n    //\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\n    // operations of different kinds, with different senders and recipients, at once.\n\n    /**\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\n     */\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\n\n    /**\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n     * it lets integrators reuse a user's Vault allowance.\n     *\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\n     */\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\n\n    /**\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\n     without manual WETH wrapping or unwrapping.\n     */\n    struct UserBalanceOp {\n        UserBalanceOpKind kind;\n        IAsset asset;\n        uint256 amount;\n        address sender;\n        address payable recipient;\n    }\n\n    // There are four possible operations in `manageUserBalance`:\n    //\n    // - DEPOSIT_INTERNAL\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\n    // relevant for relayers).\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - WITHDRAW_INTERNAL\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\n    // it to the recipient as ETH.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_INTERNAL\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_EXTERNAL\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\n    // relayers, as it lets them reuse a user's Vault allowance.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `ExternalBalanceTransfer` event.\n\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\n\n    /**\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n     * interacting with Pools using Internal Balance.\n     *\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n     * address.\n     */\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\n\n    /**\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\n     */\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\n\n    // Pools\n    //\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\n    // functionality:\n    //\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\n    // which increase with the number of registered tokens.\n    //\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\n    // independent of the number of registered tokens.\n    //\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\n\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\n\n    /**\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n     * changed.\n     *\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\n     *\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n     * multiple Pools may share the same contract.\n     *\n     * Emits a `PoolRegistered` event.\n     */\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\n\n    /**\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\n     */\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\n\n    /**\n     * @dev Returns a Pool's contract address and specialization setting.\n     */\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\n\n    /**\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n     * exit by receiving registered tokens, and can only swap registered tokens.\n     *\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n     * ascending order.\n     *\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\n     * Asset Manager should not be made lightly.\n     *\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n     * different Asset Manager.\n     *\n     * Emits a `TokensRegistered` event.\n     */\n    function registerTokens(\n        bytes32 poolId,\n        IERC20[] memory tokens,\n        address[] memory assetManagers\n    ) external;\n\n    /**\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\n     */\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\n\n    /**\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n     * must be deregistered in the same `deregisterTokens` call.\n     *\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n     *\n     * Emits a `TokensDeregistered` event.\n     */\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\n\n    /**\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\n     */\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\n\n    /**\n     * @dev Returns detailed information for a Pool's registered token.\n     *\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n     * equals the sum of `cash` and `managed`.\n     *\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n     * `managed` or `total` balance to be greater than 2^112 - 1.\n     *\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n     * change for this purpose, and will update `lastChangeBlock`.\n     *\n     * `assetManager` is the Pool's token Asset Manager.\n     */\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\n        external\n        view\n        returns (\n            uint256 cash,\n            uint256 managed,\n            uint256 lastChangeBlock,\n            address assetManager\n        );\n\n    /**\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n     * the tokens' `balances` changed.\n     *\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n     *\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n     * order as passed to `registerTokens`.\n     *\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n     * instead.\n     */\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            uint256[] memory balances,\n            uint256 lastChangeBlock\n        );\n\n    /**\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n     * Pool shares.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n     * these maximums.\n     *\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n     * back to the caller (not the sender, which is important for relayers).\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n     *\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\n     *\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n     * directly to the Pool's contract, as is `recipient`.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function joinPool(\n        bytes32 poolId,\n        address sender,\n        address recipient,\n        JoinPoolRequest memory request\n    ) external payable;\n\n    struct JoinPoolRequest {\n        IAsset[] assets;\n        uint256[] maxAmountsIn;\n        bytes userData;\n        bool fromInternalBalance;\n    }\n\n    /**\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n     * `getPoolTokenInfo`).\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n     * it just enforces these minimums.\n     *\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n     *\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n     * do so will trigger a revert.\n     *\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n     * `tokens` array. This array must match the Pool's registered tokens.\n     *\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n     * passed directly to the Pool's contract.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function exitPool(\n        bytes32 poolId,\n        address sender,\n        address payable recipient,\n        ExitPoolRequest memory request\n    ) external;\n\n    struct ExitPoolRequest {\n        IAsset[] assets;\n        uint256[] minAmountsOut;\n        bytes userData;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\n     */\n    event PoolBalanceChanged(\n        bytes32 indexed poolId,\n        address indexed liquidityProvider,\n        IERC20[] tokens,\n        int256[] deltas,\n        uint256[] protocolFeeAmounts\n    );\n\n    enum PoolBalanceChangeKind { JOIN, EXIT }\n\n    // Swaps\n    //\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\n    //\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\n    // individual swaps.\n    //\n    // There are two swap kinds:\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\n    //\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\n    // the final intended token.\n    //\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\n    // much less gas than they would otherwise.\n    //\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\n    // updating the Pool's internal accounting).\n    //\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\n    //\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\n    //\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\n    //\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\n\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    /**\n     * @dev Performs a swap with a single Pool.\n     *\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n     * taken from the Pool, which must be greater than or equal to `limit`.\n     *\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n     * sent to the Pool, which must be less than or equal to `limit`.\n     *\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\n     *\n     * Emits a `Swap` event.\n     */\n    function swap(\n        SingleSwap memory singleSwap,\n        FundManagement memory funds,\n        uint256 limit,\n        uint256 deadline\n    ) external payable returns (uint256);\n\n    /**\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n     * the `kind` value.\n     *\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        IAsset assetIn;\n        IAsset assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n     *\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n     * the same index in the `assets` array.\n     *\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n     * `amountOut` depending on the swap kind.\n     *\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n     *\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n     * or unwrapped from WETH by the Vault.\n     *\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\n     *\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n     * equivalent `swap` call.\n     *\n     * Emits `Swap` events.\n     */\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    /**\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\n     *\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n     * from the previous swap, depending on the swap kind.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\n     */\n    event Swap(\n        bytes32 indexed poolId,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    /**\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n     * `recipient` account.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n     * `joinPool`.\n     *\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n     * transferred. This matches the behavior of `exitPool`.\n     *\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n     * revert.\n     */\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n     *\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n     * receives are the same that an equivalent `batchSwap` call would receive.\n     *\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n     * approve them for the Vault, or even know a user's address.\n     *\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n     * eth_call instead of eth_sendTransaction.\n     */\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds\n    ) external returns (int256[] memory assetDeltas);\n\n    // Flash Loans\n\n    /**\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\n     *\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n     * for each token contract. `tokens` must be sorted in ascending order.\n     *\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n     * `receiveFlashLoan` call.\n     *\n     * Emits `FlashLoan` events.\n     */\n    function flashLoan(\n        IFlashLoanRecipient recipient,\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        bytes memory userData\n    ) external;\n\n    /**\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\n     */\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\n\n    // Asset Management\n    //\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\n    //\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\n    //\n    // This concept is unrelated to the IAsset interface.\n\n    /**\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n     *\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\n     * operations of different kinds, with different Pools and tokens, at once.\n     *\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\n     */\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\n\n    struct PoolBalanceOp {\n        PoolBalanceOpKind kind;\n        bytes32 poolId;\n        IERC20 token;\n        uint256 amount;\n    }\n\n    /**\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n     *\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n     *\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\n     */\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\n\n    /**\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\n     */\n    event PoolBalanceManaged(\n        bytes32 indexed poolId,\n        address indexed assetManager,\n        IERC20 indexed token,\n        int256 cashDelta,\n        int256 managedDelta\n    );\n\n    // Protocol Fees\n    //\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\n    // permissioned accounts.\n    //\n    // There are two kinds of protocol fees:\n    //\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\n    //\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\n    // exiting a Pool in debt without first paying their share.\n\n    /**\n     * @dev Returns the current protocol fee module.\n     */\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\n\n    /**\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n     * error in some part of the system.\n     *\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n     *\n     * While the contract is paused, the following features are disabled:\n     * - depositing and transferring internal balance\n     * - transferring external balance (using the Vault's allowance)\n     * - swaps\n     * - joining Pools\n     * - Asset Manager interactions\n     *\n     * Internal Balance can still be withdrawn, and Pools exited.\n     */\n    function setPaused(bool paused) external;\n\n    /**\n     * @dev Returns the Vault's WETH instance.\n     */\n    function WETH() external view returns (IWETH);\n    // solhint-disable-previous-line func-name-mixedcase\n}\n\n\n// IOracleValidate.sol\ninterface IOracleValidate {\n  /// @notice Check the oracle (re-entrancy)\n  function check() external;\n}\n\n\n\n// IOracle.sol\n\ninterface IOracle {\n  /// @notice Get the latest price.\n  /// @return success if no valid (recent) rate is available, return false else true.\n  /// @return rate The rate of the requested asset / pair / pool.\n  function get() external returns (bool success, uint256 rate);\n\n  /// @notice Check the last price without any state changes.\n  /// @return success if no valid (recent) rate is available, return false else true.\n  /// @return rate The rate of the requested asset / pair / pool.\n  function peek() external view returns (bool success, int256 rate);\n\n  /// @notice Check the current spot price without any state changes. For oracles like TWAP this will be different from peek().\n  /// @return rate The rate of the requested asset / pair / pool.\n  function latestAnswer() external view returns (int256 rate);\n}\n\n// IChainlinkAggregator.sol\n\ninterface IChainlinkAggregator {\n  function decimals() external view returns (uint8);\n\n  function latestAnswer() external view returns (int256);\n\n  function latestTimestamp() external view returns (uint256);\n\n  function latestRound() external view returns (uint256);\n\n  function getAnswer(uint256 roundId) external view returns (int256);\n\n  function getTimestamp(uint256 roundId) external view returns (uint256);\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\n  event NewRound(uint256 indexed roundId, address indexed startedBy);\n}\n\n\n\n// File: IBalancerStablePool.sol\ninterface IBalancerStablePool {\n  function getRate() external view returns (uint256);\n}\n\n\n\n// File: Errors.sol\n\n\n/**\n * @title Errors library\n * @author Sturdy, inspiration from Aave\n * @notice Defines the error messages emitted by the different contracts of the Sturdy protocol\n * @dev Error messages prefix glossary:\n *  - VL = ValidationLogic\n *  - MATH = Math libraries\n *  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)\n *  - AT = AToken\n *  - SDT = StableDebtToken\n *  - VDT = VariableDebtToken\n *  - LP = LendingPool\n *  - LPAPR = LendingPoolAddressesProviderRegistry\n *  - LPC = LendingPoolConfiguration\n *  - RL = ReserveLogic\n *  - LPCM = LendingPoolCollateralManager\n *  - P = Pausable\n */\nlibrary Errors {\n  //common errors\n  string internal constant CALLER_NOT_POOL_ADMIN = '33'; // 'The caller must be the pool admin'\n  string internal constant BORROW_ALLOWANCE_NOT_ENOUGH = '59'; // User borrows on behalf, but allowance are too small\n\n  //contract specific errors\n  string internal constant VL_INVALID_AMOUNT = '1'; // 'Amount must be greater than 0'\n  string internal constant VL_NO_ACTIVE_RESERVE = '2'; // 'Action requires an active reserve'\n  string internal constant VL_RESERVE_FROZEN = '3'; // 'Action cannot be performed because the reserve is frozen'\n  string internal constant VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH = '4'; // 'The current liquidity is not enough'\n  string internal constant VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE = '5'; // 'User cannot withdraw more than the available balance'\n  string internal constant VL_TRANSFER_NOT_ALLOWED = '6'; // 'Transfer cannot be allowed.'\n  string internal constant VL_BORROWING_NOT_ENABLED = '7'; // 'Borrowing is not enabled'\n  string internal constant VL_INVALID_INTEREST_RATE_MODE_SELECTED = '8'; // 'Invalid interest rate mode selected'\n  string internal constant VL_COLLATERAL_BALANCE_IS_0 = '9'; // 'The collateral balance is 0'\n  string internal constant VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = '10'; // 'Health factor is lesser than the liquidation threshold'\n  string internal constant VL_COLLATERAL_CANNOT_COVER_NEW_BORROW = '11'; // 'There is not enough collateral to cover a new borrow'\n  string internal constant VL_STABLE_BORROWING_NOT_ENABLED = '12'; // stable borrowing not enabled\n  string internal constant VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY = '13'; // collateral is (mostly) the same currency that is being borrowed\n  string internal constant VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE = '14'; // 'The requested amount is greater than the max loan size in stable rate mode\n  string internal constant VL_NO_DEBT_OF_SELECTED_TYPE = '15'; // 'for repayment of stable debt, the user needs to have stable debt, otherwise, he needs to have variable debt'\n  string internal constant VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF = '16'; // 'To repay on behalf of an user an explicit amount to repay is needed'\n  string internal constant VL_NO_STABLE_RATE_LOAN_IN_RESERVE = '17'; // 'User does not have a stable rate loan in progress on this reserve'\n  string internal constant VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE = '18'; // 'User does not have a variable rate loan in progress on this reserve'\n  string internal constant VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0 = '19'; // 'The underlying balance needs to be greater than 0'\n  string internal constant VL_DEPOSIT_ALREADY_IN_USE = '20'; // 'User deposit is already being used as collateral'\n  string internal constant LP_NOT_ENOUGH_STABLE_BORROW_BALANCE = '21'; // 'User does not have any stable rate loan for this reserve'\n  string internal constant LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET = '22'; // 'Interest rate rebalance conditions were not met'\n  string internal constant LP_LIQUIDATION_CALL_FAILED = '23'; // 'Liquidation call failed'\n  string internal constant LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW = '24'; // 'There is not enough liquidity available to borrow'\n  string internal constant LP_REQUESTED_AMOUNT_TOO_SMALL = '25'; // 'The requested amount is too small for a FlashLoan.'\n  string internal constant LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE = '26'; // 'The actual balance of the protocol is inconsistent'\n  string internal constant LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR = '27'; // 'The caller of the function is not the lending pool configurator'\n  string internal constant LP_INCONSISTENT_FLASHLOAN_PARAMS = '28';\n  string internal constant CT_CALLER_MUST_BE_LENDING_POOL = '29'; // 'The caller of this function must be a lending pool'\n  string internal constant CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF = '30'; // 'User cannot give allowance to himself'\n  string internal constant CT_TRANSFER_AMOUNT_NOT_GT_0 = '31'; // 'Transferred amount needs to be greater than zero'\n  string internal constant RL_RESERVE_ALREADY_INITIALIZED = '32'; // 'Reserve has already been initialized'\n  string internal constant LPC_RESERVE_LIQUIDITY_NOT_0 = '34'; // 'The liquidity of the reserve needs to be 0'\n  string internal constant LPC_INVALID_ATOKEN_POOL_ADDRESS = '35'; // 'The liquidity of the reserve needs to be 0'\n  string internal constant LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS = '36'; // 'The liquidity of the reserve needs to be 0'\n  string internal constant LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS = '37'; // 'The liquidity of the reserve needs to be 0'\n  string internal constant LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '38'; // 'The liquidity of the reserve needs to be 0'\n  string internal constant LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '39'; // 'The liquidity of the reserve needs to be 0'\n  string internal constant LPC_INVALID_ADDRESSES_PROVIDER_ID = '40'; // 'The liquidity of the reserve needs to be 0'\n  string internal constant LPC_INVALID_CONFIGURATION = '75'; // 'Invalid risk parameters for the reserve'\n  string internal constant LPC_CALLER_NOT_EMERGENCY_ADMIN = '76'; // 'The caller must be the emergency admin'\n  string internal constant LPAPR_PROVIDER_NOT_REGISTERED = '41'; // 'Provider is not registered'\n  string internal constant LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD = '42'; // 'Health factor is not below the threshold'\n  string internal constant LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED = '43'; // 'The collateral chosen cannot be liquidated'\n  string internal constant LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = '44'; // 'User did not borrow the specified currency'\n  string internal constant LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE = '45'; // \"There isn't enough liquidity available to liquidate\"\n  string internal constant LPCM_NO_ERRORS = '46'; // 'No errors'\n  string internal constant LP_INVALID_FLASHLOAN_MODE = '47'; //Invalid flashloan mode selected\n  string internal constant MATH_MULTIPLICATION_OVERFLOW = '48';\n  string internal constant MATH_ADDITION_OVERFLOW = '49';\n  string internal constant MATH_DIVISION_BY_ZERO = '50';\n  string internal constant RL_LIQUIDITY_INDEX_OVERFLOW = '51'; //  Liquidity index overflows uint128\n  string internal constant RL_VARIABLE_BORROW_INDEX_OVERFLOW = '52'; //  Variable borrow index overflows uint128\n  string internal constant RL_LIQUIDITY_RATE_OVERFLOW = '53'; //  Liquidity rate overflows uint128\n  string internal constant RL_VARIABLE_BORROW_RATE_OVERFLOW = '54'; //  Variable borrow rate overflows uint128\n  string internal constant RL_STABLE_BORROW_RATE_OVERFLOW = '55'; //  Stable borrow rate overflows uint128\n  string internal constant CT_INVALID_MINT_AMOUNT = '56'; //invalid amount to mint\n  string internal constant LP_FAILED_REPAY_WITH_COLLATERAL = '57';\n  string internal constant CT_INVALID_BURN_AMOUNT = '58'; //invalid amount to burn\n  string internal constant LP_FAILED_COLLATERAL_SWAP = '60';\n  string internal constant LP_INVALID_EQUAL_ASSETS_TO_SWAP = '61';\n  string internal constant LP_REENTRANCY_NOT_ALLOWED = '62';\n  string internal constant LP_CALLER_MUST_BE_AN_ATOKEN = '63';\n  string internal constant LP_IS_PAUSED = '64'; // 'Pool is paused'\n  string internal constant LP_NO_MORE_RESERVES_ALLOWED = '65';\n  string internal constant LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN = '66';\n  string internal constant RC_INVALID_LTV = '67';\n  string internal constant RC_INVALID_LIQ_THRESHOLD = '68';\n  string internal constant RC_INVALID_LIQ_BONUS = '69';\n  string internal constant RC_INVALID_DECIMALS = '70';\n  string internal constant RC_INVALID_RESERVE_FACTOR = '71';\n  string internal constant LPAPR_INVALID_ADDRESSES_PROVIDER_ID = '72';\n  string internal constant VL_INCONSISTENT_FLASHLOAN_PARAMS = '73';\n  string internal constant LP_INCONSISTENT_PARAMS_LENGTH = '74';\n  string internal constant UL_INVALID_INDEX = '77';\n  string internal constant LP_NOT_CONTRACT = '78';\n  string internal constant SDT_STABLE_DEBT_OVERFLOW = '79';\n  string internal constant SDT_BURN_EXCEEDS_BALANCE = '80';\n  string internal constant VT_COLLATERAL_DEPOSIT_REQUIRE_ETH = '81'; //Only accept ETH for collateral deposit\n  string internal constant VT_COLLATERAL_DEPOSIT_INVALID = '82'; //Collateral deposit failed\n  string internal constant VT_LIQUIDITY_DEPOSIT_INVALID = '83'; //Only accept USDC, USDT, DAI for liquidity deposit\n  string internal constant VT_COLLATERAL_WITHDRAW_INVALID = '84'; //Collateral withdraw failed\n  string internal constant VT_COLLATERAL_WITHDRAW_INVALID_AMOUNT = '85'; //Collateral withdraw has not enough amount\n  string internal constant VT_CONVERT_ASSET_BY_CURVE_INVALID = '86'; //Convert asset by curve invalid\n  string internal constant VT_PROCESS_YIELD_INVALID = '87'; //Processing yield is invalid\n  string internal constant VT_TREASURY_INVALID = '88'; //Treasury is invalid\n  string internal constant LP_ATOKEN_INIT_INVALID = '89'; //aToken invalid init\n  string internal constant VT_FEE_TOO_BIG = '90'; //Fee is too big\n  string internal constant VT_COLLATERAL_DEPOSIT_VAULT_UNAVAILABLE = '91';\n  string internal constant LP_LIQUIDATION_CONVERT_FAILED = '92';\n  string internal constant VT_DEPLOY_FAILED = '93'; // Vault deploy failed\n  string internal constant VT_INVALID_CONFIGURATION = '94'; // Invalid vault configuration\n  string internal constant VL_OVERFLOW_MAX_RESERVE_CAPACITY = '95'; // overflow max capacity of reserve\n  string internal constant VT_WITHDRAW_AMOUNT_MISMATCH = '96'; // not performed withdraw 100%\n  string internal constant VT_SWAP_MISMATCH_RETURNED_AMOUNT = '97'; //Returned amount is not enough\n  string internal constant CALLER_NOT_YIELD_PROCESSOR = '98'; // 'The caller must be the pool admin'\n  string internal constant VT_EXTRA_REWARDS_INDEX_INVALID = '99'; // Invalid extraRewards index\n  string internal constant VT_SWAP_PATH_LENGTH_INVALID = '100'; // Invalid token or fee length\n  string internal constant VT_SWAP_PATH_TOKEN_INVALID = '101'; // Invalid token information\n  string internal constant CLAIMER_UNAUTHORIZED = '102'; // 'The claimer is not authorized'\n  string internal constant YD_INVALID_CONFIGURATION = '103'; // 'The yield distribution's invalid configuration'\n  string internal constant CALLER_NOT_EMISSION_MANAGER = '104'; // 'The caller must be emission manager'\n  string internal constant CALLER_NOT_INCENTIVE_CONTROLLER = '105'; // 'The caller must be incentive controller'\n  string internal constant YD_VR_ASSET_ALREADY_IN_USE = '106'; // Vault is already registered\n  string internal constant YD_VR_INVALID_VAULT = '107'; // Invalid vault is used for an asset\n  string internal constant YD_VR_INVALID_REWARDS_AMOUNT = '108'; // Rewards amount should be bigger than before\n  string internal constant YD_VR_REWARD_TOKEN_NOT_VALID = '109'; // The reward token must be same with configured address\n  string internal constant YD_VR_ASSET_NOT_REGISTERED = '110';\n  string internal constant YD_VR_CALLER_NOT_VAULT = '111'; // The caller must be same with configured vault address\n  string internal constant LS_INVALID_CONFIGURATION = '112'; // Invalid Leverage Swapper configuration\n  string internal constant LS_SWAP_AMOUNT_NOT_GT_0 = '113'; // Collateral amount needs to be greater than zero\n  string internal constant LS_BORROWING_ASSET_NOT_SUPPORTED = '114'; // Doesn't support swap for the borrowing asset\n  string internal constant LS_SUPPLY_NOT_ALLOWED = '115'; // no sufficient funds\n  string internal constant LS_SUPPLY_FAILED = '116'; // Deposit fails when leverage works\n  string internal constant LS_REPAY_FAILED = '117'; // Repay fails when leverage works\n  string internal constant O_WRONG_PRICE = '118'; // not correct price oracle\n\n  enum CollateralManagerErrors {\n    NO_ERROR,\n    NO_COLLATERAL_AVAILABLE,\n    COLLATERAL_CANNOT_BE_LIQUIDATED,\n    CURRRENCY_NOT_BORROWED,\n    HEALTH_FACTOR_ABOVE_THRESHOLD,\n    NOT_ENOUGH_LIQUIDITY,\n    NO_ACTIVE_RESERVE,\n    HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD,\n    INVALID_EQUAL_ASSETS_TO_SWAP,\n    FROZEN_RESERVE\n  }\n}\n\n\n\n// File: Math.sol\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n  /**\n   * @dev Returns the largest of two numbers.\n   */\n  function max(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a >= b ? a : b;\n  }\n\n  /**\n   * @dev Returns the smallest of two numbers.\n   */\n  function min(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a < b ? a : b;\n  }\n\n  /**\n   * @dev Returns the average of two numbers. The result is rounded towards\n   * zero.\n   */\n  function average(uint256 a, uint256 b) internal pure returns (uint256) {\n    // (a + b) / 2 can overflow.\n    return (a & b) + (a ^ b) / 2;\n  }\n\n  /**\n   * @dev Returns the ceiling of the division of two numbers.\n   *\n   * This differs from standard division with `/` in that it rounds up instead\n   * of rounding down.\n   */\n  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n    // (a + b - 1) / b can overflow on addition, so we distribute.\n    return a / b + (a % b == 0 ? 0 : 1);\n  }\n}\n\n\n/**\n * @dev Oracle contract for BALWSTETHWETH LP Token\n */\ncontract BALWSTETHWETHOracle is IOracle, IOracleValidate {\n  IBalancerStablePool private constant BALWSTETHWETH =\n    IBalancerStablePool(0x32296969Ef14EB0c6d29669C550D4a0449130230);\n\n  //custom:consol {STETH.latestRoundData() returns (roundId, answer, startedAt, updatedAt, answeredInRound) ensures {(updatedAt > block.timestamp - 1 days) && (answer > 0)}}\n\n  IChainlinkAggregator private constant STETH =\n    IChainlinkAggregator(0x86392dC19c0b719886221c78AB11eb8Cf5c52812);\n  address private constant BALANCER_VAULT = 0xBA12222222228d8Ba445958a75a0704d566BF2C8;\n\n  /**\n   * @dev Get LP Token Price\n   */\n\n  /// @custom:consol {_get() returns (ret) ensures {(ret * 95 / 100 < BALWSTETHWETH.getLatest(1)) && (ret * 105 / 100 > BALWSTETHWETH.getLatest(1))}}\n  function _get() internal view returns (uint256) {\n    (, int256 stETHPrice, , uint256 updatedAt, ) = STETH.latestRoundData();\n    require(updatedAt > block.timestamp - 1 days, Errors.O_WRONG_PRICE);\n    require(stETHPrice > 0, Errors.O_WRONG_PRICE);\n\n    uint256 minValue = Math.min(uint256(stETHPrice), 1e18);\n\n    return (BALWSTETHWETH.getRate() * minValue) / 1e18;\n  }\n\n  // Get the latest exchange rate, if no valid (recent) rate is available, return false\n  /// @inheritdoc IOracle\n  function get() external view override returns (bool, uint256) {\n    return (true, _get());\n  }\n\n  // Check the last exchange rate without any state changes\n  /// @inheritdoc IOracle\n  function peek() external view override returns (bool, int256) {\n    return (true, int256(_get()));\n  }\n\n  // Check the current spot exchange rate without any state changes\n  /// @inheritdoc IOracle\n  function latestAnswer() external view override returns (int256 rate) {\n    return int256(_get());\n  }\n\n  // Check the oracle\n  /// @inheritdoc IOracleValidate\n  function check() external {\n    IVault.UserBalanceOp[] memory ops = new IVault.UserBalanceOp[](1);\n    ops[0].kind = IVault.UserBalanceOpKind.WITHDRAW_INTERNAL;\n    ops[0].sender = address(this);\n\n    IVault(BALANCER_VAULT).manageUserBalance(ops);\n  }\n}\n"
  },
  "resolvedFileNames": {
    "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol": "../eval-data/hacks/read-only-reentrancy-sturdy-800K/lib/BALWSTETHWETHOracle.sol"
  },
  "inferredRemappings": {}
}